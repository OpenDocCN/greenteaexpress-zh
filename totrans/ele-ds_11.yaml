- en: Relationships
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://allendowney.github.io/ElementsOfDataScience/09_relationships.html](https://allendowney.github.io/ElementsOfDataScience/09_relationships.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Click here to run this notebook on Colab](https://colab.research.google.com/github/AllenDowney/ElementsOfDataScience/blob/master/09_relationships.ipynb)
    or [click here to download it](https://github.com/AllenDowney/ElementsOfDataScience/raw/master/09_relationships.ipynb).'
  prefs: []
  type: TYPE_NORMAL
- en: This chapter explores relationships between variables.
  prefs: []
  type: TYPE_NORMAL
- en: We will visualize relationships using scatter plots, box plots, and violin plots,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And we will quantify relationships using correlation and simple regression.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The most important lesson in this chapter is that you should always visualize
    the relationship between variables before you try to quantify it; otherwise, you
    are likely to be misled.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring relationships
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: So far we have mostly considered one variable at a time. Now it’s time to explore
    relationships between variables. As a first example, we’ll look at the relationship
    between height and weight.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll use data from the Behavioral Risk Factor Surveillance System (BRFSS),
    which is run by the Centers for Disease Control at [https://www.cdc.gov/brfss](https://www.cdc.gov/brfss).
    The survey includes more than 400,000 respondents, but to keep things manageable,
    we’ll work with a random subsample of 100,000.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Here are the first few rows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '|  | SEX | HTM4 | WTKG3 | INCOME2 | _LLCPWT | _AGEG5YR | _VEGESU1 | _HTMG10
    | AGE |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 96230 | 2.0 | 160.0 | 60.33 | 8.0 | 1398.525290 | 6.0 | 2.14 | 150.0 | 47.0
    |'
  prefs: []
  type: TYPE_TB
- en: '| 244920 | 2.0 | 163.0 | 58.97 | 5.0 | 84.057503 | 13.0 | 3.14 | 160.0 | 89.5
    |'
  prefs: []
  type: TYPE_TB
- en: '| 57312 | 2.0 | 163.0 | 72.57 | 8.0 | 390.248599 | 5.0 | 2.64 | 160.0 | 42.0
    |'
  prefs: []
  type: TYPE_TB
- en: '| 32573 | 2.0 | 165.0 | 74.84 | 1.0 | 11566.705300 | 3.0 | 1.46 | 160.0 | 32.0
    |'
  prefs: []
  type: TYPE_TB
- en: '| 355929 | 2.0 | 170.0 | 108.86 | 3.0 | 844.485450 | 3.0 | 1.81 | 160.0 | 32.0
    |'
  prefs: []
  type: TYPE_TB
- en: The BRFSS includes hundreds of variables. For the examples in this chapter,
    we’ll work with just nine. The ones we’ll start with are `HTM4`, which records
    each respondent’s height in cm, and `WTKG3`, which records weight in kg.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: To visualize the relationship between these variables, we’ll make a **scatter
    plot**, which shows one marker for each pair of values. Scatter plots are common
    and readily understood, but they are surprisingly hard to get right.
  prefs: []
  type: TYPE_NORMAL
- en: As a first attempt, we’ll use `plot` with the style string `o`, which plots
    a circle for each data point.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_11_0.png](../Images/0417d7dc0b672dd4d053b67a4f13a952.png)'
  prefs: []
  type: TYPE_IMG
- en: Each marker represents the height and weight of one person.
  prefs: []
  type: TYPE_NORMAL
- en: Based on the shape of the result, it looks like taller people are heavier, but
    there are a few things about this plot that make it hard to interpret. Most importantly,
    it is **overplotted**, which means that there are markers piled on top of each
    other so you can’t tell where there are a lot of data points and where there is
    just one. When that happens, the results can be seriously misleading.
  prefs: []
  type: TYPE_NORMAL
- en: One way to improve the plot is to use transparency, which we can do with the
    keyword argument `alpha`. The lower the value of alpha, the more transparent each
    data point is.
  prefs: []
  type: TYPE_NORMAL
- en: Here’s what it looks like with `alpha=0.02`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_13_0.png](../Images/7b226a84851e1bad24d510a575ad27e5.png)'
  prefs: []
  type: TYPE_IMG
- en: This is better, but there are so many data points, the scatter plot is still
    overplotted. The next step is to make the markers smaller. With `markersize=1`
    and a low value of alpha, the scatter plot is less saturated. Here’s what it looks
    like.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_15_0.png](../Images/07e2449e50ef69aa705840b80a110dc3.png)'
  prefs: []
  type: TYPE_IMG
- en: Again, this is better, but now we can see that the points fall in discrete columns.
    That’s because most heights were reported in inches and converted to centimeters.
    We can break up the columns by adding some random noise to the values; in effect,
    we are filling in the values that got rounded off. Adding random noise like this
    is called **jittering**.
  prefs: []
  type: TYPE_NORMAL
- en: We can use NumPy to add noise from a normal distribution with mean 0 and standard
    deviation 2.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Here’s what the plot looks like with jittered heights.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_19_0.png](../Images/4685fab19750b500644159c3d95188b9.png)'
  prefs: []
  type: TYPE_IMG
- en: The columns are gone, but now we can see that there are rows where people rounded
    off their weight. We can fix that by jittering weight, too.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_22_0.png](../Images/e36d0a757b177922ec022735b88b7693.png)'
  prefs: []
  type: TYPE_IMG
- en: Finally, let’s zoom in on the area where most of the data points are.
  prefs: []
  type: TYPE_NORMAL
- en: The functions `xlim` and `ylim` set the lower and upper bounds for the \(x\)
    and \(y\)-axis; in this case, we plot heights from 140 to 200 centimeters and
    weights up to 160 kilograms.
  prefs: []
  type: TYPE_NORMAL
- en: Here’s what it looks like.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_24_0.png](../Images/b594186e8e53e753a4be459cc9bb08b8.png)'
  prefs: []
  type: TYPE_IMG
- en: Now we have a reliable picture of the relationship between height and weight.
  prefs: []
  type: TYPE_NORMAL
- en: Below you can see the misleading plot we started with and the more reliable
    one we ended with. They are clearly different, and they suggest different relationships
    between these variables.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_26_0.png](../Images/8d3908a46b10416fbedf55126e0389ae.png)'
  prefs: []
  type: TYPE_IMG
- en: The point of this example is that it takes some effort to make an effective
    scatter plot.
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise:** Do people tend to gain weight as they get older? We can answer
    this question by visualizing the relationship between weight and age.'
  prefs: []
  type: TYPE_NORMAL
- en: But before we make a scatter plot, it is a good idea to visualize distributions
    one variable at a time. So let’s look at the distribution of age.
  prefs: []
  type: TYPE_NORMAL
- en: The BRFSS dataset includes a column, `AGE`, which represents each respondent’s
    age in years. To protect respondents’ privacy, ages are rounded off into 5-year
    bins. `AGE` contains the midpoint of the bins.
  prefs: []
  type: TYPE_NORMAL
- en: Extract the variable `'AGE'` from the DataFrame `brfss` and assign it to `age`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plot the PMF of `age` as a bar chart, using `Pmf` from `empiricaldist`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '**Exercise:** Now let’s look at the distribution of weight. The column that
    contains weight in kilograms is `WTKG3`. Because this column contains many unique
    values, displaying it as a PMF doesn’t work very well.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_33_0.png](../Images/fa5eca877cefa3c36996fc7e39e22787.png)'
  prefs: []
  type: TYPE_IMG
- en: To get a better view of this distribution, try plotting the CDF.
  prefs: []
  type: TYPE_NORMAL
- en: Compute the CDF of a normal distribution with the same mean and standard deviation,
    and compare it with the distribution of weight. Is the normal distribution a good
    model for this data? What about log-transformed weights?
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise:** Now let’s make a scatter plot of `weight` versus `age`. Adjust
    `alpha` and `markersize` to avoid overplotting. Use `ylim` to limit the `y` axis
    from 0 to 200 kilograms.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise:** In the previous exercise, the ages fall in columns because they’ve
    been rounded into 5-year bins. If we jitter them, the scatter plot will show the
    relationship more clearly.'
  prefs: []
  type: TYPE_NORMAL
- en: Add random noise to `age` with mean `0` and standard deviation `2.5`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make a scatter plot and adjust `alpha` and `markersize` again.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualizing relationships
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the previous section we used scatter plots to visualize relationships between
    variables, and in the exercises, you explored the relationship between age and
    weight. In this section, we’ll see other ways to visualize these relationships,
    including boxplots and violin plots.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start with a scatter plot of weight versus age.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_45_0.png](../Images/a50f46ab10afc40a0a690a4da0d9af81.png)'
  prefs: []
  type: TYPE_IMG
- en: In this version of the scatter plot, the weights are jittered, but there’s still
    space between the columns. That makes it possible to see the shape of the distribution
    in each age group, and the differences between groups. With this view, it looks
    like weight increases until age 40 or 50, and then starts to decrease.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we take this idea one step farther, we can use KDE to estimate the density
    function in each column and plot it. And there’s a name for that; it’s called
    a **violin plot**. Seaborn provides a function that makes violin plots, but before
    we can use it, we have to get rid of any rows with missing data. Here’s how:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '`dropna()` creates a new DataFrame that drops the rows in `brfss` where `AGE`
    or `WTKG3` are `NaN`. Now we can call `violinplot`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_49_0.png](../Images/fe1e5b44ac02b33d284b3b2fd43bc087.png)'
  prefs: []
  type: TYPE_IMG
- en: The `x` and `y` arguments mean we want `AGE` on the x-axis and `WTKG3` on the
    y-axis. `data` is the DataFrame we just created, which contains the variables
    we’re going to plot. The argument `inner=None` simplifies the plot a little.
  prefs: []
  type: TYPE_NORMAL
- en: In the figure, each shape represents the distribution of weight in one age group.
    The width of these shapes is proportional to the estimated density, so it’s like
    two vertical KDEs plotted back to back.
  prefs: []
  type: TYPE_NORMAL
- en: Another, related way to look at data like this is called a **box plot**, which
    represents summary statistics for the values in each group.
  prefs: []
  type: TYPE_NORMAL
- en: The code to generate a box plot is very similar.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_51_0.png](../Images/7e87973eda9a7d48126c43c0c368a578.png)'
  prefs: []
  type: TYPE_IMG
- en: The argument `whis=10` turns off a feature we don’t need. If you are curious
    about it, you can [read the documentation](https://seaborn.pydata.org/generated/seaborn.boxplot.html).
  prefs: []
  type: TYPE_NORMAL
- en: Each box represents the distribution of weight in an age group. The height of
    each box represents the range from the 25th to the 75th percentile. The line in
    the middle of each box is the median. The spines sticking out of the top and bottom
    show the minimum and maximum values.
  prefs: []
  type: TYPE_NORMAL
- en: In my opinion, this plot gives us the best view of the relationship between
    weight and age.
  prefs: []
  type: TYPE_NORMAL
- en: Looking at the medians, it seems like people in their 40s are the heaviest;
    younger and older people are lighter.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Looking at the sizes of the boxes, it seems like people in their 40s have the
    most variability in weight, too.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These plots also show how skewed the distribution of weight is; that is, the
    heaviest people are much farther from the median than the lightest people.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For data that skews toward higher values, it is sometimes useful to look at
    it on a logarithmic scale. We can do that with the Pyplot function `yscale`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_53_0.png](../Images/93107d54504b014bbf0d7e7e7f82ea89.png)'
  prefs: []
  type: TYPE_IMG
- en: On a log scale, the distributions are symmetric, so the spines are the same
    length, the boxes are close to the middle of the figure, and we can see the relationship
    between age and weight more clearly.
  prefs: []
  type: TYPE_NORMAL
- en: In the following exercises, you’ll have a chance to generate violin and box
    plots for other variables.
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise:** Previously we looked at a scatter plot of height and weight,
    and saw that taller people tend to be heavier. Now let’s take a closer look using
    a box plot. The `brfss` DataFrame contains a column named `_HTMG10` that represents
    height in centimeters, binned into 10 cm groups.'
  prefs: []
  type: TYPE_NORMAL
- en: Make a boxplot that shows the distribution of weight in each height group.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plot the y-axis on a logarithmic scale.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Suggestion: If the labels on the `x` axis collide, you can rotate them like
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '**Exercise:** As a second example, let’s look at the relationship between income
    and height.'
  prefs: []
  type: TYPE_NORMAL
- en: In the BRFSS, income is represented as a categorical variable; that is, respondents
    are assigned to one of 8 income categories. The column name is `INCOME2`.
  prefs: []
  type: TYPE_NORMAL
- en: Before we connect income with anything else, let’s look at the distribution
    by computing the PMF.
  prefs: []
  type: TYPE_NORMAL
- en: Extract `INCOME2` from `brfss` and assign it to `income`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plot the PMF of `income` as a bar chart.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Note: You will see that about a third of the respondents are in the highest
    income group; ideally, it would be better if there were more groups at the high
    end, but we’ll work with what we have.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise:** Generate a violin plot that shows the distribution of height
    in each income group. Can you see a relationship between these variables?'
  prefs: []
  type: TYPE_NORMAL
- en: Quantifying Correlation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the previous section, we visualized relationships between pairs of variables.
    Now we’ll learn about the **coefficient of correlation**, which quantifies the
    strength of these relationships.
  prefs: []
  type: TYPE_NORMAL
- en: When people say “correlation” casually, they might mean any relationship between
    two variables. In statistics, it usually means Pearson’s correlation coefficient,
    which is a number between `-1` and `1` that quantifies the strength of a linear
    relationship between variables.
  prefs: []
  type: TYPE_NORMAL
- en: 'To demonstrate, we’ll select three columns from the BRFSS dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is a DataFrame with just those columns. With this subset of the
    data, we can use the `corr` method, like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '|  | HTM4 | WTKG3 | AGE |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| HTM4 | 1.000000 | 0.474203 | -0.093684 |'
  prefs: []
  type: TYPE_TB
- en: '| WTKG3 | 0.474203 | 1.000000 | 0.021641 |'
  prefs: []
  type: TYPE_TB
- en: '| AGE | -0.093684 | 0.021641 | 1.000000 |'
  prefs: []
  type: TYPE_TB
- en: The result is a **correlation matrix**. Reading across the first row, the correlation
    of `HTM4` with itself is `1`. That’s expected; the correlation of anything with
    itself is `1`.
  prefs: []
  type: TYPE_NORMAL
- en: The next entry is more interesting; the correlation of height and weight is
    about `0.47`. It’s positive, which means taller people are heavier, and it is
    moderate in strength, which means it has some predictive value, but not much.
    If you know someone’s height, you can make a somewhat better guess about their
    weight.
  prefs: []
  type: TYPE_NORMAL
- en: The correlation between height and age is about `-0.09`. It’s negative, which
    means that older people tend to be shorter, but it’s weak, which means that knowing
    someone’s age would not help much if you were trying to guess their height.
  prefs: []
  type: TYPE_NORMAL
- en: The correlation between age and weight is even smaller. It is tempting to conclude
    that there is no relationship between age and weight, but we have already seen
    that there is. So why is the correlation so low? Remember that the relationship
    between weight and age looks like this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_67_0.png](../Images/e08b2449d2f26f07edcbc56575745657.png)'
  prefs: []
  type: TYPE_IMG
- en: People in their forties are the heaviest; younger and older people are lighter.
    So this relationship is nonlinear. But correlation only measures linear relationships.
    If the relationship is nonlinear, correlation generally underestimates how strong
    it is.
  prefs: []
  type: TYPE_NORMAL
- en: 'To demonstrate, I’ll generate some fake data: `xs` contains equally-spaced
    points between `-1` and `1`. `ys` is `xs` squared plus some random noise.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Here’s the scatter plot of `xs` and `ys`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_71_0.png](../Images/3eb9eba5d2edcc6a663377454c0140c9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'It’s clear that this is a strong relationship; if you are given `x`, you can
    make a much better guess about `y`. But here’s the correlation matrix:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Even though there is a strong non-linear relationship, the computed correlation
    is close to `0`.
  prefs: []
  type: TYPE_NORMAL
- en: In general, if correlation is high – that is, close to `1` or `-1` – you can
    conclude that there is a strong linear relationship. But if correlation is close
    to `0`, that doesn’t mean there is no relationship; there might be a non-linear
    relationship.
  prefs: []
  type: TYPE_NORMAL
- en: This is one of the reasons I think correlation is not such a great statistic.
    There’s another reason to be careful with correlation; it doesn’t mean what people
    take it to mean. Specifically, correlation says nothing about slope. If we say
    that two variables are correlated, that means we can use one to predict the other.
    But that might not be what we care about.
  prefs: []
  type: TYPE_NORMAL
- en: For example, suppose we are concerned about the health effects of weight gain,
    so we plot weight versus age from 20 to 50 years old. I’ll generate two fake datasets
    to demonstrate the point. In each dataset, `xs` represents age and `ys` represents
    weight.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_76_0.png](../Images/a792e394f5a150b6acab56cac547c476.png)'
  prefs: []
  type: TYPE_IMG
- en: 'And here’s the second dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_78_0.png](../Images/4f48c9ce48b94003e4368bd9af7e9f86.png)'
  prefs: []
  type: TYPE_IMG
- en: 'I constructed these examples so they look similar, but they have substantially
    different correlations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: In the first example, the correlation is strong, close to `0.75`. In the second
    example, the correlation is moderate, close to `0.5`. So we might think the first
    relationship is more important. But look more closely at the `y` axis in both
    figures.
  prefs: []
  type: TYPE_NORMAL
- en: In the first example, the average weight gain over 30 years is less than 1 kilogram;
    in the second it is more than 5 kilograms! If we are concerned about the health
    effects of weight gain, the second relationship is probably more important, even
    though the correlation is lower.
  prefs: []
  type: TYPE_NORMAL
- en: The statistic we really care about is the slope of the line, not the coefficient
    of correlation.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we’ll see how to estimate that slope. But first, let’s
    practice with correlation.
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise:** The purpose of the BRFSS is to explore health risk factors, so
    it includes questions about diet. The column `_VEGESU1` represents the number
    of servings of vegetables respondents reported eating per day.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see how this variable relates to age and income.
  prefs: []
  type: TYPE_NORMAL
- en: From the `brfss` DataFrame, select the columns `'AGE'`, `INCOME2`, and `_VEGESU1`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compute the correlation matrix for these variables.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Exercise:** In the previous exercise, the correlation between income and
    vegetable consumption is about `0.12`. The correlation between age and vegetable
    consumption is about `-0.01`.'
  prefs: []
  type: TYPE_NORMAL
- en: Which of the following are correct interpretations of these results?
  prefs: []
  type: TYPE_NORMAL
- en: '*A*: People in this dataset with higher incomes eat more vegetables.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*B*: The relationship between income and vegetable consumption is linear.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*C*: Older people eat more vegetables.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*D*: There could be a strong non-linear relationship between age and vegetable
    consumption.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Exercise:** In general it is a good idea to visualize the relationship between
    variables *before* you compute a correlation. We didn’t do that in the previous
    example, but it’s not too late.'
  prefs: []
  type: TYPE_NORMAL
- en: Generate a visualization of the relationship between age and vegetables. How
    would you describe the relationship, if any?
  prefs: []
  type: TYPE_NORMAL
- en: Simple Linear Regression
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the previous section we saw that correlation does not always measure what
    we really want to know. In this section, we look at an alternative: simple linear
    regression.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s look again at the relationship between weight and age. In the previous
    section, I generated two fake datasets to make a point:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_90_0.png](../Images/20848bdd08143a34214f40b4e2a1873a.png)'
  prefs: []
  type: TYPE_IMG
- en: The one on the left has higher correlation, about 0.75 compared to 0.5. But
    in this context, the statistic we probably care about is the slope of the line,
    not the correlation coefficient. To estimate the slope, we can use `linregress`
    from the SciPy `stats` library.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is a `LinregressResult` object that contains five values: `slope`
    is the slope of the line of best fit for the data; `intercept` is the intercept.
    We’ll interpret some of the other values later.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For Fake Dataset #1, the estimated slope is about 0.019 kilograms per year
    or about 0.56 kilograms over the 30-year range.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'Here are the results for Fake Dataset #2.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'The estimated slope is almost 10 times higher: about 0.18 kilograms per year
    or about 5.3 kilograms per 30 years:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: What’s called `rvalue` here is correlation, which confirms what we saw before;
    the first example has higher correlation, about 0.75 compared to 0.5. But the
    strength of the effect, as measured by the slope of the line, is about 10 times
    higher in the second example.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use the results from `linregress` to compute the line of best fit: first
    we get the minimum and maximum of the observed `xs`; then we multiply by the slope
    and add the intercept. Here’s what that looks like for the first example.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_100_0.png](../Images/8051e41f8fe62b0383f8e94762f267d6.png)'
  prefs: []
  type: TYPE_IMG
- en: And here’s what it looks like for the second example.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_102_0.png](../Images/34ed86b462b76e9d24555b2ad497ee7b.png)'
  prefs: []
  type: TYPE_IMG
- en: The visualization here might be misleading unless you look closely at the vertical
    scales; the slope in the second figure is almost 10 times higher.
  prefs: []
  type: TYPE_NORMAL
- en: Regression of Height and Weight
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now let’s look at an example of regression with real data. Here’s the scatter
    plot of height and weight one more time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_105_0.png](../Images/3df4d14f15a6c2225ba4532d0c6a1c82.png)'
  prefs: []
  type: TYPE_IMG
- en: To compute the regression line, we’ll use `linregress` again. But it can’t handle
    `NaN` values, so we have to use `dropna` to remove rows that are missing the data
    we need.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: Now we can compute the linear regression.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: The slope is about 0.92 kilograms per centimeter, which means that we expect
    a person one centimeter taller to be almost a kilogram heavier. That’s quite a
    lot.
  prefs: []
  type: TYPE_NORMAL
- en: 'As before, we can compute the line of best fit:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: And here’s what that looks like.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_113_0.png](../Images/e4142ec64e2d0d789f6ff79b526d6ae8.png)'
  prefs: []
  type: TYPE_IMG
- en: The slope of this line seems consistent with the scatter plot.
  prefs: []
  type: TYPE_NORMAL
- en: Linear regression has the same problem as correlation; it only measures the
    strength of a linear relationship. Here’s the scatter plot of weight versus age,
    which we saw earlier.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_115_0.png](../Images/79646d87ba5ef26135a7892bc8ab7c0a.png)'
  prefs: []
  type: TYPE_IMG
- en: People in their 40s are the heaviest; younger and older people are lighter.
    So the relationship is nonlinear.
  prefs: []
  type: TYPE_NORMAL
- en: If we don’t look at the scatter plot and blindly compute the regression line,
    here’s what we get.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: The estimated slope is only 0.02 kilograms per year, or 0.6 kilograms in 30
    years. And here’s what the line of best fit looks like.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/09_relationships_119_0.png](../Images/ca00bd2ac7b9c0132242e62e0e069f54.png)'
  prefs: []
  type: TYPE_IMG
- en: A straight line does not capture the relationship between these variables well.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you’ll see how to use multiple regression to estimate non-linear
    relationships. But first, let’s practice simple regression.
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise:** Who do you think eats more vegetables, people with low income,
    or people with high income? Let’s find out.'
  prefs: []
  type: TYPE_NORMAL
- en: As we’ve seen previously, the column `INCOME2` represents income level and `_VEGESU1`
    represents the number of vegetable servings respondents reported eating per day.
  prefs: []
  type: TYPE_NORMAL
- en: Make a scatter plot with vegetable servings versus income, that is, with vegetable
    servings on the `y` axis and income group on the `x` axis.
  prefs: []
  type: TYPE_NORMAL
- en: You might want to use `ylim` to zoom in on the bottom half of the `y` axis.
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise:** Now let’s estimate the slope of the relationship between vegetable
    consumption and income.'
  prefs: []
  type: TYPE_NORMAL
- en: Use `dropna` to select rows where `INCOME2` and `_VEGESU1` are not `NaN`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extract `INCOME2` and `_VEGESU1` and compute the simple linear regression of
    these variables.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is the slope of the regression line? What does this slope means in the
    context of the question we are exploring?
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise:** Finally, plot the regression line on top of the scatter plot.'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This chapter presents three ways to visualize the relationship between two
    variables: a scatter plot, violin plot, and box plot. A scatter plot is often
    a good choice when you are exploring a new data set, but it can take some attention
    to avoid overplotting. Violin and box plot are particularly useful when one of
    the variables only takes on a few discrete values.'
  prefs: []
  type: TYPE_NORMAL
- en: 'And we considered two ways to quantify the strength of a relationship: the
    coefficient of correlation and the slope of a regression line. These statistics
    capture different aspect of what we might mean by “strength”. The coefficient
    of correlation indicates how well we can predict one variable, given the other.
    The slope of the regression line indicates how much difference we expect in one
    variable as we vary the other. One or the other might be more relevant, depending
    on the context.'
  prefs: []
  type: TYPE_NORMAL

["```py\nimport numpy as np\nfrom empiricaldist import Pmf\n\nss = np.linspace(0, 350, 101)\nprior_s = Pmf(1, ss)\nprior_s.head() \n```", "```py\nfrom scipy.stats import poisson\n\nns = np.arange(0, 350)\nS, N = np.meshgrid(ss, ns)\nps = poisson(S).pmf(N)\nps.shape \n```", "```py\n(350, 101) \n```", "```py\nimport pandas as pd\n\ndef make_joint(prior_s, ns):\n    ss = prior_s.qs\n    S, N = np.meshgrid(ss, ns)\n    ps = poisson(S).pmf(N) * prior_s.ps\n    joint = pd.DataFrame(ps, index=ns, columns=ss)\n    joint.index.name = 'n'\n    joint.columns.name = 's'\n    return joint \n```", "```py\njoint = make_joint(prior_s, ns)\njoint.head() \n```", "```py\nfrom scipy.stats import binom\n\nphi = 0.1\nc = 10\nlikelihood = binom(ns, phi).pmf(c)\nlikelihood.shape \n```", "```py\n(350,) \n```", "```py\nproduct = joint.multiply(likelihood, axis=0)\nproduct.head() \n```", "```py\nfrom utils import normalize\n\ndef update(joint, phi, c):\n    ns = joint.index\n    likelihood = binom(ns, phi).pmf(c)\n    posterior = joint.multiply(likelihood, axis=0)\n    normalize(posterior)\n    return posterior \n```", "```py\nc1 = 10\nphi = 0.1\nposterior = update(joint, phi, c1)\nposterior.head() \n```", "```py\nfrom utils import plot_contour\n\nplot_contour(posterior); \n```", "```py\nfrom utils import marginal\n\nposterior_s = marginal(posterior, 0)\nposterior_s.plot()\nposterior_s.mean() \n```", "```py\n109.99983355767465 \n```", "```py\nposterior_n = marginal(posterior, 1)\nposterior_n.plot()\nposterior_n.mean() \n```", "```py\n108.99984691276569 \n```", "```py\nposterior_n.idxmax(), c/phi \n```", "```py\n(99, 100.0) \n```", "```py\nposterior_n[99] - posterior_n[100] \n```", "```py\n5.065392549852277e-16 \n```", "```py\nprior_jeff = Pmf(1/ss[1:], ss[1:])\nprior_jeff.head() \n```", "```py\njoint_jeff = make_joint(prior_jeff, ns)\nposterior_jeff = update(joint_jeff, phi, c1) \n```", "```py\nposterior_n = marginal(posterior_jeff, 1)\nposterior_n.plot()\nposterior_n.mean() \n```", "```py\n99.99995605790188 \n```", "```py\nposterior_n.idxmax() \n```", "```py\n91 \n```", "```py\nc2 = 16\nposterior2 = update(joint, phi, c2) \n```", "```py\nposterior_n2 = marginal(posterior2, 1)\nposterior_n2.plot()\nposterior_n2.mean() \n```", "```py\n168.947980523708 \n```", "```py\nposterior_n2.idxmax() \n```", "```py\n160 \n```", "```py\njoint = make_joint(posterior_s, ns)\nposterior = update(joint, phi, c2)\nposterior_n = marginal(posterior, 1)\nposterior_n.plot()\nposterior_n.mean() \n```", "```py\n137.499999315101 \n```", "```py\nposterior_n.idxmax() \n```", "```py\n132 \n```", "```py\nposterior_n[132] - posterior_n[133] \n```", "```py\n2.914335439641036e-16 \n```", "```py\njoint = make_joint(prior_s, ns)\nposterior = update(joint, phi, c2)\nposterior_s = marginal(posterior, 0)\nposterior_s.mean() \n```", "```py\n169.94393251129674 \n```", "```py\njoint = make_joint(posterior_s, ns)\nposterior = update(joint, phi, c1)\nposterior_n2 = marginal(posterior, 1)\nposterior_n2.mean() \n```", "```py\n131.49999935386944 \n```", "```py\nposterior_n2.idxmax() \n```", "```py\n126 \n```", "```py\nposterior_n2[126] - posterior_n2[127] \n```", "```py\n3.8163916471489756e-16 \n```", "```py\njoint = make_joint(prior_s, ns)\nposterior = update(joint, phi, c1)\nposterior_n = marginal(posterior, 1) \n```", "```py\nfrom utils import decorate\n\nposterior_n.plot(label='Model A')\nposterior_n2.plot(label='Model B')\ndecorate(title='Posterior distributions of n1 under different models') \n```"]
["```py\nimport statsmodels.formula.api as smf \n```", "```py\nimport pandas as pd\n\nbrfss = pd.read_hdf('brfss.hdf5', 'brfss') \n```", "```py\nresults = smf.ols('INCOME2 ~ _VEGESU1', data=brfss).fit() \n```", "```py\nresults.params \n```", "```py\nIntercept    5.450700\n_VEGESU1     0.204935\ndtype: float64 \n```", "```py\nimport pandas as pd\n\ngss = pd.read_hdf('gss_eda.hdf', 'gss') \n```", "```py\ngss.head() \n```", "```py\nresults = smf.ols('REALINC ~ EDUC', data=gss).fit()\nresults.params \n```", "```py\nIntercept   -13054.459834\nEDUC          3464.463066\ndtype: float64 \n```", "```py\nresults = smf.ols('REALINC ~ EDUC + AGE', data=gss).fit()\nresults.params \n```", "```py\nIntercept   -16152.855386\nEDUC          3514.291894\nAGE             54.008253\ndtype: float64 \n```", "```py\ngrouped = gss.groupby('AGE')\ntype(grouped) \n```", "```py\npandas.core.groupby.generic.DataFrameGroupBy \n```", "```py\nmean_income_by_age = grouped['REALINC'].mean() \n```", "```py\nimport matplotlib.pyplot as plt\n\nplt.plot(mean_income_by_age, 'o', alpha=0.5)\nplt.xlabel('Age (years)')\nplt.ylabel('Income (1986 $)')\nplt.title('Average income, grouped by age'); \n```", "```py\ngss['AGE2'] = gss['AGE']**2 \n```", "```py\nmodel = smf.ols('REALINC ~ EDUC + AGE + AGE2', data=gss)\nresults = model.fit()\nresults.params \n```", "```py\nIntercept   -49865.446557\nEDUC          3293.454914\nAGE           1758.622812\nAGE2           -17.341566\ndtype: float64 \n```", "```py\ngss['EDUC2'] = gss['EDUC']**2\n\nmodel = smf.ols('REALINC ~ EDUC + EDUC2 + AGE + AGE2', data=gss)\nresults = model.fit()\nresults.params \n```", "```py\nIntercept   -26080.884938\nEDUC          -522.032930\nEDUC2          153.405410\nAGE           1711.838648\nAGE2           -17.128130\ndtype: float64 \n```", "```py\nimport numpy as np\n\ndf = pd.DataFrame()\ndf['AGE'] = np.linspace(18, 89)\ndf['AGE2'] = df['AGE']**2 \n```", "```py\ndf['EDUC'] = 12\ndf['EDUC2'] = df['EDUC']**2 \n```", "```py\npred12 = results.predict(df) \n```", "```py\nplt.plot(mean_income_by_age, 'o', alpha=0.5)\n\nplt.plot(df['AGE'], pred12, label='High school', color='C4')\n\nplt.xlabel('Age (years)')\nplt.ylabel('Income (1986 $)')\nplt.title('Income versus age, grouped by education level')\nplt.legend(); \n```", "```py\ndf['EDUC'] = 16\ndf['EDUC2'] = df['EDUC']**2\npred16 = results.predict(df)\n\ndf['EDUC'] = 14\ndf['EDUC2'] = df['EDUC']**2\npred14 = results.predict(df) \n```", "```py\nplt.plot(mean_income_by_age, 'o', alpha=0.5)\n\nplt.plot(df['AGE'], pred16, ':', label='Bachelor')\nplt.plot(df['AGE'], pred14, '--', label='Associate')\nplt.plot(df['AGE'], pred12, label='High school', color='C4')\n\nplt.xlabel('Age (years)')\nplt.ylabel('Income (1986 $)')\nplt.title('Income versus age, grouped by education level')\nplt.legend(); \n```", "```py\nformula = 'REALINC ~ EDUC + EDUC2 + AGE + AGE2 + C(SEX)'\nresults = smf.ols(formula, data=gss).fit()\nresults.params \n```", "```py\nIntercept     -24567.566164\nC(SEX)[T.2]    -4626.727813\nEDUC            -303.398385\nEDUC2            143.954306\nAGE             1702.199322\nAGE2             -16.995151\ndtype: float64 \n```", "```py\ngss['GUNLAW'].value_counts() \n```", "```py\n1.0    32038\n2.0     9975\nName: GUNLAW, dtype: int64 \n```", "```py\ngss['GUNLAW'].replace([2], [0], inplace=True) \n```", "```py\nformula = 'GUNLAW ~ AGE + AGE2 + EDUC + EDUC2 + C(SEX)'\nresults = smf.logit(formula, data=gss).fit() \n```", "```py\nOptimization terminated successfully.\n         Current function value: 0.532878\n         Iterations 6 \n```", "```py\nresults.params \n```", "```py\nIntercept      1.347289\nC(SEX)[T.2]    0.771791\nAGE           -0.021314\nAGE2           0.000222\nEDUC          -0.075406\nEDUC2          0.004867\ndtype: float64 \n```", "```py\ndf = pd.DataFrame()\ndf['AGE'] = np.linspace(18, 89)\ndf['EDUC'] = 12 \n```", "```py\ndf['AGE2'] = df['AGE']**2\ndf['EDUC2'] = df['EDUC']**2 \n```", "```py\ndf['SEX'] = 1\npred1 = results.predict(df) \n```", "```py\ndf['SEX'] = 2\npred2 = results.predict(df) \n```", "```py\ngrouped = gss.groupby('AGE')\nfavor_by_age = grouped['GUNLAW'].mean()\nplt.plot(favor_by_age, 'o', alpha=0.5)\n\nplt.plot(df['AGE'], pred2, label='Female')\nplt.plot(df['AGE'], pred1, '--', label='Male')\n\nplt.xlabel('Age')\nplt.ylabel('Probability of favoring gun law')\nplt.title('Support for gun law versus age, grouped by sex')\nplt.legend(); \n```"]
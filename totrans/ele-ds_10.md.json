["```py\nfrom empiricaldist import Pmf\n\noutcomes = [1,2,3,4,5,6]\ndie = Pmf(1/6, outcomes) \n```", "```py\ndie \n```", "```py\ndict_file = 'GSS.dct'\ndata_file = 'GSS.dat.gz' \n```", "```py\nfrom statadict import parse_stata_dict\n\nstata_dict = parse_stata_dict(dict_file) \n```", "```py\nimport gzip\n\nfp = gzip.open(data_file) \n```", "```py\nimport pandas as pd\n\ngss = pd.read_fwf(fp, \n                  names=stata_dict.names, \n                  colspecs=stata_dict.colspecs)\ngss.shape \n```", "```py\n(64814, 8) \n```", "```py\ngss.head() \n```", "```py\ngss['EDUC'].value_counts().sort_index() \n```", "```py\n0       165\n1        47\n2       152\n3       257\n4       319\n5       402\n6       828\n7       879\n8      2724\n9      2083\n10     2880\n11     3743\n12    19663\n13     5360\n14     7160\n15     2910\n16     8355\n17     1967\n18     2384\n19      920\n20     1439\n98       73\n99      104\nName: EDUC, dtype: int64 \n```", "```py\nimport numpy as np\n\neduc = gss['EDUC'].replace([98, 99], np.nan) \n```", "```py\nimport matplotlib.pyplot as plt\n\neduc.hist(grid=False)\nplt.xlabel('Years of education')\nplt.ylabel('Number of respondents')\nplt.title('Histogram of education level'); \n```", "```py\npmf_educ = Pmf.from_seq(educ, normalize=False)\ntype(pmf_educ) \n```", "```py\nempiricaldist.empiricaldist.Pmf \n```", "```py\npmf_educ.head() \n```", "```py\npmf_educ.tail() \n```", "```py\npmf_educ[20] \n```", "```py\n1439 \n```", "```py\npmf_educ_norm = Pmf.from_seq(educ, normalize=True)\npmf_educ_norm.head() \n```", "```py\npmf_educ_norm[12] \n```", "```py\n0.30420656899299164 \n```", "```py\npmf_educ_norm.bar(label='EDUC')\n\nplt.xlabel('Years of education')\nplt.xticks(range(0, 21, 4))\nplt.ylabel('PMF')\nplt.title('Distribution of years of education')\nplt.legend(); \n```", "```py\nfrom empiricaldist import Cdf \n```", "```py\nvalues = 1, 2, 2, 3, 5 \n```", "```py\nPmf.from_seq(values) \n```", "```py\nCdf.from_seq(values) \n```", "```py\nage = gss['AGE'].replace([98, 99], np.nan) \n```", "```py\ncdf_age = Cdf.from_seq(age) \n```", "```py\ncdf_age.plot()\n\nplt.xlabel('Age (years)')\nplt.ylabel('CDF')\nplt.title('Distribution of age'); \n```", "```py\nq = 51\np = cdf_age(q)\np \n```", "```py\narray(0.63318676) \n```", "```py\ncdf_age.plot()\n\nx = 17\ndraw_line(p, q, x)\ndraw_arrow_left(p, q, x)\n\nplt.xlabel('Age (years)')\nplt.xlim(x-1, 91)\nplt.ylabel('CDF')\nplt.title('Distribution of age'); \n```", "```py\np1 = 0.25\nq1 = cdf_age.inverse(p1)\nq1 \n```", "```py\narray(31.) \n```", "```py\np2 = 0.75\nq2 = cdf_age.inverse(p2)\nq2 \n```", "```py\narray(59.) \n```", "```py\ncdf_age.plot()\n\nx = 17\ndraw_line(p1, q1, x)\ndraw_arrow_down(p1, q1, 0)\n\ndraw_line(p2, q2, x)\ndraw_arrow_down(p2, q2, 0)\n\nplt.xlabel('Age (years)')\nplt.xlim(x-1, 91)\nplt.ylabel('CDF')\nplt.title('Distribution of age'); \n```", "```py\nmale = (gss['SEX'] == 1) \n```", "```py\nfemale = (gss['SEX'] == 2) \n```", "```py\nmale_age = age[male]\nfemale_age = age[female] \n```", "```py\npmf_male_age = Pmf.from_seq(male_age)\npmf_male_age.plot(label='Male')\n\npmf_female_age = Pmf.from_seq(female_age)\npmf_female_age.plot(label='Female')\n\nplt.xlabel('Age (years)') \nplt.ylabel('PMF')\nplt.title('Distribution of age by sex')\nplt.legend(); \n```", "```py\ncdf_male_age = Cdf.from_seq(male_age)\ncdf_male_age.plot(label='Male')\n\ncdf_female_age = Cdf.from_seq(female_age)\ncdf_female_age.plot(label='Female')\n\nplt.xlabel('Age (years)') \nplt.ylabel('CDF')\nplt.title('Distribution of age by sex')\nplt.legend(); \n```", "```py\ncdf_male_age(60), cdf_female_age(60) \n```", "```py\n(array(0.78599958), array(0.75529908)) \n```", "```py\ncdf_male_age.inverse(0.5), cdf_female_age.inverse(0.5) \n```", "```py\n(array(43.), array(44.)) \n```", "```py\npre95 = (gss['YEAR'] < 1995)\npost95 = (gss['YEAR'] >= 1995) \n```", "```py\nincome = gss['REALINC'].replace(0, np.nan)\n\nPmf.from_seq(income[pre95]).plot(label='Before 1995')\nPmf.from_seq(income[post95]).plot(label='After 1995')\n\nplt.xlabel('Income (1986 USD)')\nplt.ylabel('PMF')\nplt.title('Distribution of income')\nplt.legend(); \n```", "```py\nCdf.from_seq(income[pre95]).plot(label='Before 1995')\nCdf.from_seq(income[post95]).plot(label='After 1995')\n\nplt.xlabel('Income (1986 USD)')\nplt.ylabel('CDF')\nplt.title('Distribution of income')\nplt.legend(); \n```", "```py\nnp.random.seed(17) \n```", "```py\nsample = np.random.normal(size=1000) \n```", "```py\ncdf_sample = Cdf.from_seq(sample)\ncdf_sample.plot(label='Random sample')\n\nplt.xlabel('x')\nplt.ylabel('CDF')\nplt.legend(); \n```", "```py\nfrom scipy.stats import norm\n\nxs = np.linspace(-3, 3)\nys = norm(0, 1).cdf(xs) \n```", "```py\nplt.plot(xs, ys, color='gray', label='Normal CDF')\ncdf_sample.plot(label='Random sample')\n\nplt.xlabel('x')\nplt.ylabel('CDF')\nplt.legend(); \n```", "```py\nxs = np.linspace(-3, 3)\nys = norm(0,1).pdf(xs)\nplt.plot(xs, ys, color='gray', label='Normal PDF')\n\nplt.xlabel('x')\nplt.ylabel('PDF')\nplt.title('Normal density function')\nplt.legend(); \n```", "```py\nplt.plot(xs, ys, color='gray', label='Normal PDF')\n\npmf_sample = Pmf.from_seq(sample)\npmf_sample.plot(label='Random sample')\n\nplt.xlabel('x')\nplt.ylabel('PDF')\nplt.title('Normal density function')\nplt.legend(); \n```", "```py\nimport seaborn as sns\n\nsns.kdeplot(sample, label='Estimated sample PDF')\n\nplt.xlabel('x')\nplt.ylabel('PDF')\nplt.title('Normal density function')\nplt.legend(); \n```", "```py\nplt.plot(xs, ys, color='gray', label='Normal PDF')\nsns.kdeplot(sample, label='Estimated sample PDF')\n\nplt.xlabel('x')\nplt.ylabel('PDF')\nplt.title('Normal density function')\nplt.legend(); \n```"]
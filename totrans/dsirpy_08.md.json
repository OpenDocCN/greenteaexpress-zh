["```py\ndef countdown(n):\n    if n == 0:\n        print('Blastoff!')\n    else:\n        print(n)\n        countdown(n-1) \n```", "```py\ncountdown(3) \n```", "```py\n3\n2\n1\nBlastoff! \n```", "```py\ndef factorial(n):\n    if n == 0:\n        print(n, 1)\n        return 1\n    else:\n        recurse = factorial(n-1)\n        result = n * recurse\n        print(n, recurse, result)\n        return result \n```", "```py\nfactorial(3) \n```", "```py\n0 1\n1 1 1\n2 1 2\n3 2 6 \n```", "```py\n6 \n```", "```py\ndef fibonacci(n):\n    print(n)\n    if n == 0:\n        return 0\n    elif  n == 1:\n        return 1\n    else:\n        return fibonacci(n-1) + fibonacci(n-2) \n```", "```py\nfibonacci(4) \n```", "```py\n4\n3\n2\n1\n0\n1\n2\n1\n0 \n```", "```py\n3 \n```", "```py\nknown = {0:0, 1:1}\n\ndef fibonacci_memo(n):\n    if n in known:\n        return known[n]\n\n    print(n)\n    res = fibonacci_memo(n-1) + fibonacci_memo(n-2)\n    known[n] = res\n    return res \n```", "```py\nfibonacci_memo(4) \n```", "```py\n4\n3\n2 \n```", "```py\n3 \n```", "```py\ndef reverse(s):\n    if len(s) < 2:\n        return s\n\n    first, rest = s[0], s[1:]\n    return reverse(rest) + first \n```", "```py\nreverse('reverse') \n```", "```py\n'esrever' \n```", "```py\nfrom os.path import basename, exists\n\ndef download(url):\n    filename = basename(url)\n    if not exists(filename):\n        from urllib.request import urlretrieve\n        local, _ = urlretrieve(url, filename)\n        print('Downloaded ' + local)\n\ndownload('https://github.com/AllenDowney/DSIRP/raw/main/american-english') \n```", "```py\ndef read_words(filename):\n  \"\"\"Read lines from a file and split them into words.\"\"\"\n    res = set()\n    for line in open(filename):\n        for word in line.split():\n            res.add(word.strip().lower())\n    return res \n```", "```py\nword_set = read_words('american-english')\nlen(word_set) \n```", "```py\n100781 \n```"]
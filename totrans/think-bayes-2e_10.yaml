- en: Minimum, Maximum, and Mixture
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最小值、最大值和混合
- en: 原文：[https://allendowney.github.io/ThinkBayes2/chap07.html](https://allendowney.github.io/ThinkBayes2/chap07.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://allendowney.github.io/ThinkBayes2/chap07.html](https://allendowney.github.io/ThinkBayes2/chap07.html)
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: <详细信息类="隐藏在输入上方"><总结aria-label="切换隐藏内容">显示代码单元格内容隐藏代码单元格内容</总结>
- en: '[PRE0]</details>'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE0]</详细信息>'
- en: In the previous chapter we computed distributions of sums. In this chapter,
    we’ll compute distributions of minimums and maximums, and use them to solve both
    forward and inverse problems.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们计算了总和的分布。在本章中，我们将计算最小值和最大值的分布，并使用它们来解决正向和反向问题。
- en: Then we’ll look at distributions that are mixtures of other distributions, which
    will turn out to be particularly useful for making predictions.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将研究其他分布，这些分布是其他分布的混合，这将被证明对于进行预测特别有用。
- en: But we’ll start with a powerful tool for working with distributions, the cumulative
    distribution function.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 但是我们将从一个强大的用于处理分布的工具开始，即累积分布函数。
- en: Cumulative Distribution Functions
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 累积分布函数
- en: So far we have been using probability mass functions to represent distributions.
    A useful alternative is the **cumulative distribution function**, or CDF.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在使用概率质量函数来表示分布。一个有用的替代方案是**累积分布函数**，或者CDF。
- en: As an example, I’ll use the posterior distribution from the Euro problem, which
    we computed in <<_BayesianEstimation>>.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，我将使用从Euro问题中计算的后验分布，我们在<<_BayesianEstimation>>中计算过。
- en: Here’s the uniform prior we started with.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们开始的均匀先验。
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: And here’s the update.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这是更新。
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The CDF is the cumulative sum of the PMF, so we can compute it like this:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: CDF是PMF的累积和，因此我们可以这样计算它：
- en: '[PRE4]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here’s what it looks like, along with the PMF.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这是它的样子，以及PMF。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: <详细信息类="隐藏在输入上方"><总结aria-label="切换隐藏内容">显示代码单元格内容隐藏代码单元格内容</总结>
- en: '[PRE5]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell source Hide code cell source</summary>'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE5]</详细信息> <详细信息类="隐藏在输入上方"><总结aria-label="切换隐藏内容">显示代码单元格源隐藏代码单元格源</总结>'
- en: '[PRE6]</details> ![_images/5c45a9af712ec2288ce03ce1aa193619f0c49f4ea04ea44c86a7be39fa4344bf.png](../Images/8858c7133f1f61a9e62a4454609a6f7c.png)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE6]</详细信息> ![_images/5c45a9af712ec2288ce03ce1aa193619f0c49f4ea04ea44c86a7be39fa4344bf.png](../Images/8858c7133f1f61a9e62a4454609a6f7c.png)'
- en: The range of the CDF is always from 0 to 1, in contrast with the PMF, where
    the maximum can be any probability.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: CDF的范围总是从0到1，与PMF相反，PMF的最大值可以是任何概率。
- en: 'The result from `cumsum` is a Pandas `Series`, so we can use the bracket operator
    to select an element:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`cumsum`的结果是一个Pandas`Series`，因此我们可以使用括号运算符来选择一个元素：'
- en: '[PRE7]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The result is about 0.96, which means that the total probability of all quantities
    less than or equal to 0.61 is 96%.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 结果约为0.96，这意味着所有小于或等于0.61的数量的总概率为96%。
- en: 'To go the other way — to look up a probability and get the corresponding quantile
    — we can use interpolation:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是，查找概率并获得相应的分位数，我们可以使用插值：
- en: '[PRE9]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The result is about 0.61, so that confirms that the 96th percentile of this
    distribution is 0.61.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 结果约为0.61，这证实了该分布的第96百分位数为0.61。
- en: '`empiricaldist` provides a class called `Cdf` that represents a cumulative
    distribution function. Given a `Pmf`, you can compute a `Cdf` like this:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`empiricaldist`提供了一个称为`Cdf`的类，表示累积分布函数。给定一个`Pmf`，可以这样计算`Cdf`：'
- en: '[PRE11]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '`make_cdf` uses `np.cumsum` to compute the cumulative sum of the probabilities.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`make_cdf`使用`np.cumsum`来计算概率的累积和。'
- en: 'You can use brackets to select an element from a `Cdf`:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用括号从`Cdf`中选择一个元素：
- en: '[PRE12]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: But if you look up a quantity that’s not in the distribution, you get a `KeyError`.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果查找的数量不在分布中，就会得到一个`KeyError`。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: <详细信息类="隐藏在输入上方"><总结aria-label="切换隐藏内容">显示代码单元格内容隐藏代码单元格内容</总结>
- en: '[PRE14]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]</details>'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE15]</详细信息>'
- en: To avoid this problem, you can call a `Cdf` as a function, using parentheses.
    If the argument does not appear in the `Cdf`, it interpolates between quantities.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免这个问题，您可以将`Cdf`作为函数调用，使用括号。如果参数不在`Cdf`中，它会在数量之间进行插值。
- en: '[PRE16]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Going the other way, you can use `quantile` to look up a cumulative probability
    and get the corresponding quantity:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，您可以使用`quantile`来查找累积概率并获得相应的数量：
- en: '[PRE18]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '`Cdf` also provides `credible_interval`, which computes a credible interval
    that contains the given probability:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`Cdf`还提供了`credible_interval`，用于计算包含给定概率的可信区间：'
- en: '[PRE20]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'CDFs and PMFs are equivalent in the sense that they contain the same information
    about the distribution, and you can always convert from one to the other. Given
    a `Cdf`, you can get the equivalent `Pmf` like this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: CDF和PMF在含义上是等价的，因为它们包含有关分布的相同信息，您可以随时从一个转换到另一个。给定一个`Cdf`，可以这样获得等效的`Pmf`：
- en: '[PRE22]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '`make_pmf` uses `np.diff` to compute differences between consecutive cumulative
    probabilities.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`make_pmf`使用`np.diff`来计算连续累积概率之间的差异。'
- en: One reason `Cdf` objects are useful is that they compute quantiles efficiently.
    Another is that they make it easy to compute the distribution of a maximum or
    minimum, as we’ll see in the next section.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`Cdf`对象有用的一个原因是它们可以有效地计算分位数。另一个原因是它们可以轻松地计算最大值或最小值的分布，我们将在下一节中看到。'
- en: Best Three of Four
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最好的四个中的三个
- en: 'In *Dungeons & Dragons*, each character has six attributes: strength, intelligence,
    wisdom, dexterity, constitution, and charisma.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在*龙与地下城*中，每个角色都有六个属性：力量、智力、智慧、灵巧、体质和魅力。
- en: To generate a new character, players roll four 6-sided dice for each attribute
    and add up the best three. For example, if I roll for strength and get 1, 2, 3,
    4 on the dice, my character’s strength would be the sum of 2, 3, and 4, which
    is 9.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了生成一个新角色，玩家为每个属性掷四个6面骰子并加上最好的三个。例如，如果我为力量掷骰子得到1、2、3、4，我的角色的力量将是2、3和4的总和，即9。
- en: As an exercise, let’s figure out the distribution of these attributes. Then,
    for each character, we’ll figure out the distribution of their best attribute.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 作为练习，让我们找出这些属性的分布。然后，对于每个角色，我们将找出他们最好属性的分布。
- en: 'I’ll import two functions from the previous chapter: `make_die`, which makes
    a `Pmf` that represents the outcome of rolling a die, and `add_dist_seq`, which
    takes a sequence of `Pmf` objects and computes the distribution of their sum.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我将从上一章导入两个函数：`make_die`，它制作一个代表掷骰子结果的`Pmf`，和`add_dist_seq`，它接受一个`Pmf`对象的序列并计算它们的总和的分布。
- en: Here’s a `Pmf` that represents a six-sided die and a sequence with three references
    to it.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个代表六面骰子和一个包含三个对它的引用的序列的`Pmf`。
- en: '[PRE23]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: And here’s the distribution of the sum of three dice.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这是三个骰子的总和的分布。
- en: '[PRE24]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Here’s what it looks like:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这是它的样子：
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元内容
    隐藏代码单元内容</summary>
- en: '[PRE25]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell source Hide code cell source</summary>'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE25]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元源代码 隐藏代码单元源代码</summary>'
- en: '[PRE26]</details> ![_images/b1f86dac2103398c34f875294d89187fb8c4a3b6a4264c52388783f7e9a22047.png](../Images/7e37d8a631470c69005f16fbdaa90579.png)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE26]</details> ![_images/b1f86dac2103398c34f875294d89187fb8c4a3b6a4264c52388783f7e9a22047.png](../Images/7e37d8a631470c69005f16fbdaa90579.png)'
- en: If we roll four dice and add up the best three, computing the distribution of
    the sum is a bit more complicated. I’ll estimate the distribution by simulating
    10,000 rolls.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们掷四个骰子并加上最好的三个，计算总和的分布会更加复杂。我将通过模拟10000次掷骰子来估计分布。
- en: 'First I’ll create an array of random values from 1 to 6, with 10,000 rows and
    4 columns:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我将创建一个从1到6的随机值数组，有10000行和4列：
- en: '[PRE27]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: To find the best three outcomes in each row, I’ll use `sort` with `axis=1`,
    which sorts the rows in ascending order.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 为了找到每行中最好的三个结果，我将使用`sort`和`axis=1`，这将按升序对行进行排序。
- en: '[PRE28]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Finally, I’ll select the last three columns and add them up.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我将选择最后三列并将它们相加。
- en: '[PRE29]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Now `t` is an array with a single column and 10,000 rows. We can compute the
    PMF of the values in `t` like this:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`t`是一个有一列和10000行的数组。我们可以这样计算`t`中值的PMF：
- en: '[PRE30]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The following figure shows the distribution of the sum of three dice, `pmf_3d6`,
    and the distribution of the best three out of four, `pmf_best3`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了三个骰子的总和的分布`pmf_3d6`和四个中最好的三个的分布`pmf_best3`。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元源代码
    隐藏代码单元源代码</summary>
- en: '[PRE31]</details> ![_images/c81d2ebe685be4da1dee4a97864b19e76444c6511d3b1bd703324cdefcd580de.png](../Images/757d927cf7aecda1b1605aaa103c598c.png)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE31]</details> ![_images/c81d2ebe685be4da1dee4a97864b19e76444c6511d3b1bd703324cdefcd580de.png](../Images/757d927cf7aecda1b1605aaa103c598c.png)'
- en: As you might expect, choosing the best three out of four tends to yield higher
    values.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所期望的那样，从四个中选择最好的三个往往会产生更高的值。
- en: Next we’ll find the distribution for the maximum of six attributes, each the
    sum of the best three of four dice.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将找到六个属性的分布，每个属性是四个骰子中最好的三个的总和。
- en: Maximum
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最大值
- en: 'To compute the distribution of a maximum or minimum, we can make good use of
    the cumulative distribution function. First, I’ll compute the `Cdf` of the best
    three of four distribution:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 要计算最大值或最小值的分布，我们可以充分利用累积分布函数。首先，我将计算四个中最好的三个的`Cdf`：
- en: '[PRE32]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Recall that `Cdf(x)` is the sum of probabilities for quantities less than or
    equal to `x`. Equivalently, it is the probability that a random value chosen from
    the distribution is less than or equal to `x`.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下，`Cdf(x)`是小于或等于`x`的数量的概率之和。等价地，它是从分布中选择的随机值小于或等于`x`的概率。
- en: 'Now suppose I draw 6 values from this distribution. The probability that all
    6 of them are less than or equal to `x` is `Cdf(x)` raised to the 6th power, which
    we can compute like this:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设我从这个分布中抽取6个值。所有6个值都小于或等于`x`的概率是`Cdf(x)`的6次方，我们可以这样计算：
- en: '[PRE33]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: <details class="hide below-input"><summary aria-label="Toggle hidden content">Show
    code cell output Hide code cell output</summary>
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide below-input"><summary aria-label="Toggle hidden content">显示代码单元输出
    隐藏代码单元输出</summary>
- en: '[PRE34]</details>'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE34]</details>'
- en: 'If all 6 values are less than or equal to `x`, that means that their maximum
    is less than or equal to `x`. So the result is the CDF of their maximum. We can
    convert it to a `Cdf` object, like this:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有6个值都小于或等于`x`，那意味着它们的最大值小于或等于`x`。因此结果是它们的最大值的CDF。我们可以这样将其转换为`Cdf`对象：
- en: '[PRE35]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'And compute the equivalent `Pmf` like this:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 并且可以这样计算等效的`Pmf`：
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元内容
    隐藏代码单元内容</summary>
- en: '[PRE36]</details>'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE36]</details>'
- en: The following figure shows the result.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了结果。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元内容
    隐藏代码单元内容</summary>
- en: '[PRE37]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '![_images/b6f154ac59d6ddc728ef1c9bc3fe3dfb59a7fbdf969b5313f9b9b2b18bec2104.png](../Images/0e666254a129209f2f44a89e57af99d2.png)</details>'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '![_images/b6f154ac59d6ddc728ef1c9bc3fe3dfb59a7fbdf969b5313f9b9b2b18bec2104.png](../Images/0e666254a129209f2f44a89e57af99d2.png)</details>'
- en: Most characters have at least one attribute greater than 12; almost 10% of them
    have an 18.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数角色至少有一个属性大于12；将近10%的角色属性为18。
- en: The following figure shows the CDFs for the three distributions we have computed.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了我们计算的三个分布的CDF。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格源代码隐藏代码单元格源代码</summary>
- en: '[PRE38]</details> ![_images/13e587f63e6680fb43f73d51162d1c4f7e58eac8c77031130d8f60990cd4cf3d.png](../Images/6c93507d6b4921fe9d32c905372dd581.png)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE38]</details> ![_images/13e587f63e6680fb43f73d51162d1c4f7e58eac8c77031130d8f60990cd4cf3d.png](../Images/6c93507d6b4921fe9d32c905372dd581.png)'
- en: '`Cdf` provides `max_dist`, which does the same computation, so we can also
    compute the `Cdf` of the maximum like this:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`Cdf`提供了`max_dist`，它执行相同的计算，所以我们也可以这样计算最大值的`Cdf`：'
- en: '[PRE39]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: In the next section we’ll find the distribution of the minimum. The process
    is similar, but a little more complicated. See if you can figure it out before
    you go on.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将找到最小值的分布。这个过程类似，但稍微复杂一些。在继续之前，看看您是否能弄清楚。
- en: Minimum
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最小值
- en: In the previous section we computed the distribution of a character’s best attribute.
    Now let’s compute the distribution of the worst.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们计算了角色最佳属性的分布。现在让我们计算最差属性的分布。
- en: 'To compute the distribution of the minimum, we’ll use the **complementary CDF**,
    which we can compute like this:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 计算最小值的分布时，我们将使用**补充CDF**，我们可以这样计算：
- en: '[PRE40]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'As the variable name suggests, the complementary CDF is the probability that
    a value from the distribution is greater than `x`. If we draw 6 values from the
    distribution, the probability that all 6 exceed `x` is:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如变量名所示，补充CDF是分布中的值大于`x`的概率。如果我们从分布中抽取6个值，那么6个值都大于`x`的概率是：
- en: '[PRE41]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'If all 6 exceed `x`, that means their minimum exceeds `x`, so `prob_gt6` is
    the complementary CDF of the minimum. And that means we can compute the CDF of
    the minimum like this:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果6个值都大于`x`，那么它们的最小值就大于`x`，所以`prob_gt6`是最小值的补充CDF。这意味着我们可以这样计算最小值的CDF：
- en: '[PRE42]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The result is a Pandas `Series` that represents the CDF of the minimum of six
    attributes. We can put those values in a `Cdf` object like this:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个代表六个属性的最小值的CDF的Pandas`Series`。我们可以这样将这些值放入`Cdf`对象中：
- en: '[PRE43]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Here’s what it looks like, along with the distribution of the maximum.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这是它的样子，以及最大值的分布。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格源代码隐藏代码单元格源代码</summary>
- en: '[PRE44]</details> ![_images/14d14772b16b978755119cdf3244a50fcd4ecc0f3b27d903f70eed78bc9724ed.png](../Images/acdca4e46dc16ef0ddd137186b392dd3.png)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE44]</details> ![_images/14d14772b16b978755119cdf3244a50fcd4ecc0f3b27d903f70eed78bc9724ed.png](../Images/acdca4e46dc16ef0ddd137186b392dd3.png)'
- en: '`Cdf` provides `min_dist`, which does the same computation, so we can also
    compute the `Cdf` of the minimum like this:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`Cdf`提供了`min_dist`，它执行相同的计算，所以我们也可以这样计算最小值的`Cdf`：'
- en: '[PRE45]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: And we can confirm that the differences are small.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以确认差异很小。
- en: '[PRE46]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: In the exercises at the end of this chapter, you’ll use distributions of the
    minimum and maximum to do Bayesian inference. But first we’ll see what happens
    when we mix distributions.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章末尾的练习中，您将使用最小值和最大值的分布进行贝叶斯推断。但首先，我们将看看当我们混合分布时会发生什么。
- en: Mixture
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 混合
- en: In this section I’ll show how we can compute a distribution which is a mixture
    of other distributions. I’ll explain what that means with some simple examples;
    then, more usefully, we’ll see how these mixtures are used to make predictions.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我将展示如何计算其他分布的混合分布。我将用一些简单的例子解释这意味着什么；然后，更有用的是，我们将看到这些混合是如何用于预测的。
- en: 'Here’s another example inspired by *Dungeons & Dragons*:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这是受*龙与地下城*启发的另一个例子：
- en: Suppose your character is armed with a dagger in one hand and a short sword
    in the other.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设您的角色一手拿着匕首，一手拿着短剑。
- en: During each round, you attack a monster with one of your two weapons, chosen
    at random.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每一轮中，您随机选择两种武器之一攻击怪物。
- en: The dagger causes one 4-sided die of damage; the short sword causes one 6-sided
    die of damage.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 匕首造成一次4面骰的伤害；短剑造成一次6面骰的伤害。
- en: What is the distribution of damage you inflict in each round?
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在每一轮中，您造成的伤害分布是什么？
- en: 'To answer this question, I’ll make a `Pmf` to represent the 4-sided and 6-sided
    dice:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回答这个问题，我将制作一个`Pmf`来表示4面和6面骰：
- en: '[PRE48]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Now, let’s compute the probability you inflict 1 point of damage.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们计算您造成1点伤害的概率。
- en: If you attacked with the dagger, it’s 1/4.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您用匕首攻击，那么概率是1/4。
- en: If you attacked with the short sword, it’s 1/6.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您用短剑攻击，那么概率是1/6。
- en: 'Because the probability of choosing either weapon is 1/2, the total probability
    is the average:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 因为选择任何一种武器的概率是1/2，所以总概率是平均值：
- en: '[PRE49]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: For the outcomes 2, 3, and 4, the probability is the same, but for 5 and 6 it’s
    different, because those outcomes are impossible with the 4-sided die.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 对于结果2、3和4，概率是相同的，但对于5和6，概率是不同的，因为这些结果在4面骰中是不可能的。
- en: '[PRE51]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: To compute the distribution of the mixture, we could loop through the possible
    outcomes and compute their probabilities.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 要计算混合的分布，我们可以循环遍历可能的结果并计算它们的概率。
- en: 'But we can do the same computation using the `+` operator:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们可以使用`+`运算符进行相同的计算：
- en: '[PRE53]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Here’s what the mixture of these distributions looks like.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这是这些分布的混合的样子。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格源代码隐藏代码单元格源代码</summary>
- en: '[PRE54]</details> ![_images/8b9a1606de2696f9eb941323b7a4be46212549d4fdb795c058aaec06b86cbd3f.png](../Images/40dffb285e73a6b0eff9077d69b38935.png)'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE54]</details> ![_images/8b9a1606de2696f9eb941323b7a4be46212549d4fdb795c058aaec06b86cbd3f.png](../Images/40dffb285e73a6b0eff9077d69b38935.png)'
- en: 'Now suppose you are fighting three monsters:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设您正在与三只怪物战斗：
- en: One has a club, which causes one 4-sided die of damage.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种是狼牙棒，造成一次4面骰的伤害。
- en: One has a mace, which causes one 6-sided die.
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种是狼牙棒，造成一次6面骰的伤害。
- en: And one has a quarterstaff, which also causes one 6-sided die.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还有一种是长棍，也造成一次6面骰的伤害。
- en: 'Because the melee is disorganized, you are attacked by one of these monsters
    each round, chosen at random. To find the distribution of the damage they inflict,
    we can compute a weighted average of the distributions, like this:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 因为近战是无序的，每轮你都会被这些怪物中的一个攻击，随机选择。为了找到他们造成的伤害分布，我们可以计算分布的加权平均值，就像这样：
- en: '[PRE55]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: This distribution is a mixture of one 4-sided die and two 6-sided dice. Here’s
    what it looks like.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这个分布是一个4面的骰子和两个6面的骰子的混合物。这就是它的样子。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格源代码隐藏代码单元格源代码</summary>
- en: '[PRE56]</details> ![_images/f60dbbf72b2cde8995df0cfb2c309eecf89fcb9825a5732787fa643e88135f47.png](../Images/fb9aedc2a225a006fe335ec5227f1d09.png)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE56]</details> ![_images/f60dbbf72b2cde8995df0cfb2c309eecf89fcb9825a5732787fa643e88135f47.png](../Images/fb9aedc2a225a006fe335ec5227f1d09.png)'
- en: In this section we used the `+` operator, which adds the probabilities in the
    distributions, not to be confused with `Pmf.add_dist`, which computes the distribution
    of the sum of the distributions.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们使用了`+`运算符，它将分布中的概率相加，不要与`Pmf.add_dist`混淆，后者计算分布的总和的分布。
- en: 'To demonstrate the difference, I’ll use `Pmf.add_dist` to compute the distribution
    of the total damage done per round, which is the sum of the two mixtures:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示区别，我将使用`Pmf.add_dist`来计算每轮造成的总伤害分布，这是两个混合物的总和：
- en: '[PRE57]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: And here’s what it looks like.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是它的样子。
- en: '[PRE58]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '![_images/6cceb610ad3888a89dfb4a009a3ba37adb57e3f14e404a9ae1d00ef8d6792131.png](../Images/36ea8b551bbb3ffb6e6d20dde00e88bc.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![_images/6cceb610ad3888a89dfb4a009a3ba37adb57e3f14e404a9ae1d00ef8d6792131.png](../Images/36ea8b551bbb3ffb6e6d20dde00e88bc.png)'
- en: General Mixtures
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一般混合物
- en: In the previous section we computed mixtures in an *ad hoc* way. Now we’ll see
    a more general solution. In future chapters, we’ll use this solution to generate
    predictions for real-world problems, not just role-playing games. But if you’ll
    bear with me, we’ll continue the previous example for one more section.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，我们以一种*特设*的方式计算了混合物。现在我们将看到一个更一般的解决方案。在以后的章节中，我们将使用这个解决方案来为现实世界的问题生成预测，而不仅仅是角色扮演游戏。但是如果你能忍耐一下，我们将在下一节继续上一个例子。
- en: 'Suppose three more monsters join the combat, each of them with a battle axe
    that causes one 8-sided die of damage. Still, only one monster attacks per round,
    chosen at random, so the damage they inflict is a mixture of:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 假设又有三个怪物加入战斗，每个怪物都有一把造成8面骰子伤害的战斧。仍然，每轮只有一个怪物随机攻击，所以他们造成的伤害是一个混合物：
- en: One 4-sided die,
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个4面的骰子，
- en: Two 6-sided dice, and
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个6面的骰子，和
- en: Three 8-sided dice.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 三个8面的骰子。
- en: 'I’ll use a `Pmf` to represent a randomly chosen monster:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用`Pmf`来表示一个随机选择的怪物：
- en: '[PRE59]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '|  | probs |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '|  | probs |'
- en: '| --- | --- |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 4 | 0.166667 |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 0.166667 |'
- en: '| 6 | 0.333333 |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 0.333333 |'
- en: '| 8 | 0.500000 |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 0.500000 |'
- en: This distribution represents the number of sides on the die we’ll roll and the
    probability of rolling each one. For example, one of the six monsters has a dagger,
    so the probability is \(1/6\) that we roll a 4-sided die.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 这个分布代表了我们将掷骰子的面数以及掷每个面的概率。例如，六个怪物中的一个有一把匕首，所以我们掷一个4面的骰子的概率是\(1/6\)。
- en: 'Next I’ll make a sequence of `Pmf` objects to represent the dice:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我将制作一个`Pmf`对象序列来表示骰子：
- en: '[PRE60]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: To compute the distribution of the mixture, I’ll compute the weighted average
    of the dice, using the probabilities in `pmf_dice` as the weights.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 为了计算混合物的分布，我将使用`pmf_dice`中的概率计算骰子的加权平均值。
- en: 'To express this computation concisely, it is convenient to put the distributions
    into a Pandas `DataFrame`:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简洁地表达这个计算，将分布放入Pandas的`DataFrame`中是很方便的：
- en: '[PRE61]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '|  | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '|  | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| 0 | 0.250000 | 0.250000 | 0.250000 | 0.250000 | NaN | NaN | NaN | NaN |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 0.250000 | 0.250000 | 0.250000 | 0.250000 | NaN | NaN | NaN | NaN |'
- en: '| 1 | 0.166667 | 0.166667 | 0.166667 | 0.166667 | 0.166667 | 0.166667 | NaN
    | NaN |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 0.166667 | 0.166667 | 0.166667 | 0.166667 | 0.166667 | 0.166667 | NaN
    | NaN |'
- en: '| 2 | 0.125000 | 0.125000 | 0.125000 | 0.125000 | 0.125000 | 0.125000 | 0.125
    | 0.125 |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 0.125000 | 0.125000 | 0.125000 | 0.125000 | 0.125000 | 0.125000 | 0.125
    | 0.125 |'
- en: The result is a `DataFrame` with one row for each distribution and one column
    for each possible outcome. Not all rows are the same length, so Pandas fills the
    extra spaces with the special value `NaN`, which stands for “not a number”. We
    can use `fillna` to replace the `NaN` values with 0.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个`DataFrame`，每个分布一行，每个可能的结果一列。不是所有的行都是相同的长度，所以Pandas用特殊值`NaN`填充额外的空格，`NaN`代表“不是一个数字”。我们可以使用`fillna`将`NaN`值替换为0。
- en: 'The next step is to multiply each row by the probabilities in `pmf_dice`, which
    turns out to be easier if we transpose the matrix so the distributions run down
    the columns rather than across the rows:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将每一行乘以`pmf_dice`中的概率，如果我们将矩阵转置，使分布沿列而不是行进行，这样做会更容易：
- en: '[PRE62]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格内容隐藏代码单元格内容</summary>
- en: '[PRE63]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '|  | 0 | 1 | 2 |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '|  | 0 | 1 | 2 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 1 | 0.25 | 0.166667 | 0.125 |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 0.25 | 0.166667 | 0.125 |'
- en: '| 2 | 0.25 | 0.166667 | 0.125 |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 0.25 | 0.166667 | 0.125 |'
- en: '| 3 | 0.25 | 0.166667 | 0.125 |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 0.25 | 0.166667 | 0.125 |'
- en: '| 4 | 0.25 | 0.166667 | 0.125 |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 0.25 | 0.166667 | 0.125 |'
- en: '| 5 | 0.00 | 0.166667 | 0.125 |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 0.00 | 0.166667 | 0.125 |'
- en: '| 6 | 0.00 | 0.166667 | 0.125 |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 0.00 | 0.166667 | 0.125 |'
- en: '| 7 | 0.00 | 0.000000 | 0.125 |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| 7 | 0.00 | 0.000000 | 0.125 |'
- en: '| 8 | 0.00 | 0.000000 | 0.125 |</details>'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '| 8 | 0.00 | 0.000000 | 0.125 |</details>'
- en: 'Now we can multiply by the probabilities in `pmf_dice`:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以乘以`pmf_dice`中的概率：
- en: '[PRE64]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '|  | 0 | 1 | 2 |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '|  | 0 | 1 | 2 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 1 | 0.041667 | 0.055556 | 0.0625 |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 0.041667 | 0.055556 | 0.0625 |'
- en: '| 2 | 0.041667 | 0.055556 | 0.0625 |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 0.041667 | 0.055556 | 0.0625 |'
- en: '| 3 | 0.041667 | 0.055556 | 0.0625 |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 0.041667 | 0.055556 | 0.0625 |'
- en: '| 4 | 0.041667 | 0.055556 | 0.0625 |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 0.041667 | 0.055556 | 0.0625 |'
- en: '| 5 | 0.000000 | 0.055556 | 0.0625 |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 0.000000 | 0.055556 | 0.0625 |'
- en: '| 6 | 0.000000 | 0.055556 | 0.0625 |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 0.000000 | 0.055556 | 0.0625 |'
- en: '| 7 | 0.000000 | 0.000000 | 0.0625 |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| 7 | 0.000000 | 0.000000 | 0.0625 |'
- en: '| 8 | 0.000000 | 0.000000 | 0.0625 |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 0.000000 | 0.000000 | 0.0625 |'
- en: 'And add up the weighted distributions:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将加权分布相加：
- en: '[PRE66]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: <details class="hide below-input"><summary aria-label="Toggle hidden content">Show
    code cell output Hide code cell output</summary>
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide below-input"><summary aria-label="Toggle hidden content">显示代码单元格输出隐藏代码单元格输出</summary>
- en: '[PRE67]</details>'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE67]</details>'
- en: The argument `axis=1` means we want to sum across the rows. The result is a
    Pandas `Series`.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 参数`axis=1`表示我们要沿着行求和。结果是一个Pandas`Series`。
- en: Putting it all together, here’s a function that makes a weighted mixture of
    distributions.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有内容放在一起，这是一个制作加权分布混合的函数。
- en: '[PRE68]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'The first parameter is a `Pmf` that maps from each hypothesis to a probability.
    The second parameter is a sequence of `Pmf` objects, one for each hypothesis.
    We can call it like this:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '第一个参数是一个从每个假设到概率的`Pmf`，第二个参数是一个`Pmf`对象的序列，每个假设一个。我们可以这样调用它： '
- en: '[PRE69]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: And here’s what it looks like.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是它的样子。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格源隐藏代码单元格源</summary>
- en: '[PRE70]</details> ![_images/d1fd9f0edbd24a8c55e791574bac33f0b435f9d025cd1150a1bd483616ed0728.png](../Images/0bba9ae4868d2cfd8f0f1244e4c0a7d0.png)'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE70]</details> ![_images/d1fd9f0edbd24a8c55e791574bac33f0b435f9d025cd1150a1bd483616ed0728.png](../Images/0bba9ae4868d2cfd8f0f1244e4c0a7d0.png)'
- en: In this section I used Pandas so that `make_mixture` is concise, efficient,
    and hopefully not too hard to understand. In the exercises at the end of the chapter,
    you’ll have a chance to practice with mixtures, and we will use `make_mixture`
    again in the next chapter.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我使用了Pandas，使得`make_mixture`简洁、高效，并且希望不太难理解。在本章末尾的练习中，你将有机会练习混合，我们将在下一章中再次使用`make_mixture`。
- en: Summary
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter introduces the `Cdf` object, which represents the cumulative distribution
    function (CDF).
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了`Cdf`对象，它表示累积分布函数（CDF）。
- en: A `Pmf` and the corresponding `Cdf` are equivalent in the sense that they contain
    the same information, so you can convert from one to the other.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '`Pmf`和相应的`Cdf`在含有相同信息的意义上是等价的，因此你可以从一个转换为另一个。'
- en: 'The primary difference between them is performance: some operations are faster
    and easier with a `Pmf`; others are faster with a `Cdf`.'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 它们之间的主要区别是性能：一些操作使用`Pmf`更快更容易，而另一些操作使用`Cdf`更快。
- en: In this chapter we used `Cdf` objects to compute distributions of maximums and
    minimums; these distributions are useful for inference if we are given a maximum
    or minimum as data. You will see some examples in the exercises, and in future
    chapters. We also computed mixtures of distributions, which we will use in the
    next chapter to make predictions.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们使用`Cdf`对象来计算最大值和最小值的分布；如果我们已知最大值或最小值作为数据，这些分布对推断是有用的。你将在练习中看到一些例子，并在未来的章节中也会看到。我们还计算了分布的混合，我们将在下一章中用来进行预测。
- en: But first you might want to work on these exercises.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 但首先你可能想要做这些练习。
- en: Exercises
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习
- en: '**Exercise:** When you generate a D&D character, instead of rolling dice, you
    can use the “standard array” of attributes, which is 15, 14, 13, 12, 10, and 8.
    Do you think you are better off using the standard array or (literally) rolling
    the dice?'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习：** 当你生成一个D&D角色时，你可以使用“标准数组”而不是掷骰子，标准数组是15、14、13、12、10和8。你认为使用标准数组还是（真的）掷骰子更好？'
- en: 'Compare the distribution of the values in the standard array to the distribution
    we computed for the best three out of four:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 将标准数组中的值的分布与我们计算出的四个中的最好三个的分布进行比较：
- en: Which distribution has higher mean? Use the `mean` method.
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪个分布的平均值更高？使用`mean`方法。
- en: Which distribution has higher standard deviation? Use the `std` method.
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪个分布的标准差更高？使用`std`方法。
- en: The lowest value in the standard array is 8\. For each attribute, what is the
    probability of getting a value less than 8? If you roll the dice six times, what’s
    the probability that at least one of your attributes is less than 8?
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准数组中的最小值为8。对于每个属性，获得小于8的值的概率是多少？如果你掷骰子六次，你至少有一个属性小于8的概率是多少？
- en: The highest value in the standard array is 15\. For each attribute, what is
    the probability of getting a value greater than 15? If you roll the dice six times,
    what’s the probability that at least one of your attributes is greater than 15?
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准数组中的最大值为15。对于每个属性，获得大于15的值的概率是多少？如果你掷骰子六次，你至少有一个属性大于15的概率是多少？
- en: 'To get you started, here’s a `Cdf` that represents the distribution of attributes
    in the standard array:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让你开始，这里有一个代表标准数组中属性分布的`Cdf`：
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格内容隐藏代码单元格内容</summary>
- en: '[PRE71]</details>'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE71]</details>'
- en: We can compare it to the distribution of attributes you get by rolling four
    dice at adding up the best three.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将其与通过掷四个骰子并将最好的三个相加得到的属性分布进行比较。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格内容隐藏代码单元格内容</summary>
- en: '[PRE72]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '![_images/3b22f1492c17d517017af56424e1abf8d3eaa73a10290cac1682da19a5d0ef68.png](../Images/0413adb1051fcca69801202f0f55674d.png)</details>'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '![_images/3b22f1492c17d517017af56424e1abf8d3eaa73a10290cac1682da19a5d0ef68.png](../Images/0413adb1051fcca69801202f0f55674d.png)</details>'
- en: I plotted `cdf_standard` as a step function to show more clearly that it contains
    only a few quantities.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 我将`cdf_standard`绘制为阶梯函数，以更清楚地显示它只包含了少量的数量。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格内容隐藏代码单元格内容</summary>
- en: '[PRE73]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE74]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容隐藏代码单元格内容</summary>'
- en: '[PRE75]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE76]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容隐藏代码单元格内容</summary>'
- en: '[PRE77]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE78]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容隐藏代码单元格内容</summary>'
- en: '[PRE79]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE80]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容隐藏代码单元格内容</summary>'
- en: '[PRE81]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE82]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容隐藏代码单元格内容</summary>'
- en: '[PRE83]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '[PRE84]</details>'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE84]</details>'
- en: '**Exercise:** Suppose you are fighting three monsters:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习：**假设你正在与三个怪物战斗：'
- en: One is armed with a short sword that causes one 6-sided die of damage,
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用短剑武装，造成6面骰子的伤害，
- en: One is armed with a battle axe that causes one 8-sided die of damage, and
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用战斧武装，造成8面骰子的伤害，
- en: One is armed with a bastard sword that causes one 10-sided die of damage.
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用阔剑武装，造成10面骰子的伤害。
- en: One of the monsters, chosen at random, attacks you and does 1 point of damage.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个怪物随机选择攻击你，并造成1点伤害。
- en: Which monster do you think it was? Compute the posterior probability that each
    monster was the attacker.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 你认为是哪个怪物？计算每个怪物是攻击者的后验概率。
- en: If the same monster attacks you again, what is the probability that you suffer
    6 points of damage?
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 如果同一个怪物再次攻击你，你受到6点伤害的概率是多少？
- en: 'Hint: Compute a posterior distribution as we have done before and pass it as
    one of the arguments to `make_mixture`.'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 提示：计算后验分布，就像我们以前做过的那样，并将其作为“make_mixture”的一个参数传递。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格内容隐藏代码单元格内容</summary>
- en: '[PRE85]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '|  | probs |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
  zh: '|  | 概率 |'
- en: '| --- | --- |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 6 | 0.425532 |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: 6 0.425532
- en: '| 8 | 0.319149 |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: 8 0.319149
- en: '| 10 | 0.255319 |</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '| 10 | 0.255319 |</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容隐藏代码单元格内容</summary>'
- en: '[PRE86]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE86]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容隐藏代码单元格内容</summary>'
- en: '[PRE87]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '![_images/3231b49676e5e552b7acffd5e5afd5d9c65961bec5ee73f35ab02ea8cbc004e6.png](../Images/bc26d662574ca89e65b2ecd142584a7a.png)</details><details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '![_images/3231b49676e5e552b7acffd5e5afd5d9c65961bec5ee73f35ab02ea8cbc004e6.png](../Images/bc26d662574ca89e65b2ecd142584a7a.png)</details><details
    class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格内容隐藏代码单元格内容</summary>'
- en: '[PRE88]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]</details>'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE89]</details>'
- en: '**Exercise:** Henri Poincaré was a French mathematician who taught at the Sorbonne
    around 1900\. The following anecdote about him is probably fiction, but it makes
    an interesting probability problem.'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习：**亨利·庞加莱是一位法国数学家，他在1900年左右在索邦大学任教。关于他的以下轶事可能是虚构的，但它构成了一个有趣的概率问题。'
- en: Supposedly Poincaré suspected that his local bakery was selling loaves of bread
    that were lighter than the advertised weight of 1 kg, so every day for a year
    he bought a loaf of bread, brought it home and weighed it. At the end of the year,
    he plotted the distribution of his measurements and showed that it fit a normal
    distribution with mean 950 g and standard deviation 50 g. He brought this evidence
    to the bread police, who gave the baker a warning.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 据说庞加莱怀疑他当地的面包店出售的面包比宣传的1公斤还要轻，所以他每天买一条面包，带回家称重。一年结束时，他绘制了他的测量分布，并表明它符合均值为950克，标准差为50克的正态分布。他把这个证据带给了面包警察，警告了面包师傅。
- en: For the next year, Poincaré continued to weigh his bread every day. At the end
    of the year, he found that the average weight was 1000 g, just as it should be,
    but again he complained to the bread police, and this time they fined the baker.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的一年里，庞加莱继续每天称重他的面包。一年结束时，他发现平均重量是1000克，正如应该的那样，但他再次向面包警察投诉，这次他们罚了面包师。
- en: Why? Because the shape of the new distribution was asymmetric. Unlike the normal
    distribution, it was skewed to the right, which is consistent with the hypothesis
    that the baker was still making 950 g loaves, but deliberately giving Poincaré
    the heavier ones.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么？因为新分布的形状是不对称的。与正态分布不同，它向右倾斜，这与面包师仍在制作950克面包，但故意给庞加莱更重的面包的假设一致。
- en: To see whether this anecdote is plausible, let’s suppose that when the baker
    sees Poincaré coming, he hefts `n` loaves of bread and gives Poincaré the heaviest
    one. How many loaves would the baker have to heft to make the average of the maximum
    1000 g?
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 看看这个轶事是否可信，假设当面包师看到庞加莱来时，他举起`n`条面包并给庞加莱最重的一条。面包师必须举起多少条面包才能使最大1000克的平均值？
- en: To get you started, I’ll generate a year’s worth of data from a normal distribution
    with the given parameters.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让你开始，我将从具有给定参数的正态分布生成一年的数据。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格内容隐藏代码单元格内容</summary>
- en: '[PRE90]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE90]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE91]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE92]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE93]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '![_images/57c85f62be8c20d60381e7e6da0fa30582fd9c72ffe89769e158ad5a12426644.png](../Images/aee57c7ae72c68509f6035814eced875.png)</details>'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '![_images/57c85f62be8c20d60381e7e6da0fa30582fd9c72ffe89769e158ad5a12426644.png](../Images/aee57c7ae72c68509f6035814eced875.png)</details>'

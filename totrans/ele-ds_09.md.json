["```py\ndict_file = '2015_2017_FemPregSetup.dct'\ndata_file = '2015_2017_FemPregData.dat' \n```", "```py\nfrom statadict import parse_stata_dict\n\nstata_dict = parse_stata_dict(dict_file)\nstata_dict \n```", "```py\n<statadict.base.StataDict at 0x7f26b4428e50> \n```", "```py\nimport pandas as pd\n\nnsfg = pd.read_fwf(data_file, \n                   names=stata_dict.names, \n                   colspecs=stata_dict.colspecs)\ntype(nsfg) \n```", "```py\npandas.core.frame.DataFrame \n```", "```py\nnsfg.head() \n```", "```py\n# NOTE: For the printed version of the book, \n# I'm using iloc to show\n# the first 5 rows and first 9 columns \nnsfg.iloc[:5,:9] \n```", "```py\nnsfg.shape \n```", "```py\n(9553, 248) \n```", "```py\nnsfg.columns \n```", "```py\nIndex(['CASEID', 'PREGORDR', 'HOWPREG_N', 'HOWPREG_P', 'MOSCURRP', 'NOWPRGDK',\n       'PREGEND1', 'PREGEND2', 'HOWENDDK', 'NBRNALIV',\n       ...\n       'SECU', 'SEST', 'CMINTVW', 'CMLSTYR', 'CMJAN3YR', 'CMJAN4YR',\n       'CMJAN5YR', 'QUARTER', 'PHASE', 'INTVWYEAR'],\n      dtype='object', length=248) \n```", "```py\npounds = nsfg['BIRTHWGT_LB1']\ntype(pounds) \n```", "```py\npandas.core.series.Series \n```", "```py\npounds.head() \n```", "```py\n0    7.0\n1    NaN\n2    9.0\n3    6.0\n4    7.0\nName: BIRTHWGT_LB1, dtype: float64 \n```", "```py\npounds = nsfg['BIRTHWGT_LB1']\nounces = nsfg['BIRTHWGT_OZ1'] \n```", "```py\npounds.value_counts() \n```", "```py\npounds.value_counts().sort_index() \n```", "```py\n0.0        2\n1.0       28\n2.0       46\n3.0       76\n4.0      179\n5.0      570\n6.0     1644\n7.0     2268\n8.0     1287\n9.0      396\n10.0      82\n11.0      17\n12.0       2\n13.0       1\n14.0       1\n98.0       2\n99.0      89\nName: BIRTHWGT_LB1, dtype: int64 \n```", "```py\npounds.describe() \n```", "```py\ncount    6690.000000\nmean        8.008819\nstd        10.771360\nmin         0.000000\n25%         6.000000\n50%         7.000000\n75%         8.000000\nmax        99.000000\nName: BIRTHWGT_LB1, dtype: float64 \n```", "```py\nimport numpy as np\n\npounds_clean = pounds.replace([98, 99], np.nan) \n```", "```py\npounds_clean.describe() \n```", "```py\ncount    6599.000000\nmean        6.754357\nstd         1.383268\nmin         0.000000\n25%         6.000000\n50%         7.000000\n75%         8.000000\nmax        14.000000\nName: BIRTHWGT_LB1, dtype: float64 \n```", "```py\npounds_clean = pounds.replace([98, 99], np.nan)\nounces_clean = ounces.replace([98, 99], np.nan)\n\nbirth_weight = pounds_clean + ounces_clean / 16\nbirth_weight.mean() \n```", "```py\n7.180217889908257 \n```", "```py\nimport matplotlib.pyplot as plt\n\nbirth_weight.hist(bins=30)\nplt.xlabel('Birth weight in pounds')\nplt.ylabel('Number of live births')\nplt.title('Distribution of U.S. birth weight'); \n```", "```py\npreterm = (nsfg['PRGLNGTH'] < 37)\npreterm.dtype \n```", "```py\ndtype('bool') \n```", "```py\npreterm.head() \n```", "```py\n0    False\n1     True\n2    False\n3    False\n4    False\nName: PRGLNGTH, dtype: bool \n```", "```py\npreterm.sum() \n```", "```py\n3675 \n```", "```py\npreterm.mean() \n```", "```py\n0.38469590704490736 \n```", "```py\nlive = (nsfg['OUTCOME'] == 1)\nlive.mean() \n```", "```py\n0.7006176070344394 \n```", "```py\nlive_preterm = (live & preterm)\nlive_preterm.mean() \n```", "```py\n0.08929132209777034 \n```", "```py\npreterm_weight = birth_weight[preterm]\npreterm_weight.mean() \n```", "```py\n5.480958781362007 \n```", "```py\nfullterm = (nsfg['PRGLNGTH'] >= 37) \n```", "```py\nfull_term_weight = birth_weight[fullterm]\nfull_term_weight.mean() \n```", "```py\n7.429609416096791 \n```", "```py\nfull_term_weight = birth_weight[live & fullterm]\nfull_term_weight.mean() \n```", "```py\n7.429609416096791 \n```", "```py\nnbrnaliv = nsfg['NBRNALIV']\nnbrnaliv.value_counts() \n```", "```py\n1.0    6573\n2.0     111\n3.0       6\nName: NBRNALIV, dtype: int64 \n```", "```py\nsampling_weight = nsfg['WGT2015_2017']\nsampling_weight.describe() \n```", "```py\ncount      9553.000000\nmean      13337.425944\nstd       16138.878271\nmin        1924.916000\n25%        4575.221221\n50%        7292.490835\n75%       15724.902673\nmax      106774.400000\nName: WGT2015_2017, dtype: float64 \n```", "```py\nmissing = birth_weight.isna()\nmissing.sum() \n```", "```py\n3013 \n```", "```py\nvalid = birth_weight.notna()\nvalid.sum() \n```", "```py\n6540 \n```", "```py\nsingle = (nbrnaliv == 1)\nselected = valid & live & single & fullterm\nselected.sum() \n```", "```py\n5648 \n```"]
["```py\nfrom os.path import basename, exists\n\ndef download(url):\n    filename = basename(url)\n    if not exists(filename):\n        from urllib.request import urlretrieve\n        local, _ = urlretrieve(url, filename)\n        print('Downloaded ' + local)\n\ndownload('https://github.com/AllenDowney/DSIRP/raw/main/timing.py') \n```", "```py\nfrom timing import run_timing_test, plot_timing_test \n```", "```py\nx = [1, 0, 0, 0] \n```", "```py\nimport numpy as np\n\nnp.fft.fft(x) \n```", "```py\narray([1.+0.j, 1.+0.j, 1.+0.j, 1.+0.j]) \n```", "```py\npi = np.pi\nexp = np.exp\nN = len(x)\nk = 0 \n```", "```py\nsum(x[n] * exp(-2j * pi * k * n / N) for n in range(N)) \n```", "```py\n(1+0j) \n```", "```py\ndef dft_k(x, k):\n    N = len(x)\n    return sum(x[n] * exp(-2j * pi * k * n / N) for n in range(N)) \n```", "```py\ndft_k(x, k=1) \n```", "```py\n(1+0j) \n```", "```py\ndef dft(x):\n    N = len(x)\n    X = [dft_k(x, k) for k in range(N)]\n    return X \n```", "```py\ndft(x) \n```", "```py\n[(1+0j), (1+0j), (1+0j), (1+0j)] \n```", "```py\ndef test_dft(N):\n    x = np.random.normal(size=N)\n    X = dft(x) \n```", "```py\n%time test_dft(512) \n```", "```py\nCPU times: user 772 ms, sys: 44 \u00b5s, total: 772 ms\nWall time: 772 ms \n```", "```py\nns, ts = run_timing_test(test_dft, start_at=5)\nplot_timing_test(ns, ts, 'test_dft', exp=2) \n```", "```py\n32 0.010000000000000231\n64 0.009999999999999787\n128 0.050000000000000266\n256 0.18999999999999995\n512 0.79\n1024 3.1799999999999993 \n```", "```py\ndef merge(E, O):\n    N = len(E) * 2\n    ns = np.arange(N)\n    W = np.exp(-2j * pi * ns / N)\n    return np.tile(E, 2) + W * np.tile(O, 2) \n```", "```py\nfft_norec(x) \n```", "```py\narray([1.+0.j, 1.+0.j, 1.+0.j, 1.+0.j]) \n```", "```py\ndef test_fft_norec(N):\n    x = np.random.normal(size=N)\n    spectrum = fft_norec(x) \n```", "```py\n%time test_fft_norec(512) \n```", "```py\nCPU times: user 384 ms, sys: 3.38 ms, total: 388 ms\nWall time: 387 ms \n```", "```py\nns, ts = run_timing_test(test_fft_norec, start_at=5)\nplot_timing_test(ns, ts, 'test_fft_norec', exp=2) \n```", "```py\n32 0.0\n64 0.0\n128 0.030000000000001137\n256 0.09999999999999964\n512 0.3899999999999988\n1024 1.5899999999999999 \n```", "```py\nfft_rec(x) \n```", "```py\narray([1.+0.j, 1.+0.j, 1.+0.j, 1.+0.j]) \n```", "```py\ndef test_fft_rec(N):\n    x = np.random.normal(size=N)\n    spectrum = fft_rec(x) \n```", "```py\n%time test_fft_rec(512) \n```", "```py\nCPU times: user 8.36 ms, sys: 42 \u00b5s, total: 8.4 ms\nWall time: 7.92 ms \n```", "```py\nns, ts = run_timing_test(test_fft_rec)\nplot_timing_test(ns, ts, 'test_fft_rec', exp=1) \n```", "```py\n1024 0.019999999999999574\n2048 0.030000000000001137\n4096 0.049999999999998934\n8192 0.11000000000000121\n16384 0.22999999999999865\n32768 0.45000000000000107\n65536 0.9000000000000004\n131072 1.83 \n```"]
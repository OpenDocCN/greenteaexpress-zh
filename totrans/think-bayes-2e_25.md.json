["```py\nobserved_gap_times = [\n    428.0, 705.0, 407.0, 465.0, 433.0, 425.0, 204.0, 506.0, 143.0, 351.0, \n    450.0, 598.0, 464.0, 749.0, 341.0, 586.0, 754.0, 256.0, 378.0, 435.0, \n    176.0, 405.0, 360.0, 519.0, 648.0, 374.0, 483.0, 537.0, 578.0, 534.0, \n    577.0, 619.0, 538.0, 331.0, 186.0, 629.0, 193.0, 360.0, 660.0, 484.0, \n    512.0, 315.0, 457.0, 404.0, 740.0, 388.0, 357.0, 485.0, 567.0, 160.0, \n    428.0, 387.0, 901.0, 187.0, 622.0, 616.0, 585.0, 474.0, 442.0, 499.0, \n    437.0, 620.0, 351.0, 286.0, 373.0, 232.0, 393.0, 745.0, 636.0, 758.0,\n] \n```", "```py\nimport numpy as np\n\nzs = np.array(observed_gap_times) / 60 \n```", "```py\nfrom utils import kde_from_sample\n\nqs = np.linspace(0, 20, 101)\npmf_z = kde_from_sample(zs, qs) \n```", "```py\nfrom utils import decorate\n\npmf_z.plot()\n\ndecorate(xlabel='Time (min)',\n         ylabel='PDF',\n         title='Distribution of time between trains') \n```", "```py\nlikelihood = pmf_z.qs \n```", "```py\nposterior_z = pmf_z * pmf_z.qs\nposterior_z.normalize() \n```", "```py\n7.772927524715933 \n```", "```py\npmf_z.plot(label='prior', color='C5')\nposterior_z.plot(label='posterior', color='C4')\n\ndecorate(xlabel='Time (min)',\n         ylabel='PDF',\n         title='Distribution of time between trains') \n```", "```py\npmf_z.mean(), posterior_z.mean() \n```", "```py\n(7.772927524715933, 8.89677416786441) \n```", "```py\nz = x + y. \n```", "```py\nfrom empiricaldist import Pmf\n\ndef make_elapsed_dist(gap, qs):\n    qs = qs[qs <= gap]\n    n = len(qs)\n    return Pmf(1/n, qs) \n```", "```py\nqs = posterior_z.qs\npmf_seq = [make_elapsed_dist(gap, qs) for gap in qs] \n```", "```py\npmf_seq[3] \n```", "```py\npmf_seq[-1].plot()\n\ndecorate(xlabel='Time (min)',\n         ylabel='PDF',\n         title='Distribution of wait time in 20 min gap') \n```", "```py\nfrom utils import make_mixture\n\npmf_x = make_mixture(posterior_z, pmf_seq) \n```", "```py\npmf_z.plot(label='prior gap', color='C5')\nposterior_z.plot(label='posterior gap', color='C4')\npmf_x.plot(label='elapsed time', color='C1')\n\ndecorate(xlabel='Time (min)',\n         ylabel='PDF',\n         title='Distribution of gap and elapsed times') \n```", "```py\nposterior_z.mean(), pmf_x.mean() \n```", "```py\n(8.89677416786441, 4.448387083932206) \n```", "```py\nfrom scipy.stats import poisson\n\nlam = 2\nnum_passengers = 10\nlikelihood = poisson(lam * pmf_x.qs).pmf(num_passengers) \n```", "```py\nposterior_x = pmf_x * likelihood\nposterior_x.normalize() \n```", "```py\n0.04757676716097805 \n```", "```py\npmf_x.plot(label='prior', color='C1')\nposterior_x.plot(label='posterior', color='C2')\n\ndecorate(xlabel='Time (min)',\n         ylabel='PDF',\n         title='Distribution of time since last train') \n```", "```py\npmf_x.mean(), posterior_x.mean() \n```", "```py\n(4.448387083932206, 5.1439350761797495) \n```", "```py\nz = x + y \n```", "```py\ny = z - x \n```", "```py\nposterior_y = Pmf.sub_dist(posterior_z, posterior_x) \n```", "```py\nnonneg = (posterior_y.qs >= 0)\nposterior_y = Pmf(posterior_y[nonneg])\nposterior_y.normalize() \n```", "```py\n0.8900343090047254 \n```", "```py\nposterior_x.make_cdf().plot(label='posterior of x', color='C2')\nposterior_y.make_cdf().plot(label='posterior of y', color='C3')\nposterior_z.make_cdf().plot(label='posterior of z', color='C4')\n\ndecorate(xlabel='Time (min)',\n         ylabel='PDF',\n         title='Distribution of elapsed time, wait time, gap') \n```", "```py\nsample = posterior_z.sample(260)\ndelays = [30, 40, 50]\naugmented_sample = np.append(sample, delays) \n```", "```py\nqs = np.linspace(0, 60, 101)\naugmented_posterior_z = kde_from_sample(augmented_sample, qs) \n```", "```py\naugmented_posterior_z.plot(label='augmented posterior of z', color='C4')\n\ndecorate(xlabel='Time (min)',\n         ylabel='PDF',\n         title='Distribution of time between trains') \n```", "```py\nqs = augmented_posterior_z.qs\npmf_seq = [make_elapsed_dist(gap, qs) for gap in qs]\npmf_x = make_mixture(augmented_posterior_z, pmf_seq)\nlam = 2\nnum_passengers = 10\n\ndef compute_posterior_y(num_passengers):   \n  \"\"\"Distribution of wait time based on `num_passengers`.\"\"\"\n    likelihood = poisson(lam * qs).pmf(num_passengers)\n    posterior_x = pmf_x * likelihood\n    posterior_x.normalize()\n    posterior_y = Pmf.sub_dist(augmented_posterior_z, posterior_x)\n    nonneg = (posterior_y.qs >= 0)\n    posterior_y = Pmf(posterior_y[nonneg])\n    posterior_y.normalize()\n    return posterior_y \n```", "```py\nposterior_y = compute_posterior_y(10) \n```", "```py\nposterior_y.mean() \n```", "```py\n4.774817797206827 \n```", "```py\n1 - posterior_y.make_cdf()(15) \n```", "```py\n0.014549512746375837 \n```", "```py\nnums = np.arange(0, 37, 3)\nposteriors = [compute_posterior_y(num) for num in nums] \n```", "```py\nmean_wait = [posterior_y.mean()\n             for posterior_y in posteriors] \n```", "```py\nimport matplotlib.pyplot as plt\n\nplt.plot(nums, mean_wait)\n\ndecorate(xlabel='Number of passengers',\n         ylabel='Expected time until next train',\n         title='Expected wait time based on number of passengers') \n```", "```py\nprob_late = [1 - posterior_y.make_cdf()(15) \n             for posterior_y in posteriors] \n```", "```py\nplt.plot(nums, prob_late)\n\ndecorate(xlabel='Number of passengers',\n         ylabel='Probability of being late',\n         title='Probability of being late based on number of passengers') \n```"]
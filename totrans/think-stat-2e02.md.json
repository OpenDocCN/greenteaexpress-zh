["```py\ninfile dictionary {\n  _column(1)  str12  caseid    %12s  \"RESPONDENT ID NUMBER\"\n  _column(13) byte   pregordr   %2f  \"PREGNANCY ORDER (NUMBER)\"\n} \n```", "```py\ndef ReadFemPreg(dct_file='2002FemPreg.dct',\n                dat_file='2002FemPreg.dat.gz'):\n    dct = thinkstats2.ReadStataDct(dct_file)\n    df = dct.ReadFixedWidth(dat_file, compression='gzip')\n    CleanFemPreg(df)\n    return df \n```", "```py\n>>> import nsfg\n>>> df = nsfg.ReadFemPreg()\n>>> df\n...\n[13593 rows x 244 columns] \n```", "```py\n>>> df.columns\nIndex([u'caseid', u'pregordr', u'howpreg_n', u'howpreg_p', ... ]) \n```", "```py\n>>> df.columns[1]\n'pregordr' \n```", "```py\n>>> pregordr = df['pregordr']\n>>> type(pregordr)\n<class 'pandas.core.series.Series'> \n```", "```py\n>>> pregordr\n0     1\n1     2\n2     1\n3     2\n...\n13590    3\n13591    4\n13592    5\nName: pregordr, Length: 13593, dtype: int64 \n```", "```py\n>>> pregordr[0]\n1\n>>> pregordr[2:5]\n2    1\n3    2\n4    3\nName: pregordr, dtype: int64 \n```", "```py\n>>> pregordr = df.pregordr \n```", "```py\ndef CleanFemPreg(df):\n    df.agepreg /= 100.0\n\n    na_vals = [97, 98, 99]\n    df.birthwgt_lb.replace(na_vals, np.nan, inplace=True)\n    df.birthwgt_oz.replace(na_vals, np.nan, inplace=True)\n\n    df['totalwgt_lb'] = df.birthwgt_lb + df.birthwgt_oz / 16.0 \n```", "```py\n97      NOT ASCERTAINED\n98      REFUSED\n99      DON'T KNOW \n```", "```py\n>>> import numpy as np\n>>> np.nan / 100.0\nnan \n```", "```py\n # CORRECT\n    df['totalwgt_lb'] = df.birthwgt_lb + df.birthwgt_oz / 16.0 \n```", "```py\n # WRONG!\n    df.totalwgt_lb = df.birthwgt_lb + df.birthwgt_oz / 16.0 \n```", "```py\nvalue   label                  Total\n1       LIVE BIRTH              9148\n2       INDUCED ABORTION        1862\n3       STILLBIRTH               120\n4       MISCARRIAGE             1921\n5       ECTOPIC PREGNANCY        190\n6       CURRENT PREGNANCY        352 \n```", "```py\n>>> df.outcome.value_counts().sort_index()\n1    9148\n2    1862\n3     120\n4    1921\n5     190\n6     352 \n```", "```py\nvalue   label                  Total\n.       INAPPLICABLE            4449\n0-5     UNDER 6 POUNDS          1125\n6       6 POUNDS                2223\n7       7 POUNDS                3049\n8       8 POUNDS                1889\n9-95    9 POUNDS OR MORE         799 \n```", "```py\n>>> df.birthwgt_lb.value_counts(sort=False)\n0        8\n1       40\n2       53\n3       98\n4      229\n5      697\n6     2223\n7     3049\n8     1889\n9      623\n10     132\n11      26\n12      10\n13       3\n14       3\n15       1\n51       1 \n```", "```py\ndf.loc[df.birthwgt_lb > 20, 'birthwgt_lb'] = np.nan \n```", "```py\ndef MakePregMap(df):\n    d = defaultdict(list)\n    for index, caseid in df.caseid.iteritems():\n        d[caseid].append(index)\n    return d \n```", "```py\n>>> caseid = 10229\n>>> preg_map = nsfg.MakePregMap(df)\n>>> indices = preg_map[caseid]\n>>> df.outcome[indices].values\n[4 4 4 4 4 4 1] \n```", "```py\n*$ ipython notebook &* \n```", "```py\n*$ ipython notebook &* \n```"]
["```py\nimport numpy as np\nimport pandas as pd\n\nn = np.array([10, 100, 1000, 10000])\ntable = pd.DataFrame(index=n)\ntable['Algorithm A'] = 100 * n + 1\ntable['Algorithm B'] = n**2 + n + 1\ntable['Ratio (B/A)'] = table['Algorithm B'] / table['Algorithm A']\ntable \n```", "```py\nimport numpy as np\nimport pandas as pd\n\nn = np.array([10, 100, 1000, 10000])\ntable = pd.DataFrame(index=n)\ntable['Algorithm C'] = n + 1000000\ntable['Algorithm B'] = n**2 + n + 1\ntable['Ratio (C/B)'] = table['Algorithm B'] / table['Algorithm C']\ntable \n```", "```py\nimport matplotlib.pyplot as plt\n\nns = np.arange(10, 1500)\nys = 100 * ns + 1\nplt.plot(ns, ys, label='Algorithm A')\n\nys = ns**2 + ns + 1\nplt.plot(ns, ys, label='Algorithm B')\n\nys = ns + 1_000_000\nplt.plot(ns, ys, label='Algorithm C')\n\nplt.yscale('log')\nplt.xlabel('Problem size (n)')\nplt.ylabel('Run time')\nplt.legend(); \n```", "```py\ndef compute_sum(t):\n    total = 0\n    for x in t:\n        total += x\n    return total \n```", "```py\nt = range(10)\ncompute_sum(t) \n```", "```py\n45 \n```", "```py\n%timeit compute_sum(t) \n```", "```py\n303 ns \u00b1 1.26 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each) \n```", "```py\n%timeit sum(t) \n```"]
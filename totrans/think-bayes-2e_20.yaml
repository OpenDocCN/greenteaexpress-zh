- en: Regression
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://allendowney.github.io/ThinkBayes2/chap17.html](https://allendowney.github.io/ThinkBayes2/chap17.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In the previous chapter we saw several examples of logistic regression, which
    is based on the assumption that the likelihood of an outcome, expressed in the
    form of log odds, is a linear function of some quantity (continuous or discrete).
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter we’ll work on examples of simple linear regression, which models
    the relationship between two quantities. Specifically, we’ll look at changes over
    time in snowfall and the marathon world record.
  prefs: []
  type: TYPE_NORMAL
- en: The models we’ll use have three parameters, so you might want to review the
    tools we used for the three-parameter model in <<_MarkandRecapture>>.
  prefs: []
  type: TYPE_NORMAL
- en: More Snow?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I am under the impression that we don’t get as much snow around here as we used
    to. By “around here” I mean Norfolk County, Massachusetts, where I was born, grew
    up, and currently live. And by “used to” I mean compared to when I was young,
    like in 1978 when we got [27 inches of snow](https://en.wikipedia.org/wiki/Northeastern_United_States_blizzard_of_1978)
    and I didn’t have to go to school for a couple of weeks.
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately, we can test my conjecture with data. Norfolk County happens to
    be the location of the [Blue Hill Meteorological Observatory](https://en.wikipedia.org/wiki/Blue_Hill_Meteorological_Observatory),
    which keeps the oldest continuous weather record in North America.
  prefs: []
  type: TYPE_NORMAL
- en: Data from this and many other weather stations is available from the [National
    Oceanic and Atmospheric Administration](https://www.ncdc.noaa.gov/cdo-web/search)
    (NOAA). I collected data from the Blue Hill Observatory from May 11, 1967 to May
    11, 2020.
  prefs: []
  type: TYPE_NORMAL
- en: The following cell downloads the data as a CSV file.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use Pandas to read the data into `DataFrame`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Here’s what the last few rows look like.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '|  | STATION | NAME | DATE | PRCP | SNOW | SNWD | TMAX | TMIN | TOBS | WESD
    | WT01 | WT03 | WT04 | WT05 | WT06 | WT08 | WT09 | WT11 | WT16 | WT18 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 20452 | USC00190736 | BLUE HILL COOP, MA US | 2023-05-09 | 0.0 | 0.0 | 0.0
    | 75 | 45.0 | 51.0 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN
    | NaN |'
  prefs: []
  type: TYPE_TB
- en: '| 20453 | USC00190736 | BLUE HILL COOP, MA US | 2023-05-10 | 0.0 | 0.0 | 0.0
    | 60 | 42.0 | 51.0 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN
    | NaN |'
  prefs: []
  type: TYPE_TB
- en: '| 20454 | USC00190736 | BLUE HILL COOP, MA US | 2023-05-11 | 0.0 | 0.0 | 0.0
    | 72 | 51.0 | 59.0 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN
    | NaN |</details>'
  prefs: []
  type: TYPE_NORMAL
- en: 'The columns we’ll use are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`DATE`, which is the date of each observation,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SNOW`, which is the total snowfall in inches.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I’ll add a column that contains just the year part of the dates.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: And use `groupby` to add up the total snowfall in each year.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The first and last years are not complete, so I’ll drop them.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: The following figure shows total snowfall during each of the complete years
    in my lifetime.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]</details> ![_images/a18b7ac97e8129afa56f1cc415d2c5d0e3cf9c07dd90c3fcc04552fe5632ef46.png](../Images/76639d0aa2b4e61f7774c9cff6eaac42.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Looking at this plot, it’s hard to say whether snowfall is increasing, decreasing,
    or unchanged. In the last decade, we’ve had several years with more snow than
    1978, including 2015, which was the snowiest winter in the Boston area in modern
    history, with a total of 141 inches.
  prefs: []
  type: TYPE_NORMAL
- en: This kind of question – looking at noisy data and wondering whether it is going
    up or down – is precisely the question we can answer with Bayesian regression.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: Regression Model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The foundation of regression (Bayesian or not) is the assumption that a time
    series like this is the sum of two parts:'
  prefs: []
  type: TYPE_NORMAL
- en: A linear function of time, and
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A series of random values drawn from a distribution that is not changing over
    time.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Mathematically, the regression model is
  prefs: []
  type: TYPE_NORMAL
- en: \[y = a x + b + \epsilon\]
  prefs: []
  type: TYPE_NORMAL
- en: where \(y\) is the series of measurements (snowfall in this example), \(x\)
    is the series of times (years) and \(\epsilon\) is the series of random values.
  prefs: []
  type: TYPE_NORMAL
- en: \(a\) and \(b\) are the slope and intercept of the line through the data. They
    are unknown parameters, so we will use the data to estimate them.
  prefs: []
  type: TYPE_NORMAL
- en: We don’t know the distribution of \(\epsilon\), so we’ll make the additional
    assumption that it is a normal distribution with mean 0 and unknown standard deviation,
    \(\sigma\).
  prefs: []
  type: TYPE_NORMAL
- en: To see whether this assumption is reasonable, I’ll plot the distribution of
    total snowfall and a normal model with the same mean and standard deviation.
  prefs: []
  type: TYPE_NORMAL
- en: Here’s a `Pmf` object that represents the distribution of snowfall.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: And here are the mean and standard deviation of the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: I’ll use the `norm` object from SciPy to compute the CDF of a normal distribution
    with the same mean and standard deviation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Here’s what the distribution of the data looks like compared to the normal model.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]</details> ![_images/d7b23964f610a03df17062f571da04796b630b921052f6c1b3cf18f64557c2f6.png](../Images/2290d5efd2871e877a0afa00b0c79968.png)'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve had more winters below the mean than expected, but overall this looks
    like a reasonable model.
  prefs: []
  type: TYPE_NORMAL
- en: Least Squares Regression
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Our regression model has three parameters: slope, intercept, and standard deviation
    of \(\epsilon\). Before we can estimate them, we have to choose priors. To help
    with that, I’ll use StatsModel to fit a line to the data by [least squares regression](https://en.wikipedia.org/wiki/Least_squares).'
  prefs: []
  type: TYPE_NORMAL
- en: First, I’ll use `reset_index` to convert `snow`, which is a `Series`, to a `DataFrame`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '|  | YEAR | SNOW |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 0 | 1968 | 44.7 |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | 1969 | 99.2 |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | 1970 | 66.8 |'
  prefs: []
  type: TYPE_TB
- en: The result is a `DataFrame` with two columns, `YEAR` and `SNOW`, in a format
    we can use with StatsModels.
  prefs: []
  type: TYPE_NORMAL
- en: As we did in the previous chapter, I’ll center the data by subtracting off the
    mean.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: And I’ll add a column to `data` so the dependent variable has a standard name.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Now, we can use StatsModels to compute the least squares fit to the data and
    estimate `slope` and `intercept`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: The intercept, about 64 inches, is the expected snowfall when `x=0`, which is
    the beginning of 1994. The estimated slope indicates that total snowfall is increasing
    at a rate of about 0.5 inches per year.
  prefs: []
  type: TYPE_NORMAL
- en: '`results` also provides `resid`, which is an array of residuals, that is, the
    differences between the data and the fitted line. The standard deviation of the
    residuals is an estimate of `sigma`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: We’ll use these estimates to choose prior distributions for the parameters.
  prefs: []
  type: TYPE_NORMAL
- en: Priors
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I’ll use uniform distributions for all three parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: I made the prior distributions different lengths for two reasons. First, if
    we make a mistake and use the wrong distribution, it will be easier to catch the
    error if they are all different lengths.
  prefs: []
  type: TYPE_NORMAL
- en: Second, it provides more precision for the most important parameter, `slope`,
    and spends less computational effort on the least important, `sigma`.
  prefs: []
  type: TYPE_NORMAL
- en: 'In <<_ThreeParameterModel>> we made a joint distribution with three parameters.
    I’ll wrap that process in a function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: And use it to make a `Pmf` that represents the joint distribution of the three
    parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '|  |  |  | probs |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Slope | Intercept | Sigma |  |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| -0.5 | 54.0 | 20.0 | 0.000015 |'
  prefs: []
  type: TYPE_TB
- en: '| 20.5 | 0.000015 |'
  prefs: []
  type: TYPE_TB
- en: '| 21.0 | 0.000015 |'
  prefs: []
  type: TYPE_TB
- en: The index of `Pmf` has three columns, containing values of `slope`, `inter`,
    and `sigma`, in that order.
  prefs: []
  type: TYPE_NORMAL
- en: With three parameters, the size of the joint distribution starts to get big.
    Specifically, it is the product of the lengths of the prior distributions. In
    this example, the prior distributions have 51, 41, and 31 values, so the length
    of the joint prior is 64,821.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE29]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE31]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE33]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: Likelihood
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now we’ll compute the likelihood of the data. To demonstrate the process, let’s
    assume temporarily that the parameters are known.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'I’ll extract the `xs` and `ys` from `data` as `Series` objects:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: And compute the “residuals”, which are the differences between the actual values,
    `ys`, and the values we expect based on `slope` and `inter`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: According to the model, the residuals should follow a normal distribution with
    mean 0 and standard deviation `sigma`. So we can compute the likelihood of each
    residual value using `norm` from SciPy.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: The result is an array of probability densities, one for each element of the
    dataset; their product is the likelihood of the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: As we saw in the previous chapter, the likelihood of any particular dataset
    tends to be small. If it’s too small, we might exceed the limits of floating-point
    arithmetic. When that happens, we can avoid the problem by computing likelihoods
    under a log transform. But in this example that’s not necessary.
  prefs: []
  type: TYPE_NORMAL
- en: The Update
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now we’re ready to do the update. First, we need to compute the likelihood of
    the data for each possible set of parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: This computation takes longer than many of the previous examples. We are approaching
    the limit of what we can do with grid approximations.
  prefs: []
  type: TYPE_NORMAL
- en: 'Nevertheless, we can do the update in the usual way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: <details class="hide below-input"><summary aria-label="Toggle hidden content">Show
    code cell output Hide code cell output</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: The result is a `Pmf` with a three-level index containing values of `slope`,
    `inter`, and `sigma`. To get the marginal distributions from the joint posterior,
    we can use `Pmf.marginal`, which we saw in <<_ThreeParameterModel>>.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'Here’s the posterior distribution for `sigma`:'
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]</details> ![_images/18d3bdf36ae9903d0c61bcf4256b0dc0929fbf4aa4caa9f8d899abefaa3ab113.png](../Images/b7d97ab697f1a05fa6e6eee325fd0b10.png)'
  prefs: []
  type: TYPE_NORMAL
- en: The most likely values for `sigma` are near 26 inches, which is consistent with
    our estimate based on the standard deviation of the data.
  prefs: []
  type: TYPE_NORMAL
- en: However, to say whether snowfall is increasing or decreasing, we don’t really
    care about `sigma`. It is a “nuisance parameter”, so-called because we have to
    estimate it as part of the model, but we don’t need it to answer the questions
    we are interested in.
  prefs: []
  type: TYPE_NORMAL
- en: Nevertheless, it is good to check the marginal distributions to make sure
  prefs: []
  type: TYPE_NORMAL
- en: The location is consistent with our expectations, and
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The posterior probabilities are near 0 at the extremes of the range, which indicates
    that the prior distribution covers all parameters with non-negligible probability.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this example, the posterior distribution of `sigma` looks fine.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the posterior distribution of `inter`:'
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]</details> ![_images/aa89f6dfaa595a9b8213690daa48a4b91af587d81ee8fb38e34bda398382d7db.png](../Images/d36f90212593df07fd9cedae5ef00b29.png)<details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE47]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: The posterior mean is about 64 inches, which is the expected amount of snow
    during the year at the midpoint of the range, 1994.
  prefs: []
  type: TYPE_NORMAL
- en: 'And finally, here’s the posterior distribution of `slope`:'
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]</details> ![_images/f3b98cd68b7ad121771619d3ad4c437ac7247f6618221ce47119409853c25c97.png](../Images/49c8db0b17f56932da348d787fc72807.png)<details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE50]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: The posterior mean is about 0.51 inches, which is consistent with the estimate
    we got from least squared regression.
  prefs: []
  type: TYPE_NORMAL
- en: The 90% credible interval is from 0.1 to 0.9, which indicates that our uncertainty
    about this estimate is pretty high. In fact, there is still a small posterior
    probability (about 2%) that the slope is negative.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE52]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: 'However, it is more likely that my conjecture was wrong: we are actually getting
    more snow around here than we used to, increasing at a rate of about a half-inch
    per year, which is substantial. On average, we get an additional 25 inches of
    snow per year than we did when I was young.'
  prefs: []
  type: TYPE_NORMAL
- en: This example shows that with slow-moving trends and noisy data, your instincts
    can be misleading.
  prefs: []
  type: TYPE_NORMAL
- en: Now, you might suspect that I overestimate the amount of snow when I was young
    because I enjoyed it, and underestimate it now because I don’t. But you would
    be mistaken.
  prefs: []
  type: TYPE_NORMAL
- en: During the Blizzard of 1978, we did not have a snowblower and my brother and
    I had to shovel. My sister got a pass for no good reason. Our driveway was about
    60 feet long and three cars wide near the garage. And we had to shovel Mr. Crocker’s
    driveway, too, for which we were not allowed to accept payment. Furthermore, as
    I recall it was during this excavation that I accidentally hit my brother with
    a shovel on the head, and it bled a lot because, you know, scalp wounds.
  prefs: []
  type: TYPE_NORMAL
- en: Anyway, the point is that I don’t think I overestimate the amount of snow when
    I was young because I have fond memories of it.
  prefs: []
  type: TYPE_NORMAL
- en: Optimization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The way we computed the likelihood in the previous section was pretty slow.
    The problem is that we looped through every possible set of parameters in the
    prior distribution, and there were more than 60,000 of them.
  prefs: []
  type: TYPE_NORMAL
- en: If we can do more work per iteration, and run the loop fewer times, we expect
    it to go faster.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to do that, I’ll unstack the prior distribution:'
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: '|  | Sigma | 20.0 | 20.5 | 21.0 | 21.5 | 22.0 | 22.5 | 23.0 | 23.5 | 24.0 |
    24.5 | ... | 30.5 | 31.0 | 31.5 | 32.0 | 32.5 | 33.0 | 33.5 | 34.0 | 34.5 | 35.0
    |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Slope | Intercept |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| -0.5 | 54.000 | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015
    | 0.000015 | 0.000015 | 0.000015 | 0.000015 | ... | 0.000015 | 0.000015 | 0.000015
    | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015 |'
  prefs: []
  type: TYPE_TB
- en: '| 54.525 | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015
    | 0.000015 | 0.000015 | 0.000015 | 0.000015 | ... | 0.000015 | 0.000015 | 0.000015
    | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015 |'
  prefs: []
  type: TYPE_TB
- en: '| 55.050 | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015
    | 0.000015 | 0.000015 | 0.000015 | 0.000015 | ... | 0.000015 | 0.000015 | 0.000015
    | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015 | 0.000015 |'
  prefs: []
  type: TYPE_TB
- en: 3 rows × 31 columns</details>
  prefs: []
  type: TYPE_NORMAL
- en: The result is a `DataFrame` with `slope` and `intercept` down the rows and `sigmas`
    across the columns.
  prefs: []
  type: TYPE_NORMAL
- en: The following is a version of `likelihood_regression` that takes the joint prior
    distribution in this form and returns the posterior distribution in the same form.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: This version loops through all possible pairs of `slope` and `inter`, so the
    loop runs about 2000 times.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE56]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: Each time through the loop, it uses a grid mesh to compute the likelihood of
    the data for all values of `sigma`. The result is an array with one column for
    each data point and one row for each value of `sigma`. Taking the product across
    the columns (`axis=1`) yields the probability of the data for each value of sigma,
    which we assign as a row in `likelihood`.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE58]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: We get the same result either way.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE60]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: But this version is about 25 times faster than the previous version.
  prefs: []
  type: TYPE_NORMAL
- en: This optimization works because many functions in NumPy and SciPy are written
    in C, so they run fast compared to Python. If you can do more work each time you
    call these functions, and less time running the loop in Python, your code will
    often run substantially faster.
  prefs: []
  type: TYPE_NORMAL
- en: In this version of the posterior distribution, `slope` and `inter` run down
    the rows and `sigma` runs across the columns. So we can use `marginal` to get
    the posterior joint distribution of `slope` and `intercept`.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: '|  |  | probs |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Slope | Intercept |  |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| -0.5 | 54.000 | 1.681717e-07 |'
  prefs: []
  type: TYPE_TB
- en: '| 54.525 | 2.268085e-07 |'
  prefs: []
  type: TYPE_TB
- en: '| 55.050 | 3.015062e-07 |</details>'
  prefs: []
  type: TYPE_NORMAL
- en: The result is a `Pmf` with two columns in the index. To plot it, we have to
    unstack it.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: '| Slope | -0.50 | -0.46 | -0.42 | -0.38 | -0.34 | -0.30 | -0.26 | -0.22 | -0.18
    | -0.14 | ... | 1.14 | 1.18 | 1.22 | 1.26 | 1.30 | 1.34 | 1.38 | 1.42 | 1.46 |
    1.50 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Intercept |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 54.000 | 1.681717e-07 | 2.848880e-07 | 4.744292e-07 | 7.761707e-07 | 0.000001
    | 0.000002 | 0.000003 | 0.000005 | 0.000007 | 0.000010 | ... | 7.116789e-07 |
    4.336070e-07 | 2.595674e-07 | 1.527668e-07 | 8.844849e-08 | 5.040388e-08 | 2.828465e-08
    | 1.563589e-08 | 8.517697e-09 | 4.573661e-09 |'
  prefs: []
  type: TYPE_TB
- en: '| 54.525 | 2.268085e-07 | 3.859703e-07 | 6.457296e-07 | 1.061331e-06 | 0.000002
    | 0.000003 | 0.000004 | 0.000006 | 0.000009 | 0.000014 | ... | 9.723366e-07 |
    5.896799e-07 | 3.513780e-07 | 2.058667e-07 | 1.186640e-07 | 6.733065e-08 | 3.762506e-08
    | 2.071531e-08 | 1.124098e-08 | 6.013601e-09 |'
  prefs: []
  type: TYPE_TB
- en: '| 55.050 | 3.015062e-07 | 5.153700e-07 | 8.661024e-07 | 1.430000e-06 | 0.000002
    | 0.000004 | 0.000006 | 0.000009 | 0.000013 | 0.000019 | ... | 1.309030e-06 |
    7.902856e-07 | 4.688054e-07 | 2.734522e-07 | 1.569383e-07 | 8.867160e-08 | 4.934762e-08
    | 2.706205e-08 | 1.462927e-08 | 7.797870e-09 |'
  prefs: []
  type: TYPE_TB
- en: 3 rows × 51 columns</details>
  prefs: []
  type: TYPE_NORMAL
- en: Here’s what it looks like.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/15787b4f5a09974c96d607a7735574d05c4332a7269c0f61e14282dbe1dfcf5c.png](../Images/762fd6734178df8934202c7576b1d061.png)</details>'
  prefs: []
  type: TYPE_NORMAL
- en: The ovals in the contour plot are aligned with the axes, which indicates that
    there is no correlation between `slope` and `inter` in the posterior distribution,
    which is what we expect since we centered the values.
  prefs: []
  type: TYPE_NORMAL
- en: In this example, the motivating question is about the slope of the line, so
    we answered it by looking at the posterior distribution of slope.
  prefs: []
  type: TYPE_NORMAL
- en: In the next example, the motivating question is about prediction, so we’ll use
    the joint posterior distribution to generate predictive distributions.
  prefs: []
  type: TYPE_NORMAL
- en: Marathon World Record
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For many running events, if you plot the world record pace over time, the result
    is a remarkably straight line. People, [including me](http://allendowney.blogspot.com/2011/04/two-hour-marathon-in-2045.html),
    have speculated about possible reasons for this phenomenon.
  prefs: []
  type: TYPE_NORMAL
- en: 'People have also speculated about when, if ever, the world record time for
    the marathon will be less than two hours. (Note: In 2019 Eliud Kipchoge ran the
    marathon distance in under two hours, which is an astonishing achievement that
    I fully appreciate, but for several reasons it did not count as a world record).'
  prefs: []
  type: TYPE_NORMAL
- en: So, as a second example of Bayesian regression, we’ll consider the world record
    progression for the marathon (for male runners), estimate the parameters of a
    linear model, and use the model to predict when a runner will break the two-hour
    barrier.
  prefs: []
  type: TYPE_NORMAL
- en: The following cell downloads a web page from Wikipedia that includes a table
    of marathon world records, and uses Pandas to put the data in a `DataFrame`.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE65]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: If that doesn’t work, I have made a copy of this page available. The following
    cell downloads and parses it.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: The first table is the one we want.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: '|  | Time | Name | Nationality | Date | Event/Place | Source | Notes |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 48 | 2:02:57 | Dennis Kimetto | Kenya | September 28, 2014 | Berlin Marathon
    | IAAF[86][87] ARRS[83] | The ARRS notes Kimetto''s extended time as 2:02... |'
  prefs: []
  type: TYPE_TB
- en: '| 49 | 2:01:39 | Eliud Kipchoge | Kenya | September 16, 2018 | Berlin Marathon
    | IAAF[1] | NaN |'
  prefs: []
  type: TYPE_TB
- en: '| 50 | 2:01:09 | Eliud Kipchoge | Kenya | September 25, 2022 | Berlin Marathon
    | IAAF[88] | NaN |</details>'
  prefs: []
  type: TYPE_NORMAL
- en: We can use Pandas to parse the dates. A few of them include notes that cause
    parsing problems, but the argument `errors='coerce'` tells Pandas to fill invalid
    dates with `NaT`, which is a version of `NaN` that represents “not a time”.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE69]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: We can also use Pandas to parse the record times.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: And convert the times to paces in miles per hour.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE72]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: The following function plots the results.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: Here’s what the results look like. The dashed line shows the speed required
    for a two-hour marathon, 13.1 miles per hour.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/cb9e2e797f7dd42dc78fccce00cc7fe74a07543923eb9891be8a7f6f4b5189b6.png](../Images/3ac8bc56e972880506b01bec3fc14893.png)</details>'
  prefs: []
  type: TYPE_NORMAL
- en: It’s not a perfectly straight line. In the early years of the marathon, the
    record speed increased quickly; since about 1970, it has been increasing more
    slowly.
  prefs: []
  type: TYPE_NORMAL
- en: For our analysis, let’s focus on the recent progression, starting in 1970.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: '|  | Time | Name | Nationality | Date | Event/Place | Source | Notes | date
    | time | y |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 32 | 2:09:28.8 | Ron Hill | United Kingdom | July 23, 1970 | Edinburgh, Scotland
    | ARRS[9] | NaN | 1970-07-23 | 0 days 02:09:28.800000 | 12.140871 |'
  prefs: []
  type: TYPE_TB
- en: '| 33 | 2:09:12 | Ian Thompson | United Kingdom | January 31, 1974 | Christchurch,
    New Zealand | ARRS[9] | NaN | 1974-01-31 | 0 days 02:09:12 | 12.167183 |'
  prefs: []
  type: TYPE_TB
- en: '| 34 | 2:09:05.6 | Shigeru So | Japan | February 5, 1978 | Beppu-Ōita Marathon
    | ARRS[9] | NaN | 1978-02-05 | 0 days 02:09:05.600000 | 12.177236 |'
  prefs: []
  type: TYPE_TB
- en: '| 35 | 2:09:01 | Gerard Nijboer | Netherlands | April 26, 1980 | Amsterdam
    Marathon | ARRS[9] | NaN | 1980-04-26 | 0 days 02:09:01 | 12.184472 |'
  prefs: []
  type: TYPE_TB
- en: '| 36 | 2:08:18 | Robert De Castella | Australia | December 6, 1981 | Fukuoka
    Marathon | IAAF,[53] ARRS[9] | NaN | 1981-12-06 | 0 days 02:08:18 | 12.252533
    |</details>'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the notebook for this chapter, you can see how I loaded and cleaned the
    data. The result is a `DataFrame` that contains the following columns (and additional
    information we won’t use):'
  prefs: []
  type: TYPE_NORMAL
- en: '`date`, which is a Pandas `Timestamp` representing the date when the world
    record was broken, and'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`speed`, which records the record-breaking pace in mph.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here’s what the results look like, starting in 1970:'
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]</details> ![_images/e0e47c76527482395e93a96135d115eca888e0ad44e1dea1a7ba82dfd6d4b5d2.png](../Images/4097d8cf3e5b87f7fbf86c4f0676bcfd.png)'
  prefs: []
  type: TYPE_NORMAL
- en: The data points fall approximately on a line, although it’s possible that the
    slope is increasing.
  prefs: []
  type: TYPE_NORMAL
- en: To prepare the data for regression, I’ll subtract away the approximate midpoint
    of the time interval, 1995.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: When we subtract two `Timestamp` objects, the result is a “time delta”, which
    we can convert to seconds and then to years.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE80]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: As in the previous example, I’ll use least squares regression to compute point
    estimates for the parameters, which will help with choosing priors.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: The estimated intercept is about 12.5 mph, which is the interpolated world record
    pace for 1995\. The estimated slope is about 0.015 mph per year, which is the
    rate the world record pace is increasing, according to the model.
  prefs: []
  type: TYPE_NORMAL
- en: Again, we can use the standard deviation of the residuals as a point estimate
    for `sigma`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: These parameters give us a good idea where we should put the prior distributions.
  prefs: []
  type: TYPE_NORMAL
- en: The Priors
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here are the prior distributions I chose for `slope`, `intercept`, and `sigma`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: And here’s the joint prior distribution.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: '|  |  |  | probs |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Slope | Intercept | Sigma |  |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 0.012 | 12.4 | 0.010000 | 0.000015 |'
  prefs: []
  type: TYPE_TB
- en: '| 0.016667 | 0.000015 |'
  prefs: []
  type: TYPE_TB
- en: '| 0.023333 | 0.000015 |'
  prefs: []
  type: TYPE_TB
- en: 'Now we can compute likelihoods as in the previous example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: Now we can do the update in the usual way.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: <details class="hide below-input"><summary aria-label="Toggle hidden content">Show
    code cell output Hide code cell output</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: 'And unpack the marginals:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/b8117b8b548af3c0044dd2cfca4737b200745242572c4ddd4c6c4bb358acbe8d.png](../Images/b50426fb2214eb48118bb145ce4ecc37.png)</details>'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the posterior distribution of `inter`:'
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]</details> ![_images/0672371f2c001a21e11016942fe04bcb4761581494d3b6bec0bb5d585b516904.png](../Images/7465fd7a9d1ae74eaf19d34594d109d1.png)<details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE96]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: The posterior mean is about 12.5 mph, which is the world record marathon pace
    the model predicts for the midpoint of the date range, 1994.
  prefs: []
  type: TYPE_NORMAL
- en: And here’s the posterior distribution of `slope`.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]</details> ![_images/7109d0d15b11012912c742b75e4e4c39cd5dfb2818b8a301ce029d65ac800228.png](../Images/93f87be8f78847458d7bf30cf4edbf5a.png)<details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE99]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: The posterior mean is about 0.015 mph per year, or 0.15 mph per decade.
  prefs: []
  type: TYPE_NORMAL
- en: 'That’s interesting, but it doesn’t answer the question we’re interested in:
    When will there be a two-hour marathon? To answer that, we have to make predictions.'
  prefs: []
  type: TYPE_NORMAL
- en: Prediction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To generate predictions, I’ll draw a sample from the posterior distribution
    of parameters, then use the regression equation to combine the parameters with
    the data.
  prefs: []
  type: TYPE_NORMAL
- en: '`Pmf` provides `choice`, which we can use to draw a random sample with replacement,
    using the posterior probabilities as weights.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: The result is an array of tuples. Looping through the sample, we can use the
    regression equation to generate predictions for a range of `xs`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: Each prediction is an array with the same length as `xs`, which I store as a
    row in `pred`. So the result has one row for each sample and one column for each
    value of `x`.
  prefs: []
  type: TYPE_NORMAL
- en: We can use `percentile` to compute the 5th, 50th, and 95th percentiles in each
    column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: To show the results, I’ll plot the median of the predictions as a line and the
    90% credible interval as a shaded area.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]</details> ![_images/da26aaa0faaca034b92e93a2aa91612ff8cef66bda7d869e32bd0f48698d039a.png](../Images/0a5ed315e6da6677b8e4dbdb57e42ba9.png)'
  prefs: []
  type: TYPE_NORMAL
- en: The dashed line shows the two-hour marathon pace, which is 13.1 miles per hour.
    Visually we can estimate that the prediction line hits the target pace between
    2030 and 2040.
  prefs: []
  type: TYPE_NORMAL
- en: To make this more precise, we can use interpolation to see when the predictions
    cross the finish line. SciPy provides `interp1d`, which does linear interpolation
    by default.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: '|  | datetime |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| early | 2028-03-24 16:47:21.722121600 |'
  prefs: []
  type: TYPE_TB
- en: '| median | 2035-03-10 14:59:51.082915200 |'
  prefs: []
  type: TYPE_TB
- en: '| late | 2040-12-29 22:53:36.679804800 |</details>'
  prefs: []
  type: TYPE_NORMAL
- en: The median prediction is 2036, with a 90% credible interval from 2032 to 2043\.
    So there is about a 5% chance we’ll see a two-hour marathon before 2032.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This chapter introduces Bayesian regression, which is based on the same model
    as least squares regression; the difference is that it produces a posterior distribution
    for the parameters rather than point estimates.
  prefs: []
  type: TYPE_NORMAL
- en: In the first example, we looked at changes in snowfall in Norfolk County, Massachusetts,
    and concluded that we get more snowfall now than when I was young, contrary to
    my expectation.
  prefs: []
  type: TYPE_NORMAL
- en: In the second example, we looked at the progression of world record pace for
    the men’s marathon, computed the joint posterior distribution of the regression
    parameters, and used it to generate predictions for the next 20 years.
  prefs: []
  type: TYPE_NORMAL
- en: These examples have three parameters, so it takes a little longer to compute
    the likelihood of the data. With more than three parameters, it becomes impractical
    to use grid algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: In the next few chapters, we’ll explore other algorithms that reduce the amount
    of computation we need to do a Bayesian update, which makes it possible to use
    models with more parameters.
  prefs: []
  type: TYPE_NORMAL
- en: But first, you might want to work on these exercises.
  prefs: []
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Exercise:** I am under the impression that it is warmer around here than
    it used to be. In this exercise, you can put my conjecture to the test.'
  prefs: []
  type: TYPE_NORMAL
- en: We’ll use the same dataset we used to model snowfall; it also includes daily
    low and high temperatures in Norfolk County, Massachusetts during my lifetime.
  prefs: []
  type: TYPE_NORMAL
- en: Here’s the data.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: '|  | STATION | NAME | DATE | PRCP | SNOW | SNWD | TMAX | TMIN | TOBS | WESD
    | WT01 | WT03 | WT04 | WT05 | WT06 | WT08 | WT09 | WT11 | WT16 | WT18 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 0 | USC00190736 | BLUE HILL COOP, MA US | 1967-05-11 | 0.43 | 0.0 | 0.0 |
    57 | 36.0 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN |
    NaN |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | USC00190736 | BLUE HILL COOP, MA US | 1967-05-12 | 0.00 | 0.0 | 0.0 |
    58 | 39.0 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN |
    NaN |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | USC00190736 | BLUE HILL COOP, MA US | 1967-05-13 | 0.00 | 0.0 | 0.0 |
    64 | 38.0 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN |
    NaN |</details>'
  prefs: []
  type: TYPE_NORMAL
- en: Again, I’ll create a column that contains the year part of the dates.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: This dataset includes `TMIN` and `TMAX`, which are the daily low and high temperatures
    in degrees F. I’ll create a new column with the daily midpoint of the low and
    high temperatures.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: Now we can group by year and compute the mean of these daily temperatures.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE110]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: Again, I’ll drop the first and last years, which are incomplete.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE112]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: Here’s what the time series looks like.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/0e5ea057cb23c55ddc0b8a9551bf81914c7a1271975cbe0cd1a12a0f5608fd9a.png](../Images/cc713ba51afbcbadb9aa2696cf810cc3.png)</details>'
  prefs: []
  type: TYPE_NORMAL
- en: As we did with the snow data, I’ll convert the `Series` to a `DataFrame` to
    prepare it for regression.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: '|  | YEAR | TMID |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 0 | 1968 | 48.071038 |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | 1969 | 48.687671 |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | 1970 | 48.258904 |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | 1971 | 48.804110 |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | 1972 | 47.112022 |</details> <details class="hide above-input"><summary
    aria-label="Toggle hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE115]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE116]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE118]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE119]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE120]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: Now we can use StatsModels to estimate the parameters.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE122]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: And compute the standard deviation of the parameters.
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE124]</details>'
  prefs: []
  type: TYPE_NORMAL
- en: According to the least squares regression model, annual average temperature
    is increasing by about 0.044 degrees F per year.
  prefs: []
  type: TYPE_NORMAL
- en: To quantify the uncertainty of these parameters and generate predictions for
    the future, we can use Bayesian regression.
  prefs: []
  type: TYPE_NORMAL
- en: Use StatsModels to generate point estimates for the regression parameters.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose priors for `slope`, `intercept`, and `sigma` based on these estimates,
    and use `make_joint3` to make a joint prior distribution.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Compute the likelihood of the data and compute the posterior distribution of
    the parameters.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Extract the posterior distribution of `slope`. How confident are we that temperature
    is increasing?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Draw a sample of parameters from the posterior distribution and use it to generate
    predictions up to 2067.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Plot the median of the predictions and a 90% credible interval along with the
    observed data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Does the model fit the data well? How much do we expect annual average temperatures
    to increase over my (expected) lifetime?
  prefs: []
  type: TYPE_NORMAL
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE126]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: '|  |  |  | probs |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Slope | Intercept | Sigma |  |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 0.0 | 48.0 | 0.50 | 0.000015 |'
  prefs: []
  type: TYPE_TB
- en: '| 0.55 | 0.000015 |'
  prefs: []
  type: TYPE_TB
- en: '| 0.60 | 0.000015 |</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE131]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE132]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE133]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/054f69a47e9ef703628b29cf2f4fd988c96f0bb1a491cc09466b1b9771c66b89.png](../Images/4425c7509d8ee059fefb1ba760871d5f.png)</details><details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE134]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE135]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE136]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/dffebad935e040a0b8e1518068d909cd9c0c279b39379da7ac73886a6f06c868.png](../Images/12509a60abc499373cc5ae997ec78d71.png)</details><details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE137]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE138]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE139]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE140]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE141]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE142]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE143]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/f27dd76332fb1aa0347f6e1df0062a78e9ca00c7849dedcb79c9eb5a58b09c7c.png](../Images/5371d9034130a94f222c88435b41e495.png)</details><details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE144]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE145]</details>'
  prefs: []
  type: TYPE_NORMAL

- en: Bootstrap Sampling
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://allendowney.github.io/ElementsOfDataScience/12_bootstrap.html](https://allendowney.github.io/ElementsOfDataScience/12_bootstrap.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Click here to run this notebook on Colab](https://colab.research.google.com/github/AllenDowney/ElementsOfDataScience/blob/master/12_bootstrap.ipynb)
    or [click here to download it](https://github.com/AllenDowney/ElementsOfDataScience/raw/master/12_bootstrap.ipynb).'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: In the previous chapter we used resampling to compute standard errors and confidence
    intervals, which quantify the variability in an estimate due to random sampling.
    As one of the examples, we used data from the General Social Survey (GSS) to explore
    changes in support for gun control over time and to compute confidence intervals
    for the estimated proportions.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we’ll use GSS data to estimate average income and the 10th
    percentile of income. We’ll see that the resampling method we used in the previous
    chapter works for the average income but not for the 10th percentile.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: To solve this problem, we’ll use another kind of resampling, called bootstrapping
    or bootstrap sampling (see [https://en.wikipedia.org/wiki/Bootstrapping_(statistics)](https://en.wikipedia.org/wiki/Bootstrapping_(statistics))).
    Then we’ll use bootstrapping to compute sampling distributions and confidence
    intervals for other statistics, including the coefficient of correlation and the
    parameters of linear regression. Finally, I’ll point out a problem with bootstrap
    resampling when there are not enough different values in a dataset, and a way
    to solve it with KDE resampling.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Estimating Average Income
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As a first example, we’ll use data from the General Social Survey to estimate
    average family income. The following cell loads the data, which I have stored
    in an HDF file.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '|  | YEAR | ID_ | AGE | EDUC | SEX | GUNLAW | GRASS | REALINC |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
- en: '| 0 | 1972 | 1 | 23.0 | 16.0 | 2 | 1.0 | NaN | 18951.0 |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
- en: '| 1 | 1972 | 2 | 70.0 | 10.0 | 1 | 1.0 | NaN | 24366.0 |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
- en: '| 2 | 1972 | 3 | 48.0 | 12.0 | 2 | 1.0 | NaN | 24366.0 |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
- en: '| 3 | 1972 | 4 | 27.0 | 17.0 | 2 | 1.0 | NaN | 30458.0 |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
- en: '| 4 | 1972 | 5 | 61.0 | 12.0 | 2 | 1.0 | NaN | 50763.0 |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
- en: The column `REALINC` records family income, converted to 1986 dollars. The following
    figure uses the Seaborn function `kdeplot` to show the distribution of family
    income. The argument `cut=0` cuts off the curve so it doesn’t extend beyond the
    observed minimum and maximum values.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![_images/12_bootstrap_9_0.png](../Images/99360e8256da8befb7d3a32974f91c2b.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
- en: The distribution of income is skewed to the right; most household incomes are
    less than $60,000, but a few are substantially higher. Here are the mean and standard
    deviation of the reported incomes.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The average family income in this sample is $31,743. But if we ran the GSS survey
    again, the average might be higher or lower. To see how much it might vary, we
    can use this function from the previous chapter to simulate the sampling process.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '`simulate_sample_mean` takes as parameters the sample size and the observed
    mean and standard deviation of income. It generates a sample from a normal distribution
    with the given mean and standard deviation, and returns the mean of the sample.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Before we call this function, we have to count the number of valid responses.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now, if we call `simulate_sample_mean` once, we get a single value from the
    sampling distribution of the mean.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If we call it many times, we get a random sample from the sampling distribution.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here’s what the sampling distribution of the mean looks like:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![_images/12_bootstrap_22_0.png](../Images/e9e005c5553b42a9ff18942352f0cf9e.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
- en: This distribution shows how much we would expect the observed mean to vary if
    we ran the GSS survey again. We’ll use the following function to summarize the
    sampling distribution.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '|  | Estimate | SE | CI90 |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
- en: '|  | 31739.4 | 123.3 | [31531.6, 31941.8] |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
- en: The result shows the mean of the sampling distribution, the standard error,
    and a 90% confidence interval. The mean of the sampling distribution is close
    to the mean of the data, as we expect. The standard error quantifies with width
    of the sampling distribution, which is about \(128. Informally, that's how much
    we would expect the sample mean to change if we ran the survey again. And if we
    ran the survey many times and computed the average income each time, we would
    expect 90% of the results to fall in the range from \)31,538 to $31,958.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 结果显示了抽样分布的均值、标准误差和90%的置信区间。抽样分布的均值接近数据的均值，正如我们所期望的那样。标准误差量化了抽样分布的宽度，约为128美元。简单地说，这就是我们预期如果再次进行调查，样本均值会发生多大变化。如果我们多次进行调查并计算每次的平均收入，我们预期90%的结果会落在31538美元到31958美元的范围内。
- en: In this section, we used a normal distribution to simulate the sampling process.
    The normal distribution is not a particularly good model for the distribution
    of income, but it works well enough for this example, and the results are reasonable.
    In the next section we’ll see an example where the normal distribution is not
    good enough and the results are not reasonable; then we’ll see how to fix the
    problem.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们使用正态分布来模拟抽样过程。正态分布并不是收入分布的特别好的模型，但对于这个例子来说，它足够好用，结果是合理的。在下一节中，我们将看到一个正态分布不够好，结果不合理的例子；然后我们将看到如何解决这个问题。
- en: Estimating Percentiles
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 估计百分位数
- en: Suppose that, instead of estimating the average income, we want to estimate
    the 10th percentile. Computing percentiles of income is often relevant to discussions
    of income inequality. To compute the 10th percentile of the data, we can use the
    NumPy function `percentile`, but we have to drop the NaN values.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们不是估计平均收入，而是想要估计第10百分位数。计算收入的百分位数通常与收入不平等的讨论相关。要计算数据的第10百分位数，我们可以使用NumPy函数`percentile`，但是我们必须删除NaN值。
- en: '[PRE13]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The 10th percentile of the sample is $5631, but if we collected another sample,
    the result might be higher or lower. To see how much it would vary, we can use
    the following function to simulate the sampling process: `simulate_sample_percentile`
    generates a sample from a normal distribution and returns the 10th percentile.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 样本的第10百分位数是5631美元，但如果我们收集另一个样本，结果可能会更高或更低。为了看到它会变化多少，我们可以使用以下函数来模拟抽样过程：`simulate_sample_percentile`生成一个来自正态分布的样本，并返回第10百分位数。
- en: '[PRE15]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: If we call it several times, the result is a sample from the sampling distribution
    of the 10th percentile.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们多次调用它，结果就是来自第10百分位数的抽样。
- en: '[PRE16]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Here’s what that sampling distribution looks like.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是抽样分布的样子。
- en: '[PRE17]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![_images/12_bootstrap_36_0.png](../Images/e6b4787a9ff6354d304b4e11302276ab.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![_images/12_bootstrap_36_0.png](../Images/e6b4787a9ff6354d304b4e11302276ab.png)'
- en: We can see that something has gone wrong. All of the values in the sampling
    distribution are negative, even though no one in the sample reported a negative
    income. We can summarize the results like this.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到出现了一些问题。抽样分布中的所有值都是负数，即使样本中没有人报告负收入。我们可以总结结果如下。
- en: '[PRE18]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '|  | Estimate | SE | CI90 |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '|  | 估计 | 标准误差 | 90%置信区间 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '|  | -6095.13 | 207.46 | [-6441.61, -5753.08] |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '|  | -6095.13 | 207.46 | [-6441.61, -5753.08] |'
- en: But the estimate and the confidence interval are all negative, which is not
    a reasonable result. To see what happened, let’s look at the distribution of reported
    incomes again compared to the normal distribution with the same mean and standard
    deviation.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 但是估计和置信区间都是负数，这是一个不合理的结果。为了看看发生了什么，让我们再次看看报告的收入分布，与具有相同均值和标准差的正态分布相比。
- en: '[PRE19]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![_images/12_bootstrap_41_0.png](../Images/906e087f3b2b1b15ad33ee93a080d4b0.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![_images/12_bootstrap_41_0.png](../Images/906e087f3b2b1b15ad33ee93a080d4b0.png)'
- en: 'The problem is that the normal model extends past the lower bound of the observed
    values, so it doesn’t produce sensible results. Fortunately there is a simple
    alternative that is more robust: bootstrapping.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于正态模型延伸到了观察值的下限之外，因此它并不产生合理的结果。幸运的是，有一个更健壮的简单替代方法：自助法。
- en: Bootstrapping
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自助法
- en: 'Bootstrapping is a kind of resampling, based on the framework we saw in the
    previous chapter:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 自助法是一种基于我们在上一章中看到的框架的重采样方法：
- en: '![](../Images/3bae19c4186703c90aec13ae2c4e4eec.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3bae19c4186703c90aec13ae2c4e4eec.png)'
- en: The idea is that we treat the original sample as if it were the entire population,
    and simulate the sampling process by choosing random rows with replacement. `DataFrame`
    provides a method called `sample` we can use to select a random sample of the
    rows.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法是，我们将原始样本视为整个人口，并通过选择带有替换的随机行来模拟抽样过程。`DataFrame`提供了一个名为`sample`的方法，我们可以用它来选择行的随机样本。
- en: '[PRE21]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The argument `n=n_realinc` means that the bootstrapped sample has the same size
    as the original.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 参数`n=n_realinc`表示自助抽样的样本大小与原始样本相同。
- en: '`replace=True` means that sampling is done with replacement; that is, the same
    row can be chosen more than once. To see how many times each row appears in the
    bootstrapped sample, we can use `value_counts` and the `_ID` column, which contains
    a unique identifier for each respondent.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`replace=True`表示采样是带有替换的；也就是说，同一行可以被选择多次。为了看到每行在自助抽样中出现的次数，我们可以使用`value_counts`和`_ID`列，该列包含每个受访者的唯一标识符。'
- en: '[PRE23]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Several of the rows appear more than 40 times. Since some rows appear many times,
    other rows don’t appear at all. To see how many, we can use `set` subtraction
    to count the values of `ID_` that appear in the original dataset but not the bootstrapped
    sample.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 有几行出现了40多次。由于一些行出现了很多次，其他行则根本没有出现。为了看到有多少，我们可以使用`set`减法来计算在原始数据集中出现但在自助抽样中没有出现的`ID_`的值。
- en: '[PRE25]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Now we can use bootstrapping to generate a sampling distribution. For example,
    the following function takes a `DataFrame`, generates a bootstrapped sample, and
    returns the average income.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用自助法来生成抽样分布。例如，以下函数接受一个`DataFrame`，生成一个自助抽样，并返回平均收入。
- en: '[PRE27]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: If we run it many times, we get a sample from the sampling distribution of the
    mean.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Here’s a summary of the results, compared to the results based on the normal
    model.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '|  | Estimate | SE | CI90 |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
- en: '| normal model | 31739.40 | 123.30 | [31531.6, 31941.8] |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
- en: '| bootstrapping | 31742.67 | 121.39 | [31544.79, 31946.17] |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
- en: The results from bootstrap sampling are consistent with the results based on
    the normal model. Now let’s see what happens when we estimate the 10th percentile.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: The following function generates a bootstrapped sample and returns the 10th
    percentile. Instead of `percentile` from Numpy, it uses `quantile` from Pandas,
    which drops `NaN` values. The parameter of `quantile` is a probability between
    0 and 1, rather than a percentage between 0 and 100.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: We can use it to generate a sample from the sampling distribution of the 10th
    percentile.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Here are the results along with the results based on the normal model.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '|  | Estimate | SE | CI90 |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
- en: '| normal model | -6095.13 | 207.46 | [-6441.61, -5753.08] |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
- en: '| bootstrapping | 5649.50 | 88.71 | [5512.5, 5806.0] |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
- en: The mean of the sampling distribution is consistent with the 10th percentile
    of the data, which is $5631. So the results from bootstrapping are more sensible
    than the results based on the normal model.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: In general, bootstrapping is robust; that is, it works well with many different
    distributions and many different statistics. However, at the end of the chapter,
    we’ll see one example where it fails.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: Working with Bigger Data
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As sample size increases, errors due to random sampling get smaller. To demonstrate
    this effect, I’ll use data from the Behavioral Risk Factor Surveillance System
    (BRFSS).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: In previous chapters, we used BRFSS data to explore the relationship between
    height and weight, and the relationship between income and vegetable consumption.
    In this section, we’ll use it to estimate the average height for men in the United
    States.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: First, let’s read the 2019 data, which I have stored in an HDF file.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: This dataset contains 418 268 rows, one for each respondent, and 11 columns,
    one for each variable I selected. Here are the first few rows.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '|  | SEQNO | HTM4 | WTKG3 | _SEX | _AGEG5YR | _VEGESU1 | _INCOMG | _LLCPWT
    | AGE |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
- en: '| 0 | 2019000001 | 157.0 | 69.85 | 2 | 13.0 | 114.0 | 2 | 135.304080 | 82.0
    |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
- en: '| 1 | 2019000002 | 163.0 | 48.99 | 2 | 11.0 | 121.0 | 3 | 1454.882220 | 72.0
    |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
- en: '| 2 | 2019000003 | 165.0 | 86.18 | 2 | 10.0 | 164.0 | 5 | 215.576852 | 67.0
    |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
- en: '| 3 | 2019000004 | 165.0 | 55.34 | 2 | 13.0 | NaN | 4 | 261.282838 | 82.0 |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
- en: '| 4 | 2019000005 | 152.0 | 49.90 | 2 | 13.0 | 178.0 | 9 | 535.270103 | 82.0
    |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
- en: The `HTM4` column contains the respondents’ heights in centimeters.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: To select male respondents, we’ll use the `SEX` column to make a Boolean `Series`.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: We can use `notna` and `sum` to count the number of male respondents with valid
    height data.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Here is the mean and standard deviation of these values.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The average height for men in the U.S. is about 178 cm; the standard deviation
    is about 8 cm. We can use bootstrapping to generate values from the sampling distribution
    of the mean. To reduce computation time, I set the number of iterations to 201.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '|  | Estimate | SE | CI90 |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
- en: '|  | 178.079 | 0.019 | [178.047, 178.107] |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
- en: Because the sample size is so large, the standard error is small and the confidence
    interval is narrow. This result suggests that our estimate is very precise, which
    is true in the sense that the error due to random sampling is small.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: But there are other sources of error. For example, the heights and weights in
    this dataset are based on self-reports, so they are vulnerable to **social desirability
    bias** (see [https://en.wikipedia.org/wiki/Social-desirability_bias](https://en.wikipedia.org/wiki/Social-desirability_bias)).
    It’s also possible that there are errors in recording the data. In a previous
    year of the BRFSS, there are a suspicious number of heights recorded as 60 or
    61 centimeters. I suspect that many of them are six feet tall, or six feet and
    one inch, and something went wrong in recording the data.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 但还有其他误差来源。例如，该数据集中的身高和体重是基于自我报告的，因此容易受到社会期望偏差的影响。还有可能在记录数据时出现错误。在BRFSS的前一年，有大量身高记录为60或61厘米的可疑情况。我怀疑其中许多人的身高是六英尺，或六英尺一英寸，而在记录数据时出现了问题。
- en: 'And that brings us to the first point of this example:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这就引出了这个例子的第一个要点：
- en: With large sample sizes, error due to random sampling is small, but with real-world
    data, that usually means that there are other sources of error that are bigger.
    So we can’t be sure that the estimate is accurate.
  id: totrans-135
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在大样本量下，由于随机抽样而产生的误差很小，但在现实世界的数据中，通常意味着存在更大的其他误差来源。因此，我们无法确定估计值是否准确。
- en: 'In fact, there is another source of error in this example that we have not
    taken into account: oversampling.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，在这个例子中还有另一个我们没有考虑到的误差来源：过采样。
- en: Weighted Bootstrapping
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加权自助法
- en: By design, the BRFSS oversamples some demographic groups; that is, people in
    some groups are more likely than others to appear in the sample. If people in
    these groups are taller than others on average, or shorter, our estimated mean
    would not be accurate.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 按设计，BRFSS对一些人口统计学群体进行了过采样；也就是说，某些群体的人比其他人更有可能出现在样本中。如果这些群体的人平均身高要么高于其他人，要么低于其他人，我们的估计平均值将不准确。
- en: We encountered this issue in Chapter 7, where we used data from the National
    Survey of Family Growth (NSFG) to compute the average birth weight for babies
    in the United States. In that example, we corrected for oversampling by computing
    a weighted mean.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在第7章遇到了这个问题，那里我们使用了来自美国家庭增长调查（NSFG）的数据来计算美国婴儿的平均出生体重。在那个例子中，我们通过计算加权平均值来校正过采样。
- en: In this example, we will use a different method, **weighted bootstrapping**,
    to estimate the mean and compute a confidence interval.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将使用一种不同的方法，即**加权自助法**，来估计平均值并计算置信区间。
- en: The BRFSS dataset includes a column, `_LLCPWT`, that contains sampling weights.
    The sampling weight for each respondent is the number of people in the population
    they represent. People in oversampled groups have lower sampling weights; people
    in undersampled groups have higher sampling weights. Here’s what the range of
    values looks like.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: BRFSS数据集包括一个名为“_LLCPWT”的列，其中包含抽样权重。每个受访者的抽样权重是他们代表的人口数量。过采样群体的人抽样权重较低；而欠采样群体的人抽样权重较高。数值范围如下。
- en: '[PRE44]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: The lowest sampling weight is about 1; the largest is 42 066. So that’s a very
    wide range!
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 最低的抽样权重约为1；最大值为42,066。所以这是一个非常广泛的范围！
- en: We can take these weights into account by passing them as an argument to `sample`.
    That way, the probability that any row is selected is proportional to its sampling
    weight.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过将它们作为参数传递给“sample”来考虑这些权重。这样，任何行被选中的概率将与其抽样权重成比例。
- en: '[PRE46]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: As we saw with unweighted bootstrapping, the same row can appear more than once.
    To see how many times, we can use `value_counts` and the `SEQNO` column, which
    contains a unique identifier for each respondent.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们在非加权自助法中看到的那样，同一行可能会出现多次。为了查看出现的次数，我们可以使用“value_counts”和“SEQNO”列，该列包含每个受访者的唯一标识符。
- en: '[PRE47]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Some rows appear more than 100 times. Most likely, these are the rows with the
    highest sampling rates, which correspond to people from undersampled groups.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 有些行出现了100多次。很可能，这些是具有最高抽样率的行，对应于欠采样群体的人。
- en: To see how many rows don’t appear at all, we can use `set` subtraction to count
    the values of `SEQNO` that appear in the original dataset but not the sample.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看有多少行根本不出现，我们可以使用“set”减法来计算原始数据集中出现但样本中没有出现的“SEQNO”值。
- en: '[PRE49]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: There are several hundred rows that don’t appear in this sample, but they are
    not dropped altogether; when we repeat this process, they will appear in other
    samples.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 有几百行在这个样本中没有出现，但它们并没有完全被删除；当我们重复这个过程时，它们将出现在其他样本中。
- en: We can use weighted bootstrapping to generate values from the sampling distribution
    of the mean. The following function uses `sample` and the `_LLCPWT` column to
    generate a bootstrapped sample, then returns the average height.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用加权自助法来生成从平均值的抽样分布中获得的值。以下函数使用“sample”和“_LLCPWT”列生成一个自助法样本，然后返回平均身高。
- en: '[PRE51]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: I’ll test this function with a `DataFrame` that contains only male respondents.
    If we run it once, we get a single value from the sampling distribution of the
    weighted mean.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用一个只包含男性受访者的“DataFrame”来测试这个函数。如果我们运行一次，我们将从加权平均值的抽样分布中获得一个单一值。
- en: '[PRE52]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: If we run it many times, we get a random sample from the sampling distribution.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们多次运行它，我们将从抽样分布中获得一个随机样本。
- en: '[PRE54]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '|  | Estimate | SE | CI90 |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '|  | 估计值 | 标准误 | CI90 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '|  | 177.639 | 0.021 | [177.602, 177.671] |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '|  | 177.639 | 0.021 | [177.602, 177.671] |'
- en: The mean of the sampling distribution estimates the average height for men in
    the U.S., corrected for oversampling. If we compare it to the unweighted mean
    we computed, it is a little lower.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 抽样分布的平均值估计了美国男性的平均身高，经过过采样校正。如果我们将其与我们计算的非加权平均值进行比较，它会略低一些。
- en: '[PRE55]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: So it seems like people in the oversampled groups are taller than others, on
    average, by enough to bring the unweighted mean up by about half a centimeter.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，似乎过采样群体的人平均身高要比其他人高，足以使非加权平均值提高约半厘米。
- en: The difference between the weighted and unweighted averages is bigger than the
    width of the confidence interval. So in this example the error if we fail to correct
    for oversampling is bigger than variability due to random sampling.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 加权和未加权平均值之间的差异大于置信区间的宽度。因此，在这个例子中，如果我们未能校正过抽样，错误将大于由随机抽样引起的变异性。
- en: Correlation and Regression
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关性和回归
- en: Bootstrap resampling can be used to estimate other statistics and their sampling
    distributions. For example, in Chapter 9 we computed the correlation between height
    and weight, which is about 0.48.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 自助法重采样可用于估计其他统计量及其抽样分布。例如，在第9章中，我们计算了身高和体重之间的相关性，约为0.48。
- en: '[PRE57]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: That correlation does not take into account oversampling. We can correct it
    with this function, which generates a weighted bootstrapped sample and uses it
    to compute the correlation of the columns with names `var1` and `var2`.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 该相关性未考虑过抽样。我们可以使用此函数进行校正，该函数生成加权的自助采样，并用它来计算具有名称`var1`和`var2`的列的相关性。
- en: '[PRE59]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '**Exercise:** Use this function to draw 101 values from the sampling distribution
    of the correlation between height and weight. What is the mean of these values?
    Is it substantially different from the correlation we computed without correcting
    for oversampling? Compute the standard error and 90% confidence interval for the
    estimated correlation.'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习：**使用此函数从身高和体重的相关性抽样分布中绘制101个值。这些值的均值是多少？与我们未校正过抽样的相关性相比，它是否有很大不同？计算估计相关性的标准误差和90%置信区间。'
- en: '**Exercise:** In Chapter 9 we also computed the slope of the regression line
    for weight as a function of height. Here’s the result with with 2019 data.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习：**在第9章中，我们还计算了体重随身高的回归线斜率。以下是2019年的结果。'
- en: '[PRE60]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: The estimated slope is 0.93 kg/cm, which means that we expect someone 1 cm taller
    than average to be about 0.93 kg heavier than average.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 估计的斜率为0.93千克/厘米，这意味着我们预计比平均身高高1厘米的人体重会比平均体重重0.93千克。
- en: Write a function called `weighted_bootstrap_slope` that takes a `DataFrame`,
    generates a weighted bootstrapped sample, runs `linregress` with height and weight,
    and returns the slope of the regression line.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个名为`weighted_bootstrap_slope`的函数，该函数接受一个`DataFrame`，生成一个加权的自助采样，使用身高和体重运行`linregress`，并返回回归线的斜率。
- en: Run it 101 times and collect the results. Use the sampling distribution to compute
    the mean of the slope estimates, standard error, and a 90% confidence interval.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 运行101次并收集结果。使用抽样分布计算斜率估计的均值、标准误差和90%置信区间。
- en: Limitations of Bootstrapping
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自助法的局限性
- en: One limitation of bootstrapping is that it can be computationally expensive.
    With small datasets, it is usually fast enough that we can generate 1000 values
    from the sampling distribution, which means that we can compute standard errors
    and confidence intervals precisely. With larger datasets, we can cut the computation
    time by generating fewer values. With 100-200 values, the standard errors we get
    are usually precise enough, but the bounds of the confidence intervals might be
    noisier.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 自助法的一个局限性是它可能计算成本很高。对于小数据集，通常足够快，我们可以从抽样分布中生成1000个值，这意味着我们可以精确计算标准误差和置信区间。对于较大的数据集，我们可以通过生成更少的值来减少计算时间。使用100-200个值，我们得到的标准误通常足够精确，但置信区间的边界可能会更嘈杂。
- en: 'The other limitation, which can be more problematic, is that bootstrap sampling
    does not work well with datasets that contain a small number of different values.
    To demonstrate, I’ll select data from the GSS for one year, 2018:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可能更为严重的局限性是，自助法采样在包含少量不同值的数据集中效果不佳。为了演示，我将从2018年的GSS数据中选择数据：
- en: '[PRE62]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: And I’ll use bootstrapping to generate values from the sampling distribution
    of income.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用自助法从收入的抽样分布中生成值。
- en: '[PRE63]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Here are the results.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是结果。
- en: '[PRE64]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '|  | Estimate | SE | CI90 |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '|  | 估计 | 标准误 | CI90 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '|  | 5158.3 | 232.53 | [5107.5, 5107.5] |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '|  | 5158.3 | 232.53 | [5107.5, 5107.5] |'
- en: The estimate and the standard error look plausible at first glance, but the
    width of the confidence interval is 0, which suggests that something has gone
    wrong!
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 估计值和标准误看起来乍一看是合理的，但置信区间的宽度为0，这表明出了问题！
- en: The problem is that `REALINC` is not a numerical variable; it is a categorical
    variable in disguise. Using `value_counts`, we can see that there are only 26
    distinct values in this column.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于`REALINC`不是一个数值变量；它是一个伪装的分类变量。使用`value_counts`，我们可以看到这一列中只有26个不同的值。
- en: '[PRE65]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: The reason is that the GSS does not ask respondents to report their incomes.
    Instead, it gives them a list of ranges and asks them to pick the range their
    income falls in. The ranges are described in the documentation of the related
    variable `INCOME` (see [https://gssdataexplorer.norc.org/variables/104/vshow](https://gssdataexplorer.norc.org/variables/104/vshow)).
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 原因是GSS不要求受访者报告他们的收入。相反，它给他们一个收入范围的列表，并要求他们选择其收入所在范围。这些范围在相关变量`INCOME`的文档中有描述（参见[https://gssdataexplorer.norc.org/variables/104/vshow](https://gssdataexplorer.norc.org/variables/104/vshow)）。
- en: Then GSS analysts compute the midpoint of each range and convert to 1986 dollars
    by adjusting for inflation. Details of the methodology are in available from [https://gss.norc.org/Documents/reports/methodological-reports/MR101%20Getting%20the%20Most%20Out%20of%20the%20GSS%20Income%20Measures.pdf](https://gss.norc.org/Documents/reports/methodological-reports/MR101%20Getting%20the%20Most%20Out%20of%20the%20GSS%20Income%20Measures.pdf).
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 然后GSS分析师计算每个范围的中点，并通过通货膨胀调整为1986年的美元。方法的详细信息可从[https://gss.norc.org/Documents/reports/methodological-reports/MR101%20Getting%20the%20Most%20Out%20of%20the%20GSS%20Income%20Measures.pdf](https://gss.norc.org/Documents/reports/methodological-reports/MR101%20Getting%20the%20Most%20Out%20of%20the%20GSS%20Income%20Measures.pdf)获取。
- en: 'As a result, there are only 26 distinct values in `REALINC`. When we generate
    a bootstrapped sample and compute the 10th percentile, we get a small subset of
    them. Here are the values that appear in our sample:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是`REALINC`中只有26个不同的值。当我们生成一个自助抽样样本并计算第10个百分位数时，我们得到其中的一个小子集。以下是出现在我们样本中的值：
- en: '[PRE67]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: There are only 5 different values, and one of them appears more than 95% of
    the time. When we compute a 90% confidence interval, this value is both the 5th
    and the 95th percentile.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 只有5个不同的值，其中一个出现的概率超过95%。当我们计算90%的置信区间时，这个值既是第5个百分位数，也是第95个百分位数。
- en: Bootstrapping works well for most distributions and most statistics; the one
    thing it can’t handle is lack of diversity in the data. However, even this problem
    can be solved. The fundamental cause is that the data have been discretized excessively,
    so the solution is to smooth it. Jittering is one option. Another is to use kernel
    density estimation (KDE).
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 自助法适用于大多数分布和大多数统计量；它无法处理的唯一问题是数据缺乏多样性。然而，即使这个问题也可以解决。根本原因是数据被过度离散化，因此解决方案是对其进行平滑处理。抖动是一种选择。另一种选择是使用核密度估计（KDE）。
- en: Resampling with KDE
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: KDE重采样
- en: We have used KDE several times to estimate and plot a probability density based
    on a sample. We can also use it to smooth data that have been discretized.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经多次使用KDE来估计和绘制基于样本的概率密度。我们还可以用它来平滑离散化的数据。
- en: In Chapter 8 we saw that the distribution of income is well modeled by a lognormal
    distribution, so if we take the log of income, it is well modeled by a normal
    distribution. Here are the logarithms of the income data.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在第8章中，我们看到收入的分布很好地符合对数正态分布的模型，因此如果我们取收入的对数，它就很好地符合正态分布。以下是收入数据的对数。
- en: '[PRE69]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: And here’s what the estimated density looks like.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是估计的密度的样子。
- en: '[PRE70]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '![_images/12_bootstrap_124_0.png](../Images/e4ca569f1efb4e7d080c22779ad6e3af.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![_images/12_bootstrap_124_0.png](../Images/e4ca569f1efb4e7d080c22779ad6e3af.png)'
- en: To draw samples from this distribution, we’ll use a Scipy function called `gaussian_kde`,
    which takes the data and returns an object that represents the estimated density.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从这个分布中抽取样本，我们将使用一个名为`gaussian_kde`的Scipy函数，它接受数据并返回一个表示估计密度的对象。
- en: '[PRE71]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '`kde` provides a method called `resample` that draws random values from the
    estimated density. As we’ve done in previous examples, we’ll generate a resampled
    dataset with the same size as the original.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '`kde`提供了一个名为`resample`的方法，从估计的密度中抽取随机值。就像我们在之前的例子中所做的那样，我们将生成一个与原始数据大小相同的重采样数据集。'
- en: '[PRE72]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Now we can draw a sample, compute the 10th percentile, and convert from a logarithm
    to a dollar value.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以抽取一个样本，计算第10个百分位数，并将其从对数转换为美元值。
- en: '[PRE74]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: The result is a random value from the sampling distribution of the 10th percentile.
    The following function encapsulates these steps.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是第10个百分位数的抽样分布中的一个随机值。以下函数封装了这些步骤。
- en: '[PRE76]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Now we can generate a sample from the sampling distribution.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以从抽样分布中生成一个样本。
- en: '[PRE77]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: The following table compares the results with KDE resampling to the previous
    result with bootstrapping.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格将KDE重采样的结果与之前的自助法结果进行了比较。
- en: '[PRE78]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '|  | Estimate | SE | CI90 |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '|  | 估计 | 标准误 | CI90 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| bootstrapping | 5158.30 | 232.53 | [5107.5, 5107.5] |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| 自助法 | 5158.30 | 232.53 | [5107.5, 5107.5] |'
- en: '| KDE resampling | 5092.02 | 270.36 | [4674.41, 5560.08] |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| KDE重采样 | 5092.02 | 270.36 | [4674.41, 5560.08] |'
- en: The means and standard errors are about the same with either method. The difference
    is that the confidence interval we get from KDE resampling is much more reasonable.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 两种方法的均值和标准误差大致相同。不同之处在于，我们从KDE重采样得到的置信区间要合理得多。
- en: Summary
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: 'There are ten examples in this chapter so far; let’s review them:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，本章中有十个例子；让我们来回顾一下：
- en: First we used resampling based on a normal model to estimate average family
    income in the GSS and compute a confidence interval.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们使用基于正态模型的重采样来估计GSS中家庭收入的平均值并计算置信区间。
- en: Then we used the same method to estimate the 10th percentile of income, and
    we found that all of the values in the sampling distribution are negative. The
    problem is that the normal model does not fit the distribution of income.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后我们使用相同的方法来估计收入的第10个百分位数，发现抽样分布中的所有值都是负数。问题在于正态模型不适合收入分布。
- en: To solve this problem, we switched to bootstrap sampling. First we estimated
    average family income and confirmed that the results are consistent with the results
    based on the normal model.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了解决这个问题，我们转而使用自助抽样。首先我们估计了家庭收入的平均值，并确认结果与基于正态模型的结果一致。
- en: Then we used bootstrapping to estimate the 10th percentile of income. The results
    are much more plausible.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后我们使用自助法估计收入的第10个百分位数。结果更加合理。
- en: Next we used data from the BRFSS to estimate the average height of men in the
    U.S. Since this dataset is large, the confidence interval is very small. That
    means that the estimate is precise, in the sense that variability due to random
    sampling is small, but we don’t know whether it is accurate, because there are
    other possible sources of error.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们使用BRFSS的数据来估计美国男性的平均身高。由于这个数据集很大，置信区间非常小。这意味着估计是精确的，因为由于随机抽样引起的变异性很小，但我们不知道它是否准确，因为还有其他可能的误差来源。
- en: One of those sources of error is oversampling; that is, some people are more
    likely to appear in the sample than others. In the BFRSS, each respondent has
    a sampling weight that indicates how many people in the population they represent.
    We used these weights to do weighted bootstrapping, and found that the error due
    to oversampling is larger than the variability due to random sampling.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 其中一个误差来源是过度抽样；也就是说，有些人出现在样本中的可能性比其他人更高。在BFRSS中，每个受访者都有一个抽样权重，表示他们在人口中代表多少人。我们使用这些权重进行加权自助法，并发现由于过度抽样而产生的误差大于由随机抽样引起的变异性。
- en: In one exercise you used weighted bootstrapping to estimate the correlation
    of height and weight and compute a confidence interval.
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个练习中，您使用了加权自助法来估计身高和体重的相关性，并计算置信区间。
- en: In another exercise you estimated the slope of a regression line and computed
    a confidence interval.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在另一个练习中，你估计了回归线的斜率并计算了置信区间。
- en: Then I demonstrated a problem with bootstrap sampling when the dataset has only
    a few different values,
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后我演示了当数据集只有少量不同值时，bootstrap抽样存在的问题，
- en: And presented a solution using KDE to smooth the data and draw samples from
    an estimated distribution.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 并提出了使用KDE对数据进行平滑处理，并从估计的分布中抽样的解决方案。
- en: In the exercise below, you can work on one more example. It is a little more
    involved than the previous exercises, but I will walk you through it.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的练习中，你可以再做一个例子。这比之前的练习要复杂一些，但我会带你一步步完成。
- en: '**Exercise:** In Chapter 10 we used logistic regression to model support for
    legalizing marijuana as a function of age, sex, and education level. Going back
    to that example, let’s explore changes in support over time and generate predictions
    for the next decade.'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习：**在第10章中，我们使用逻辑回归模型来模拟年龄、性别和教育水平对大麻合法化支持的影响。回到那个例子，让我们探索支持率随时间的变化，并为未来十年生成预测。'
- en: To prepare the data for logistic regression, we have to recode the `GRASS` column
    so `1` means in favor of legalization and `0` means not in favor.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 为了准备数据进行逻辑回归，我们必须重新编码`GRASS`列，使`1`表示支持合法化，`0`表示不支持。
- en: '[PRE79]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: As explanatory variables we’ll use `YEAR` and `YEAR` squared, which I’ll store
    in a column called `YEAR2`.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 作为解释变量，我们将使用`YEAR`和`YEAR`的平方，我将它们存储在名为`YEAR2`的列中。
- en: '[PRE81]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Now we can run the model like this:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以这样运行模型：
- en: '[PRE82]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: To generate predictions, I’ll create a `DataFrame` with a range of values of
    `YEAR` up to 2030, and corresponding values of `YEAR2`.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 为了生成预测，我将创建一个`DataFrame`，其中包含`YEAR`的一系列值，直到2030年，并对应的`YEAR2`的值。
- en: '[PRE83]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: I’ll use `groupby` to compute the fraction of respondents in favor of legalization
    during each year.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用`groupby`来计算每年支持合法化的受访者比例。
- en: '[PRE84]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: The following function plots the data and decorates the axes.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数绘制数据并装饰坐标轴。
- en: '[PRE85]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: Here’s what the predictions look like, plotted along with the data.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 预测的结果如下图所示，与数据一起绘制。
- en: '[PRE86]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '![_images/12_bootstrap_153_0.png](../Images/5e87fc9681654c8c202276c35800d1fa.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![_images/12_bootstrap_153_0.png](../Images/5e87fc9681654c8c202276c35800d1fa.png)'
- en: The model fits past data reasonably well and makes plausible predictions for
    the next decade, although we can never be sure that trends like this will continue.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型很好地拟合了过去的数据，并对未来十年做出了合理的预测，尽管我们永远无法确定这样的趋势是否会持续。
- en: This way of representing the results could be misleading because it does not
    show our uncertainty about the predictions. Random sampling is just one source
    of uncertainty among many, and for this kind of prediction it is certainly not
    the biggest. But it is the easiest to quantify, so let’s do it, if only as an
    exercise.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 这种表示结果的方式可能会误导，因为它没有显示我们对预测的不确定性。随机抽样只是众多不确定性中的一个来源，对于这种预测来说，它肯定不是最大的不确定性。但它是最容易量化的，所以让我们这样做，即使只是作为一种练习。
- en: Write a function called `bootstrap_regression_line` that takes a `DataFrame`
    as a parameter, uses `sample` to resample the rows, runs the logistic regression
    model, generates predictions for the rows in `df_pred`, and returns the predictions.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个名为`bootstrap_regression_line`的函数，它以`DataFrame`作为参数，使用`sample`对行进行重新抽样，运行逻辑回归模型，为`df_pred`中的行生成预测，并返回预测结果。
- en: 'Call this function 101 times and save the results as a list of `Series` objects.
    To visualize the results, you have two options:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 调用这个函数101次，并将结果保存为`Series`对象的列表。要可视化结果，你有两个选择：
- en: Loop through the list and plot each prediction using a gray line with a low
    value of `alpha`. The overlapping lines will form a region showing the range of
    uncertainty over time.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 循环遍历列表，并使用低`alpha`值的灰色线绘制每个预测。重叠的线将形成一个区域，显示随时间变化的不确定性范围。
- en: Pass the list of `Series` to `np.percentile` with the argument `axis=0` to compute
    the 5th and 95th percentile in each column. Plot these percentiles as two lines,
    or use `plt.fill_between` to plot a shaded region between them.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Series`列表传递给`np.percentile`，并使用参数`axis=0`来计算每列的第5和第95百分位数。将这些百分位数绘制为两条线，或者使用`plt.fill_between`来绘制它们之间的阴影区域。

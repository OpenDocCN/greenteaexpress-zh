["```py\nt = 'zero', 'one', 'two' \n```", "```py\nt[0] \n```", "```py\n'zero' \n```", "```py\nt[1] \n```", "```py\n'one' \n```", "```py\nt[2] \n```", "```py\n'two' \n```", "```py\ni = 1\nt[i] \n```", "```py\n'one' \n```", "```py\nt[i+1] \n```", "```py\n'two' \n```", "```py\nd = {} \n```", "```py\nd['one'] = 1\nd['two'] = 2 \n```", "```py\nd \n```", "```py\n{'one': 1, 'two': 2} \n```", "```py\nd = {'one': 1, 'two': 2, 'three': 3}\nd \n```", "```py\n{'one': 1, 'two': 2, 'three': 3} \n```", "```py\nd['two'] \n```", "```py\n2 \n```", "```py\n'one' in d \n```", "```py\nTrue \n```", "```py\n'zero' in d \n```", "```py\nFalse \n```", "```py\nd \n```", "```py\n{'one': 1, 'two': 2, 'three': 3} \n```", "```py\nd['one'] = 1\nd \n```", "```py\n{'one': 1, 'two': 2, 'three': 3} \n```", "```py\nd['one'] = 100\nd \n```", "```py\n{'one': 100, 'two': 2, 'three': 3} \n```", "```py\nfor key in d:\n    print(key) \n```", "```py\none\ntwo\nthree \n```", "```py\nfor key in d:\n    print(key, d[key]) \n```", "```py\none 100\ntwo 2\nthree 3 \n```", "```py\nfor key, value in d.items():\n    print(key, value) \n```", "```py\none 100\ntwo 2\nthree 3 \n```", "```py\nfp = open('2600-0.txt')\ncount = 0\nfor line in fp:\n    count += len(line.split())\n\ncount \n```", "```py\n566317 \n```", "```py\nfp = open('2600-0.txt')\nunique_words = {}\nfor line in fp:\n    for word in line.split():\n        unique_words[word] = 1 \n```", "```py\ni = 0\nfor key in unique_words:\n    print(key)\n    i += 1\n    if i == 10:\n        break \n```", "```py\nThe\nProject\nGutenberg\nEBook\nof\nWar\nand\nPeace,\nby \n```", "```py\nlen(unique_words) \n```", "```py\n41991 \n```", "```py\nline = ['War', 'and', 'Peace'] \n```", "```py\nword = 'The'\nword.lower() \n```", "```py\n'the' \n```", "```py\nword \n```", "```py\n'The' \n```", "```py\nword = word.lower() \n```", "```py\nword \n```", "```py\n'the' \n```", "```py\nword = 'abracadabra'\nword.strip('ab') \n```", "```py\n'racadabr' \n```", "```py\nword \n```", "```py\n'abracadabra' \n```", "```py\nimport string\n\nstring.punctuation \n```", "```py\n'!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~' \n```", "```py\nline = \"It's not given to people to judge what's right or wrong.\"\n\nfor word in line.split():\n    word = word.strip(string.punctuation)\n    print(word) \n```", "```py\nIt's\nnot\ngiven\nto\npeople\nto\njudge\nwhat's\nright\nor\nwrong \n```", "```py\nline = 'anyone, and so you don\u2019t deserve to have them.\u201d' \n```", "```py\nfor word in line.split():\n    word = word.strip(string.punctuation)\n    print(word) \n```", "```py\nanyone\nand\nso\nyou\ndon\u2019t\ndeserve\nto\nhave\nthem.\u201d \n```", "```py\nimport unicodedata\n\nfp = open('2600-0.txt')\npunc_marks = {}\nfor line in fp:\n    for x in line:\n        category = unicodedata.category(x)\n        if category[0] == 'P':\n            punc_marks[x] = 1\n\nall_punctuation = ''.join(punc_marks)\nprint(all_punctuation) \n```", "```py\n,.-:[#]*/\u201c\u2019\u2014\u2018!?\u201d;()%@ \n```", "```py\nword = 'Mississippi'\n\nletter_counts = {}\nfor x in word:\n    if x in letter_counts:\n        letter_counts[x] += 1\n    else:\n        letter_counts[x] = 1\n\nletter_counts \n```", "```py\n{'M': 1, 'i': 4, 's': 4, 'p': 2} \n```", "```py\nimport collections \n```", "```py\ncounter = collections.Counter(letter_counts)\ntype(counter) \n```", "```py\ncollections.Counter \n```", "```py\ncounter.most_common(3) \n```", "```py\n[('i', 4), ('s', 4), ('p', 2)] \n```", "```py\nword_freq_pairs = counter.most_common() \n```"]
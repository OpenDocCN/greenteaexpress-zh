- en: Mark and Recapture
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标记和重捕
- en: 原文：[https://allendowney.github.io/ThinkBayes2/chap15.html](https://allendowney.github.io/ThinkBayes2/chap15.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://allendowney.github.io/ThinkBayes2/chap15.html](https://allendowney.github.io/ThinkBayes2/chap15.html)
- en: This chapter introduces “mark and recapture” experiments, in which we sample
    individuals from a population, mark them somehow, and then take a second sample
    from the same population. Seeing how many individuals in the second sample are
    marked, we can estimate the size of the population.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了“标记和重捕”实验，其中我们从一个种群中对个体进行采样，以某种方式对它们进行标记，然后从同一种群中进行第二次采样。通过观察第二次采样中有多少个体被标记，我们可以估计种群的大小。
- en: Experiments like this were originally used in ecology, but turn out to be useful
    in many other fields. Examples in this chapter include software engineering and
    epidemiology.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的实验最初用于生态学，但事实证明在许多其他领域也很有用。本章的例子包括软件工程和流行病学。
- en: Also, in this chapter we’ll work with models that have three parameters, so
    we’ll extend the joint distributions we’ve been using to three dimensions.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在本章中，我们将使用具有三个参数的模型，因此我们将扩展我们一直使用的联合分布到三维。
- en: But first, grizzly bears.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 但首先，是灰熊。
- en: The Grizzly Bear Problem
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 灰熊问题
- en: In 1996 and 1997 researchers deployed bear traps in locations in British Columbia
    and Alberta, Canada, in an effort to estimate the population of grizzly bears.
    They describe the experiment in [this article](https://www.researchgate.net/publication/229195465_Estimating_Population_Size_of_Grizzly_Bears_Using_Hair_Capture_DNA_Profiling_and_Mark-Recapture_Analysis).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 1996年和1997年，研究人员在加拿大不列颠哥伦比亚省和阿尔伯塔省的地点部署了熊陷阱，以估计灰熊的种群。他们在[这篇文章](https://www.researchgate.net/publication/229195465_Estimating_Population_Size_of_Grizzly_Bears_Using_Hair_Capture_DNA_Profiling_and_Mark-Recapture_Analysis)中描述了这个实验。
- en: The “trap” consists of a lure and several strands of barbed wire intended to
    capture samples of hair from bears that visit the lure. Using the hair samples,
    the researchers use DNA analysis to identify individual bears.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: “陷阱”由诱饵和几股带刺的铁丝组成，旨在捕捉拜访诱饵的熊的毛发样本。研究人员使用这些毛发样本，通过DNA分析来识别个体熊。
- en: During the first session, the researchers deployed traps at 76 sites. Returning
    10 days later, they obtained 1043 hair samples and identified 23 different bears.
    During a second 10-day session they obtained 1191 samples from 19 different bears,
    where 4 of the 19 were from bears they had identified in the first batch.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一次采样期间，研究人员在76个地点设置了陷阱。10天后返回，他们获得了1043个毛发样本，并鉴定出了23只不同的熊。在第二个10天的采样期间，他们从19只不同的熊身上获得了1191个样本，其中19只熊中有4只是他们在第一批中鉴定出的。
- en: To estimate the population of bears from this data, we need a model for the
    probability that each bear will be observed during each session. As a starting
    place, we’ll make the simplest assumption, that every bear in the population has
    the same (unknown) probability of being sampled during each session.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从这些数据中估计熊的种群，我们需要一个模型，用于每只熊在每次采样期间被观察到的概率。作为起点，我们将做出最简单的假设，即种群中的每只熊在每次采样期间被采样到的概率相同（未知）。
- en: With these assumptions we can compute the probability of the data for a range
    of possible populations.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些假设下，我们可以计算一系列可能种群的数据的概率。
- en: As an example, let’s suppose that the actual population of bears is 100.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，假设实际熊的种群大小为100。
- en: After the first session, 23 of the 100 bears have been identified. During the
    second session, if we choose 19 bears at random, what is the probability that
    4 of them were previously identified?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次采样后，100只熊中有23只被鉴定出。在第二次采样期间，如果我们随机选择19只熊，那么其中有4只是之前被鉴定出的概率是多少？
- en: I’ll define
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我将定义
- en: '\(N\): actual population size, 100.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: \(N\)：实际种群大小，100。
- en: '\(K\): number of bears identified in the first session, 23.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: \(K\)：第一次采样中鉴定出的熊的数量，为23。
- en: '\(n\): number of bears observed in the second session, 19 in the example.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: \(n\)：在示例中，第二次采样中观察到的熊的数量，为19。
- en: '\(k\): number of bears in the second session that were previously identified,
    4.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: \(k\)：第二次采样中之前被鉴定出的熊的数量，4。
- en: 'For given values of \(N\), \(K\), and \(n\), the probability of finding \(k\)
    previously-identified bears is given by the [hypergeometric distribution](https://en.wikipedia.org/wiki/Hypergeometric_distribution):'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于给定的\(N\)、\(K\)和\(n\)的值，找到\(k\)只先前鉴定的熊的概率由[超几何分布](https://en.wikipedia.org/wiki/Hypergeometric_distribution)给出：
- en: \[\binom{K}{k} \binom{N-K}{n-k}/ \binom{N}{n}\]
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: \[\binom{K}{k} \binom{N-K}{n-k}/ \binom{N}{n}\]
- en: where the [binomial coefficient](https://en.wikipedia.org/wiki/Binomial_coefficient),
    \(\binom{K}{k}\), is the number of subsets of size \(k\) we can choose from a
    population of size \(K\).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 其中[二项式系数](https://en.wikipedia.org/wiki/Binomial_coefficient)，\(\binom{K}{k}\)，是我们可以从大小为\(K\)的种群中选择大小为\(k\)的子集的数量。
- en: 'To understand why, consider:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解为什么，考虑：
- en: The denominator, \(\binom{N}{n}\), is the number of subsets of \(n\) we could
    choose from a population of \(N\) bears.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分母，\(\binom{N}{n}\)，是我们可以从\(N\)只熊的种群中选择\(n\)只的子集数量。
- en: The numerator is the number of subsets that contain \(k\) bears from the previously
    identified \(K\) and \(n-k\) from the previously unseen \(N-K\).
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分子是包含来自先前鉴定的\(K\)只熊中的\(k\)只熊和来自先前未见的\(N-K\)只熊中的\(n-k\)只熊的子集数量。
- en: SciPy provides `hypergeom`, which we can use to compute this probability for
    a range of values of \(k\).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: SciPy提供了`hypergeom`，我们可以用它来计算一系列\(k\)值的概率。
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The result is the distribution of \(k\) with given parameters \(N\), \(K\),
    and \(n\). Here’s what it looks like.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是具有给定参数\(N\)、\(K\)和\(n\)的\(k\)的分布。看起来是这样的。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格源代码
    隐藏代码单元格源代码</summary>
- en: '[PRE1]</details> ![_images/89091d8fbc23233c4e404edd21d8ea5de9de3e5bc1e8080e25666147e0fa8aca.png](../Images/1a280182fb74f73c44052e57501013e1.png)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE1]</details> ![_images/89091d8fbc23233c4e404edd21d8ea5de9de3e5bc1e8080e25666147e0fa8aca.png](../Images/1a280182fb74f73c44052e57501013e1.png)'
- en: The most likely value of \(k\) is 4, which is the value actually observed in
    the experiment.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: \(k\)的最可能值是4，这是实验中实际观察到的值。
- en: That suggests that \(N=100\) is a reasonable estimate of the population, given
    this data.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '这表明，鉴于这些数据，\(N=100\)是人口的一个合理估计。 '
- en: 'We’ve computed the distribution of \(k\) given \(N\), \(K\), and \(n\). Now
    let’s go the other way: given \(K\), \(n\), and \(k\), how can we estimate the
    total population, \(N\)?'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经计算了给定`N`、`K`和`n`的情况下\(k\)的分布。现在让我们反过来：给定\(K\)、\(n\)和\(k\)，我们如何估计总体人口\(N\)？
- en: The Update
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新
- en: As a starting place, let’s suppose that, prior to this study, an expert estimates
    that the local bear population is between 50 and 500, and equally likely to be
    any value in that range.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个起点，让我们假设，在这项研究之前，一位专家估计当地的熊种群在50到500之间，并且任何一个值都有同样的可能性。
- en: I’ll use `make_uniform` to make a uniform distribution of integers in this range.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用`make_uniform`在这个范围内制作一个整数的均匀分布。
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: So that’s our prior.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们的先验。
- en: To compute the likelihood of the data, we can use `hypergeom` with constants
    `K` and `n`, and a range of values of `N`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要计算数据的可能性，我们可以使用`hypergeom`与常数`K`和`n`，以及一系列`N`的值。
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We can compute the posterior in the usual way.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照通常的方式计算后验。
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: And here’s what it looks like.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是它的样子。
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![_images/ac32416f4a54865371b1c99a43504a005ebf21adaf7c20b9674391cb8f8f2060.png](../Images/e2874514c41951147b92187305b32014.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![_images/ac32416f4a54865371b1c99a43504a005ebf21adaf7c20b9674391cb8f8f2060.png](../Images/e2874514c41951147b92187305b32014.png)'
- en: The most likely value is 109.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最可能的值是109。
- en: '[PRE8]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: But the distribution is skewed to the right, so the posterior mean is substantially
    higher.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 但是分布向右倾斜，所以后验均值明显更高。
- en: '[PRE10]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: And the credible interval is quite wide.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 而且可信区间非常宽。
- en: '[PRE12]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This solution is relatively simple, but it turns out we can do a little better
    if we model the unknown probability of observing a bear explicitly.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这个解决方案相对简单，但事实证明，如果我们明确地对观察到熊的未知概率进行建模，我们可以做得更好一点。
- en: Two-Parameter Model
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 两参数模型
- en: 'Next we’ll try a model with two parameters: the number of bears, `N`, and the
    probability of observing a bear, `p`.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将尝试一个具有两个参数的模型：熊的数量`N`和观察到熊的概率`p`。
- en: We’ll assume that the probability is the same in both rounds, which is probably
    reasonable in this case because it is the same kind of trap in the same place.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设在两轮中概率是相同的，这在这种情况下可能是合理的，因为它是同一个地方的同一种陷阱。
- en: We’ll also assume that the probabilities are independent; that is, the probability
    a bear is observed in the second round does not depend on whether it was observed
    in the first round. This assumption might be less reasonable, but for now it is
    a necessary simplification.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还假设这些概率是独立的；也就是说，观察到熊在第二轮的概率不取决于它是否在第一轮观察到。这个假设可能不太合理，但现在它是一个必要的简化。
- en: 'Here are the counts again:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这里再次是计数：
- en: '[PRE14]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'For this model, I’ll express the data in a notation that will make it easier
    to generalize to more than two rounds:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个模型，我将用一种更容易推广到两轮以上的符号表示数据：
- en: '`k10` is the number of bears observed in the first round but not the second,'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`k10`是第一轮观察到的熊的数量，但第二轮没有观察到，'
- en: '`k01` is the number of bears observed in the second round but not the first,
    and'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`k01`是第二轮观察到的熊的数量，但第一轮没有观察到，而'
- en: '`k11` is the number of bears observed in both rounds.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`k11`是两轮都观察到的熊的数量。'
- en: Here are their values.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这是它们的值。
- en: '[PRE15]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Suppose we know the actual values of `N` and `p`. We can use them to compute
    the likelihood of this data.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们知道`N`和`p`的实际值。我们可以使用它们来计算这些数据的可能性。
- en: For example, suppose we know that `N=100` and `p=0.2`. We can use `N` to compute
    `k00`, which is the number of unobserved bears.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们知道`N=100`和`p=0.2`。我们可以使用`N`来计算`k00`，即未观察到的熊的数量。
- en: '[PRE16]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: For the update, it will be convenient to store the data as a list that represents
    the number of bears in each category.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更新，将数据存储为一个代表每个类别中熊的数量的列表会更方便。
- en: '[PRE18]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Now, if we know `p=0.2`, we can compute the probability a bear falls in each
    category. For example, the probability of being observed in both rounds is `p*p`,
    and the probability of being unobserved in both rounds is `q*q` (where `q=1-p`).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们知道`p=0.2`，我们可以计算熊落入每个类别的概率。例如，在两轮中都被观察到的概率是`p*p`，在两轮中都未被观察到的概率是`q*q`（其中`q=1-p`）。
- en: '[PRE20]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now the probability of the data is given by the [multinomial distribution](https://en.wikipedia.org/wiki/Multinomial_distribution):'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，数据的概率由[多项式分布](https://en.wikipedia.org/wiki/Multinomial_distribution)给出：
- en: \[\frac{N!}{\prod x_i!} \prod y_i^{x_i}\]
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: \[\frac{N!}{\prod x_i!} \prod y_i^{x_i}\]
- en: where \(N\) is actual population, \(x\) is a sequence with the counts in each
    category, and \(y\) is a sequence of probabilities for each category.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 其中\(N\)是实际人口，\(x\)是每个类别中的计数序列，\(y\)是每个类别的概率序列。
- en: SciPy provides `multinomial`, which provides `pmf`, which computes this probability.
    Here is the probability of the data for these values of `N` and `p`.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: SciPy提供了`multinomial`，它提供了`pmf`，用于计算这个概率。这是这些`N`和`p`值的数据的概率。
- en: '[PRE22]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: That’s the likelihood if we know `N` and `p`, but of course we don’t. So we’ll
    choose prior distributions for `N` and `p`, and use the likelihoods to update
    it.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们知道`N`和`p`的情况下的可能性，但当然我们不知道。所以我们将为`N`和`p`选择先验分布，并使用可能性来更新它。
- en: The Prior
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 先验
- en: 'We’ll use `prior_N` again for the prior distribution of `N`, and a uniform
    prior for the probability of observing a bear, `p`:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将再次使用`prior_N`作为`N`的先验分布，并使用熊被观察到的概率`p`的均匀先验：
- en: '[PRE24]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: We can make a joint distribution in the usual way.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照通常的方式制作一个联合分布。
- en: '[PRE25]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The result is a Pandas `DataFrame` with values of `N` down the rows and values
    of `p` across the columns. However, for this problem it will be convenient to
    represent the prior distribution as a 1-D `Series` rather than a 2-D `DataFrame`.
    We can convert from one format to the other using `stack`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个Pandas`DataFrame`，其中行是`N`的值，列是`p`的值。但是对于这个问题，将先验分布表示为1-D`Series`而不是2-D`DataFrame`会更方便。我们可以使用`stack`从一种格式转换为另一种格式。
- en: '[PRE27]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '|  |  | probs |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '|  |  | probs |'
- en: '| --- | --- | --- |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| N | p |  |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| N | p |  |'
- en: '| --- | --- | --- |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 50 | 0.00 | 0.000022 |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| 50 | 0.00 | 0.000022 |'
- en: '| 0.01 | 0.000022 |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| 0.01 | 0.000022 |'
- en: '| 0.02 | 0.000022 |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| 0.02 | 0.000022 |'
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格内容
    隐藏代码单元格内容</summary>
- en: '[PRE28]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE29]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE30]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE31]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE32]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]</details>'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE33]</details>'
- en: The result is a `Pmf` whose index is a `MultiIndex`. A `MultiIndex` can have
    more than one column; in this example, the first column contains values of `N`
    and the second column contains values of `p`.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个`Pmf`，其索引是`MultiIndex`。`MultiIndex`可以有多个列；在这个例子中，第一列包含`N`的值，第二列包含`p`的值。
- en: The `Pmf` has one row (and one prior probability) for each possible pair of
    parameters `N` and `p`. So the total number of rows is the product of the lengths
    of `prior_N` and `prior_p`.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`Pmf`对于每对参数`N`和`p`的可能性有一行（和一个先验概率）。因此，行的总数是`prior_N`和`prior_p`长度的乘积。'
- en: Now we have to compute the likelihood of the data for each pair of parameters.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们必须计算每对参数的数据可能性。
- en: The Update
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新
- en: 'To allocate space for the likelihoods, it is convenient to make a copy of `joint_pmf`:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 为了分配空间给可能性，方便起见，我们可以复制`joint_pmf`：
- en: '[PRE34]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: As we loop through the pairs of parameters, we compute the likelihood of the
    data as in the previous section, and then store the result as an element of `likelihood`.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们循环遍历参数对时，我们像前一节一样计算数据的可能性，然后将结果存储为`likelihood`的一个元素。
- en: '[PRE35]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Now we can compute the posterior in the usual way.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以按照通常的方式计算后验分布。
- en: '[PRE36]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: <details class="hide below-input"><summary aria-label="Toggle hidden content">Show
    code cell output Hide code cell output</summary>
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide below-input"><summary aria-label="Toggle hidden content">显示代码单元格输出
    隐藏代码单元格输出</summary>
- en: '[PRE37]</details>'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE37]</details>'
- en: We’ll use `plot_contour` again to visualize the joint posterior distribution.
    But remember that the posterior distribution we just computed is represented as
    a `Pmf`, which is a `Series`, and `plot_contour` expects a `DataFrame`.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将再次使用`plot_contour`来可视化联合后验分布。但请记住，我们刚刚计算的后验分布表示为`Pmf`，它是一个`Series`，而`plot_contour`期望一个`DataFrame`。
- en: Since we used `stack` to convert from a `DataFrame` to a `Series`, we can use
    `unstack` to go the other way.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们使用`stack`从`DataFrame`转换为`Series`，我们可以使用`unstack`来进行相反的操作。
- en: '[PRE38]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: And here’s what the result looks like.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是结果的样子。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格源代码
    隐藏代码单元格源代码</summary>
- en: '[PRE39]</details> ![_images/16d64440894686542410530f1944189022be98b1f5e334935ac3564296ad1c1e.png](../Images/20fb308f064e8ec2cf1942d050fc4b3e.png)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE39]</details> ![_images/16d64440894686542410530f1944189022be98b1f5e334935ac3564296ad1c1e.png](../Images/20fb308f064e8ec2cf1942d050fc4b3e.png)'
- en: The most likely values of `N` are near 100, as in the previous model. The most
    likely values of `p` are near 0.2.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`N`的最可能值接近100，与之前的模型一样。`p`的最可能值接近0.2。'
- en: The shape of this contour indicates that these parameters are correlated. If
    `p` is near the low end of the range, the most likely values of `N` are higher;
    if `p` is near the high end of the range, `N` is lower.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这个轮廓的形状表明这些参数是相关的。如果`p`接近范围的低端，`N`的最可能值更高；如果`p`接近范围的高端，`N`更低。
- en: Now that we have a posterior `DataFrame`, we can extract the marginal distributions
    in the usual way.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了后验`DataFrame`，我们可以按照通常的方式提取边际分布。
- en: '[PRE40]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Here’s the posterior distribution for `p`:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这是`p`的后验分布：
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格内容
    隐藏代码单元格内容</summary>
- en: '[PRE41]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '![_images/88d34493745362743711701c087bb8b926c2aa476a6222f310e370eaa4fcada2.png](../Images/bce24822b71de71da5f2b16179ae1316.png)</details>'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '![_images/88d34493745362743711701c087bb8b926c2aa476a6222f310e370eaa4fcada2.png](../Images/bce24822b71de71da5f2b16179ae1316.png)</details>'
- en: The most likely values are near 0.2.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 最可能的值接近0.2。
- en: Here’s the posterior distribution for `N` based on the two-parameter model,
    along with the posterior we got using the one-parameter (hypergeometric) model.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 这是基于两参数模型的`N`的后验分布，以及使用单参数（超几何）模型得到的后验分布。
- en: '[PRE42]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '![_images/ed8daea51a92e0b5585376bd83e1c1ce8cd383a3253cf96f714ace3dda79b2f2.png](../Images/1b61dd820c7d770037e4c7ac250c8c9f.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![_images/ed8daea51a92e0b5585376bd83e1c1ce8cd383a3253cf96f714ace3dda79b2f2.png](../Images/1b61dd820c7d770037e4c7ac250c8c9f.png)'
- en: With the two-parameter model, the mean is a little lower and the 90% credible
    interval is a little narrower.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 使用两参数模型，均值略低，90%的可信区间略窄。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格内容
    隐藏代码单元格内容</summary>
- en: '[PRE43]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE44]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE45]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]</details>'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE46]</details>'
- en: 'The two-parameter model yields a narrower posterior distribution for `N`, compared
    to the one-parameter model, because it takes advantage of an additional source
    of information: the consistency of the two observations.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 与单参数模型相比，两参数模型对`N`的后验分布更窄，因为它利用了额外的信息来源：两个观察的一致性。
- en: To see how this helps, consider a scenario where `N` is relatively low, like
    138 (the posterior mean of the two-parameter model).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解这有何帮助，考虑一个`N`相对较低的情况，比如138（两参数模型的后验均值）。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>
- en: '[PRE47]</details>'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE47]</details>'
- en: Given that we saw 23 bears during the first trial and 19 during the second,
    we can estimate the corresponding value of `p`.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到我们在第一次试验中看到了23只熊，在第二次试验中看到了19只熊，我们可以估计相应的`p`值。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>
- en: '[PRE48]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]</details>'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE49]</details>'
- en: With these parameters, how much variability do you expect in the number of bears
    from one trial to the next? We can quantify that by computing the standard deviation
    of the binomial distribution with these parameters.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些参数，你期望从一次试验到下一次试验中看到的熊的数量有多大变化？我们可以通过计算具有这些参数的二项分布的标准差来量化这一点。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>
- en: '[PRE50]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]</details>'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE51]</details>'
- en: Now let’s consider a second scenario where `N` is 173, the posterior mean of
    the one-parameter model. The corresponding value of `p` is lower.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们考虑第二种情况，其中`N`为173，即一参数模型的后验均值。相应的`p`值较低。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>
- en: '[PRE52]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]</details>'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE53]</details>'
- en: In this scenario, the variation we expect to see from one trial to the next
    is higher.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们期望从一次试验到下一次试验中看到的变化更大。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>
- en: '[PRE54]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]</details>'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE55]</details>'
- en: So if the number of bears we observe is the same in both trials, that would
    be evidence for lower values of `N`, where we expect more consistency. If the
    number of bears is substantially different between the two trials, that would
    be evidence for higher values of `N`.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果我们观察到的熊的数量在两次试验中是相同的，这将是对较低值的`N`的证据，我们预期会有更多的一致性。如果两次试验中观察到的熊的数量有显著差异，这将是对较高值的`N`的证据。
- en: In the actual data, the difference between the two trials is low, which is why
    the posterior mean of the two-parameter model is lower. The two-parameter model
    takes advantage of additional information, which is why the credible interval
    is narrower.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际数据中，两次试验之间的差异很小，这就是为什么两参数模型的后验均值较低。两参数模型利用了额外的信息，这就是为什么可信区间更窄的原因。
- en: Joint and Marginal Distributions
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 联合和边际分布
- en: Marginal distributions are called “marginal” because in a common visualization
    they appear in the margins of the plot.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 边际分布之所以被称为“边际”，是因为在常见的可视化中，它们出现在图的边缘。
- en: Seaborn provides a class called `JointGrid` that creates this visualization.
    The following function uses it to show the joint and marginal distributions in
    a single plot.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn提供了一个名为`JointGrid`的类，用于创建这种可视化。以下函数使用它来在单个图中显示联合和边际分布。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>
- en: '[PRE56]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE56]</details> <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容
    隐藏代码单元格内容</summary>'
- en: '[PRE57]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '![_images/21b675f7d5fd2f0f58754e38aa6c27ca264560d3a3d8662db9785a22d70fac3e.png](../Images/55b8dbaf5a3b329e9bdb684a74fcae7c.png)</details>'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '![_images/21b675f7d5fd2f0f58754e38aa6c27ca264560d3a3d8662db9785a22d70fac3e.png](../Images/55b8dbaf5a3b329e9bdb684a74fcae7c.png)</details>'
- en: A `JointGrid` is a concise way to represent the joint and marginal distributions
    visually.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '`JointGrid`是一种简洁的方式来直观地表示联合和边际分布。'
- en: The Lincoln Index Problem
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 林肯指数问题
- en: 'In [an excellent blog post](http://www.johndcook.com/blog/2010/07/13/lincoln-index/),
    John D. Cook wrote about the Lincoln index, which is a way to estimate the number
    of errors in a document (or program) by comparing results from two independent
    testers. Here’s his presentation of the problem:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在[一篇优秀的博客文章](http://www.johndcook.com/blog/2010/07/13/lincoln-index/)中，John
    D. Cook写道林肯指数，这是一种通过比较两个独立测试者的结果来估计文档（或程序）中错误数量的方法。以下是他对问题的描述：
- en: “Suppose you have a tester who finds 20 bugs in your program. You want to estimate
    how many bugs are really in the program. You know there are at least 20 bugs,
    and if you have supreme confidence in your tester, you may suppose there are around
    20 bugs. But maybe your tester isn’t very good. Maybe there are hundreds of bugs.
    How can you have any idea how many bugs there are? There’s no way to know with
    one tester. But if you have two testers, you can get a good idea, even if you
    don’t know how skilled the testers are.”
  id: totrans-176
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “假设你有一个测试者在你的程序中发现了20个错误。你想要估计程序中实际有多少错误。你知道至少有20个错误，如果你对你的测试者非常有信心，你可能会假设大约有20个错误。但也许你的测试者不是很好。也许有数百个错误。你怎么知道有多少错误？有没有办法知道一个测试者。但如果你有两个测试者，即使你不知道测试者有多么熟练，你也可以得到一个好主意。”
- en: Suppose the first tester finds 20 bugs, the second finds 15, and they find 3
    in common; how can we estimate the number of bugs?
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 假设第一个测试者发现20个错误，第二个发现15个，并且它们共同发现了3个；我们如何估计错误的数量？
- en: This problem is similar to the Grizzly Bear problem, so I’ll represent the data
    in the same way.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题类似于灰熊问题，所以我会以相同的方式表示数据。
- en: '[PRE58]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: But in this case it is probably not reasonable to assume that the testers have
    the same probability of finding a bug. So I’ll define two parameters, `p0` for
    the probability that the first tester finds a bug, and `p1` for the probability
    that the second tester finds a bug.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 但在这种情况下，假设测试者具有相同的发现错误的概率可能是不合理的。所以我将定义两个参数，`p0`表示第一个测试者发现错误的概率，`p1`表示第二个测试者发现错误的概率。
- en: I will continue to assume that the probabilities are independent, which is like
    assuming that all bugs are equally easy to find. That might not be a good assumption,
    but let’s stick with it for now.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 我将继续假设这些概率是独立的，这就像假设所有的错误都同样容易找到。这可能不是一个好的假设，但现在让我们坚持下去。
- en: As an example, suppose we know that the probabilities are 0.2 and 0.15.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们知道概率是0.2和0.15。
- en: '[PRE59]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'We can compute the array of probabilities, `y`, like this:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以这样计算概率数组`y`：
- en: '[PRE60]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: With these probabilities, there is a 68% chance that neither tester finds the
    bug and a 3% chance that both do.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些概率，两个测试者都找不到错误的概率为68%，两个测试者都找到错误的概率为3%。
- en: Pretending that these probabilities are known, we can compute the posterior
    distribution for `N`. Here’s a prior distribution that’s uniform from 32 to 350
    bugs.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 假设这些概率已知，我们可以计算`N`的后验分布。这是一个先验分布，从32到350个错误均匀分布。
- en: '[PRE63]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '|  | probs |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '|  | 概率 |'
- en: '| --- | --- |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| N |  |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| N |  |'
- en: '| --- | --- |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 32 | 0.015625 |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| 32 | 0.015625 |'
- en: '| 37 | 0.015625 |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| 37 | 0.015625 |'
- en: '| 42 | 0.015625 |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| 42 | 0.015625 |'
- en: I’ll put the data in an array, with 0 as a place-keeper for the unknown value
    `k00`.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我将把数据放在一个数组中，0作为未知值`k00`的占位符。
- en: '[PRE64]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: And here are the likelihoods for each value of `N`, with `ps` as a constant.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个`N`值，这里是每个可能性，`ps`是一个常数。
- en: '[PRE65]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: We can compute the posterior in the usual way.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照通常的方式计算后验。
- en: '[PRE66]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '[PRE67]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: And here’s what it looks like.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是它的样子。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格源代码隐藏代码单元格源代码</summary>
- en: '[PRE68]</details> ![_images/d563e5ed6f947b2470b1ec9317f0963741fcd3f9f26c5815d72fb8e75cccd114.png](../Images/46976d5c53d8c858858d1ef0d983d0d6.png)<details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE68]</details> ![_images/d563e5ed6f947b2470b1ec9317f0963741fcd3f9f26c5815d72fb8e75cccd114.png](../Images/46976d5c53d8c858858d1ef0d983d0d6.png)<details
    class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容隐藏代码单元格内容</summary>'
- en: '[PRE69]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]</details>'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE70]</details>'
- en: With the assumption that `p0` and `p1` are known to be `0.2` and `0.15`, the
    posterior mean is 102 with 90% credible interval (77, 127). But this result is
    based on the assumption that we know the probabilities, and we don’t.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 假设`p0`和`p1`已知为`0.2`和`0.15`，后验均值为102，90%的可信区间为(77, 127)。但这个结果是基于我们知道概率的假设，而我们并不知道。
- en: Three-Parameter Model
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 三参数模型
- en: 'What we need is a model with three parameters: `N`, `p0`, and `p1`. We’ll use
    `prior_N` again for the prior distribution of `N`, and here are the priors for
    `p0` and `p1`:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个有三个参数的模型：`N`，`p0`和`p1`。我们将再次使用`prior_N`作为`N`的先验分布，这是`p0`和`p1`的先验分布：
- en: '[PRE71]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Now we have to assemble them into a joint prior with three dimensions. I’ll
    start by putting the first two into a `DataFrame`.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们必须将它们组装成一个具有三个维度的联合先验。我将首先把前两个放入`DataFrame`中。
- en: '[PRE72]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Now I’ll stack them, as in the previous example, and put the result in a `Pmf`.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我将它们堆叠起来，就像之前的例子一样，并将结果放入`Pmf`中。
- en: '[PRE74]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '|  |  | probs |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '|  |  | 概率 |'
- en: '| --- | --- | --- |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| N | p0 |  |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| N | p0 |  |'
- en: '| --- | --- | --- |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 32 | 0.00 | 0.000306 |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| 32 | 0.00 | 0.000306 |'
- en: '| 0.02 | 0.000306 |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| 0.02 | 0.000306 |'
- en: '| 0.04 | 0.000306 |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| 0.04 | 0.000306 |'
- en: We can use `make_joint` again to add in the third parameter.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以再次使用`make_joint`来添加第三个参数。
- en: '[PRE75]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: The result is a `DataFrame` with values of `N` and `p0` in a `MultiIndex` that
    goes down the rows and values of `p1` in an index that goes across the columns.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个`DataFrame`，`N`和`p0`的值在沿行向下的`MultiIndex`中，`p1`的值在沿列的索引中。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容隐藏代码单元格内容</summary>
- en: '[PRE77]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '|  | p1 | 0.00 | 0.02 | 0.04 | 0.06 | 0.08 | 0.10 | 0.12 | 0.14 | 0.16 | 0.18
    | ... | 0.82 | 0.84 | 0.86 | 0.88 | 0.90 | 0.92 | 0.94 | 0.96 | 0.98 | 1.00 |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '|  | p1 | 0.00 | 0.02 | 0.04 | 0.06 | 0.08 | 0.10 | 0.12 | 0.14 | 0.16 | 0.18
    | ... | 0.82 | 0.84 | 0.86 | 0.88 | 0.90 | 0.92 | 0.94 | 0.96 | 0.98 | 1.00 |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| N | p0 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| N | p0 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| 32 | 0.00 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006
    | 0.000006 | 0.000006 | 0.000006 | 0.000006 | ... | 0.000006 | 0.000006 | 0.000006
    | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| 32 | 0.00 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006
    | 0.000006 | 0.000006 | 0.000006 | 0.000006 | ... | 0.000006 | 0.000006 | 0.000006
    | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 |'
- en: '| 0.02 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 |
    0.000006 | 0.000006 | 0.000006 | 0.000006 | ... | 0.000006 | 0.000006 | 0.000006
    | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| 0.02 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 |
    0.000006 | 0.000006 | 0.000006 | 0.000006 | ... | 0.000006 | 0.000006 | 0.000006
    | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 |'
- en: '| 0.04 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 |
    0.000006 | 0.000006 | 0.000006 | 0.000006 | ... | 0.000006 | 0.000006 | 0.000006
    | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| 0.04 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 |
    0.000006 | 0.000006 | 0.000006 | 0.000006 | ... | 0.000006 | 0.000006 | 0.000006
    | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 | 0.000006 |'
- en: 3 rows × 51 columns</details>
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 3行×51列</details>
- en: 'Now I’ll apply `stack` again:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我再次应用`stack`：
- en: '[PRE78]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '|  |  |  | probs |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '|  |  |  | probs |'
- en: '| --- | --- | --- | --- |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| N | p0 | p1 |  |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| N | p0 | p1 |  |'
- en: '| --- | --- | --- | --- |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 32 | 0.0 | 0.00 | 0.000006 |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| 32 | 0.0 | 0.00 | 0.000006 |'
- en: '| 0.02 | 0.000006 |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| 0.02 | 0.000006 |'
- en: '| 0.04 | 0.000006 |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| 0.04 | 0.000006 |'
- en: The result is a `Pmf` with a three-column `MultiIndex` containing all possible
    triplets of parameters.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个带有三列`MultiIndex`的`Pmf`，其中包含所有可能的参数三元组。
- en: The number of rows is the product of the number of values in all three priors,
    which is almost 170,000.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 行数是三个先验值的值的乘积，几乎为170,000。
- en: '[PRE79]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: That’s still small enough to be practical, but it will take longer to compute
    the likelihoods than in the previous examples.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 这仍然足够小，以至于实用，但计算可能需要比之前的例子更长的时间。
- en: 'Here’s the loop that computes the likelihoods; it’s similar to the one in the
    previous section:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这是计算可能性的循环；它类似于前一节中的循环：
- en: '[PRE81]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: We can compute the posterior in the usual way.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照通常的方式计算后验概率。
- en: '[PRE82]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Now, to extract the marginal distributions, we could unstack the joint posterior
    as we did in the previous section. But `Pmf` provides a version of `marginal`
    that works with a `Pmf` rather than a `DataFrame`. Here’s how we use it to get
    the posterior distribution for `N`.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要提取边缘分布，我们可以像在前一节中那样取消堆叠联合后验。但`Pmf`提供了一个`marginal`的版本，它适用于`Pmf`而不是`DataFrame`。这是我们如何使用它来获得`N`的后验分布。
- en: '[PRE84]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: And here’s what it looks like.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 这是它的样子。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格源代码
    隐藏代码单元格源代码</summary>
- en: '[PRE85]</details> ![_images/f2cd695e438e075589cab69bddc2955d4dd4d16f5b69b8fba877124b600d71f8.png](../Images/07b5b2a3692ed9fc4d3e0ffc911cf226.png)<details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell source Hide code cell source</summary>'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE85]</details> ![_images/f2cd695e438e075589cab69bddc2955d4dd4d16f5b69b8fba877124b600d71f8.png](../Images/07b5b2a3692ed9fc4d3e0ffc911cf226.png)<details
    class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格源代码
    隐藏代码单元格源代码</summary>'
- en: '[PRE86]</details>'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE86]</details>'
- en: '[PRE87]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: The posterior mean is 105 bugs, which suggests that there are still many bugs
    the testers have not found.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 后验均值为105只虫子，这表明测试人员尚未发现许多虫子。
- en: Here are the posteriors for `p0` and `p1`.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 这是`p0`和`p1`的后验分布。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell source Hide code cell source</summary>
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格源代码
    隐藏代码单元格源代码</summary>
- en: '[PRE88]</details> ![_images/10402507c405cb67e580cb3cf7c157f06e4c496f01ca0caf2388ddcdc8fdfc15.png](../Images/1906c3da6bf6bfc666e5825211e6bcaa.png)<details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE88]</details> ![_images/10402507c405cb67e580cb3cf7c157f06e4c496f01ca0caf2388ddcdc8fdfc15.png](../Images/1906c3da6bf6bfc666e5825211e6bcaa.png)<details
    class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格内容
    隐藏代码单元格内容</summary>'
- en: '[PRE89]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE90]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE91]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]</details>'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE92]</details>'
- en: Comparing the posterior distributions, the tester who found more bugs probably
    has a higher probability of finding bugs. The posterior means are about 23% and
    18%. But the distributions overlap, so we should not be too sure.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 比较后验分布，发现更多虫子的测试人员可能有更高的发现虫子的概率。后验均值约为23%和18%。但分布有重叠，所以我们不应太肯定。
- en: This is the first example we’ve seen with three parameters. As the number of
    parameters increases, the number of combinations increases quickly. The method
    we’ve been using so far, enumerating all possible combinations, becomes impractical
    if the number of parameters is more than 3 or 4.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们看到的第一个具有三个参数的例子。随着参数数量的增加，组合数量会迅速增加。到目前为止我们一直使用的方法，枚举所有可能的组合，如果参数数量超过3或4个，就会变得不切实际。
- en: However there are other methods that can handle models with many more parameters,
    as we’ll see in <<_MCMC>>.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，还有其他可以处理更多参数模型的方法，我们将在<<_MCMC>>中看到。
- en: Summary
  id: totrans-277
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: The problems in this chapter are examples of [mark and recapture](https://en.wikipedia.org/wiki/Mark_and_recapture)
    experiments, which are used in ecology to estimate animal populations. They also
    have applications in engineering, as in the Lincoln index problem. And in the
    exercises you’ll see that they are used in epidemiology, too.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的问题是[标记和重捕](https://en.wikipedia.org/wiki/Mark_and_recapture)实验的例子，用于生态学中估计动物种群。它们在工程中也有应用，比如林肯指数问题。在练习中，你会看到它们在流行病学中也有用途。
- en: 'This chapter introduces two new probability distributions:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了两种新的概率分布：
- en: The hypergeometric distribution is a variation of the binomial distribution
    in which samples are drawn from the population without replacement.
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超几何分布是二项分布的一种变体，其中从人群中抽取样本而不进行替换。
- en: The multinomial distribution is a generalization of the binomial distribution
    where there are more than two possible outcomes.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多项分布是二项分布的一种推广，其中有两种以上的可能结果。
- en: Also in this chapter, we saw the first example of a model with three parameters.
    We’ll see more in subsequent chapters.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在本章中，我们看到了一个具有三个参数的模型的第一个例子。在后续章节中我们会看到更多。
- en: Exercises
  id: totrans-283
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习
- en: '**Exercise:** [In an excellent paper](http://chao.stat.nthu.edu.tw/wordpress/paper/110.pdf),
    Anne Chao explains how mark and recapture experiments are used in epidemiology
    to estimate the prevalence of a disease in a human population based on multiple
    incomplete lists of cases.'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习：** [在一篇优秀的论文中](http://chao.stat.nthu.edu.tw/wordpress/paper/110.pdf)，Anne
    Chao解释了标记和重捕实验在流行病学中如何根据多个不完整的病例清单估计人群中疾病的患病率。'
- en: One of the examples in that paper is a study “to estimate the number of people
    who were infected by hepatitis in an outbreak that occurred in and around a college
    in northern Taiwan from April to July 1995.”
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一篇论文中的一个例子是一项研究，“估计1995年4月至7月台湾北部某学院及周边地区爆发的一起乙型肝炎感染的人数。”
- en: 'Three lists of cases were available:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 有三个病例列表可用：
- en: 135 cases identified using a serum test.
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用血清测试鉴定了135例病例。
- en: 122 cases reported by local hospitals.
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当地医院报告了122例病例。
- en: 126 cases reported on questionnaires collected by epidemiologists.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由流行病学家收集的调查问卷报告了126例病例。
- en: In this exercise, we’ll use only the first two lists; in the next exercise we’ll
    bring in the third list.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将只使用前两个列表；在下一个练习中，我们将引入第三个列表。
- en: Make a joint prior and update it using this data, then compute the posterior
    mean of `N` and a 90% credible interval.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 制作一个联合先验，并使用这些数据进行更新，然后计算`N`的后验均值和90%的可信区间。
- en: The following array contains 0 as a place-holder for the unknown value of `k00`,
    followed by known values of `k01`, `k10`, and `k11`.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 以下数组包含0作为`k00`的未知值的占位符，然后是`k01`、`k10`和`k11`的已知值。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格内容
    隐藏代码单元格内容</summary>
- en: '[PRE93]</details>'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE93]</details>'
- en: These data indicate that there are 73 cases on the second list that are not
    on the first, 86 cases on the first list that are not on the second, and 49 cases
    on both lists.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据表明，第二个列表中有73例病例不在第一个列表中，第一个列表中有86例病例不在第二个列表中，两个列表中都有49例病例。
- en: To keep things simple, we’ll assume that each case has the same probability
    of appearing on each list. So we’ll use a two-parameter model where `N` is the
    total number of cases and `p` is the probability that any case appears on any
    list.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化问题，我们假设每个病例在每个列表上出现的概率相同。因此，我们将使用一个两参数模型，其中`N`是病例的总数，`p`是任何病例出现在任何列表上的概率。
- en: Here are priors you can start with (but feel free to modify them).
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您可以开始使用的先验（但请随意修改）。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="Toggle hidden content">显示代码单元格内容
    隐藏代码单元格内容</summary>
- en: '[PRE94]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '|  | probs |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '|  | 概率 |'
- en: '| --- | --- |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| N |  |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '| N |  |'
- en: '| --- | --- |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 200 | 0.016667 |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
  zh: '| 200 | 0.016667 |'
- en: '| 205 | 0.016667 |'
  id: totrans-305
  prefs: []
  type: TYPE_TB
  zh: '| 205 | 0.016667 |'
- en: '| 210 | 0.016667 |</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '| 210 | 0.016667 |</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE95]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '|  | probs |'
  id: totrans-308
  prefs: []
  type: TYPE_TB
  zh: '|  | 概率 |'
- en: '| --- | --- |'
  id: totrans-309
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| p |  |'
  id: totrans-310
  prefs: []
  type: TYPE_TB
  zh: '| p |  |'
- en: '| --- | --- |'
  id: totrans-311
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 0.00 | 0.02 |'
  id: totrans-312
  prefs: []
  type: TYPE_TB
  zh: '| 0.00 | 0.02 |'
- en: '| 0.02 | 0.02 |'
  id: totrans-313
  prefs: []
  type: TYPE_TB
  zh: '| 0.02 | 0.02 |'
- en: '| 0.04 | 0.02 |</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '| 0.04 | 0.02 |</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE96]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '| p | 0.00 | 0.02 | 0.04 | 0.06 | 0.08 | 0.10 | 0.12 | 0.14 | 0.16 | 0.18 |
    ... | 0.80 | 0.82 | 0.84 | 0.86 | 0.88 | 0.90 | 0.92 | 0.94 | 0.96 | 0.98 |'
  id: totrans-316
  prefs: []
  type: TYPE_TB
  zh: '| p | 0.00 | 0.02 | 0.04 | 0.06 | 0.08 | 0.10 | 0.12 | 0.14 | 0.16 | 0.18 |
    ... | 0.80 | 0.82 | 0.84 | 0.86 | 0.88 | 0.90 | 0.92 | 0.94 | 0.96 | 0.98 |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-317
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| N |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| N |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-319
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| 200 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333
    | 0.000333 | 0.000333 | 0.000333 | ... | 0.000333 | 0.000333 | 0.000333 | 0.000333
    | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '| 200 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333
    | 0.000333 | 0.000333 | 0.000333 | ... | 0.000333 | 0.000333 | 0.000333 | 0.000333
    | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 |'
- en: '| 205 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333
    | 0.000333 | 0.000333 | 0.000333 | ... | 0.000333 | 0.000333 | 0.000333 | 0.000333
    | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| 205 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333
    | 0.000333 | 0.000333 | 0.000333 | ... | 0.000333 | 0.000333 | 0.000333 | 0.000333
    | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 |'
- en: '| 210 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333
    | 0.000333 | 0.000333 | 0.000333 | ... | 0.000333 | 0.000333 | 0.000333 | 0.000333
    | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 |'
  id: totrans-322
  prefs: []
  type: TYPE_TB
  zh: '| 210 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333
    | 0.000333 | 0.000333 | 0.000333 | ... | 0.000333 | 0.000333 | 0.000333 | 0.000333
    | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 | 0.000333 |'
- en: 3 rows × 50 columns</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 3行×50列</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容 隐藏代码单元格内容</summary>
- en: '[PRE97]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '|  |  | probs |'
  id: totrans-325
  prefs: []
  type: TYPE_TB
  zh: '|  |  | 概率 |'
- en: '| --- | --- | --- |'
  id: totrans-326
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| N | p |  |'
  id: totrans-327
  prefs: []
  type: TYPE_TB
  zh: '| N | p |  |'
- en: '| --- | --- | --- |'
  id: totrans-328
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 200 | 0.00 | 0.000333 |'
  id: totrans-329
  prefs: []
  type: TYPE_TB
  zh: '| 200 | 0.00 | 0.000333 |'
- en: '| 0.02 | 0.000333 |'
  id: totrans-330
  prefs: []
  type: TYPE_TB
  zh: '| 0.02 | 0.000333 |'
- en: '| 0.04 | 0.000333 |</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '| 0.04 | 0.000333 |</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE98]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE98]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE99]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '[PRE100]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE100]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE101]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE101]</details> <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容
    隐藏代码单元格内容</summary>'
- en: '[PRE102]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: '![_images/998e24d1fe296c7997509135f11d22996957981e69247c1875908e46389eacb9.png](../Images/a17e40d075e72408506d7363d6caf227.png)</details><details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '![_images/998e24d1fe296c7997509135f11d22996957981e69247c1875908e46389eacb9.png](../Images/a17e40d075e72408506d7363d6caf227.png)</details><details
    class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE103]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '![_images/a001724951bd27254c3c107ea7cf2ce113b466d7277d6263c3c29ff9818a6abb.png](../Images/5e997d92efb728f58c2e94d973ddec43.png)</details><details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '![_images/a001724951bd27254c3c107ea7cf2ce113b466d7277d6263c3c29ff9818a6abb.png](../Images/5e997d92efb728f58c2e94d973ddec43.png)</details><details
    class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE104]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '[PRE105]</details>'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE105]</details>'
- en: '**Exercise:** Now let’s do the version of the problem with all three lists.
    Here’s the data from Chou’s paper:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习：** 现在让我们使用所有三个列表的问题版本。这是Chou论文中的数据：'
- en: '[PRE106]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Write a loop that computes the likelihood of the data for each pair of parameters,
    then update the prior and compute the posterior mean of `N`. How does it compare
    to the results using only the first two lists?
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个循环，计算每对参数的数据可能性，然后更新先验并计算`N`的后验均值。与仅使用前两个列表的结果相比如何？
- en: Here’s the data in a NumPy array (in reverse order).
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个NumPy数组中的数据（顺序相反）。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>
- en: '[PRE107]</details>'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE107]</details>'
- en: Again, the first value is a place-keeper for the unknown `k000`. The second
    value is `k001`, which means there are 63 cases that appear on the third list
    but not the first two. And the last value is `k111`, which means there are 28
    cases that appear on all three lists.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，第一个值是未知的`k000`的占位符。第二个值是`k001`，这意味着有63个案例出现在第三个列表上，但前两个列表上没有。最后一个值是`k111`，这意味着有28个案例同时出现在三个列表上。
- en: In the two-list version of the problem we computed `ps` by enumerating the combinations
    of `p` and `q`.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 在问题的两个列表版本中，我们通过枚举`p`和`q`的组合来计算`ps`。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>
- en: '[PRE108]</details>'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE108]</details>'
- en: We could do the same thing for the three-list version, computing the probability
    for each of the eight categories. But we can generalize it by recognizing that
    we are computing the cartesian product of `p` and `q`, repeated once for each
    list.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对三个列表版本做同样的事情，计算每个八个类别的概率。但是我们可以通过认识到我们正在计算`p`和`q`的笛卡尔积来进行泛化，每个列表重复一次。
- en: 'And we can use the following function (based on [this StackOverflow answer](https://stackoverflow.com/questions/58242078/cartesian-product-of-arbitrary-lists-in-pandas/58242079#58242079))
    to compute Cartesian products:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下函数（基于[此StackOverflow答案](https://stackoverflow.com/questions/58242078/cartesian-product-of-arbitrary-lists-in-pandas/58242079#58242079)）来计算笛卡尔积：
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>
- en: '[PRE109]</details>'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE109]</details>'
- en: 'Here’s an example with `p=0.2`:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个`p=0.2`的例子：
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>
- en: '[PRE110]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '|  | level_0 | level_1 | level_2 |'
  id: totrans-359
  prefs: []
  type: TYPE_TB
  zh: '|  | level_0 | level_1 | level_2 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-360
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 0 | 0.8 | 0.8 | 0.8 |'
  id: totrans-361
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 0.8 | 0.8 | 0.8 |'
- en: '| 1 | 0.8 | 0.8 | 0.2 |'
  id: totrans-362
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 0.8 | 0.8 | 0.2 |'
- en: '| 2 | 0.8 | 0.2 | 0.8 |'
  id: totrans-363
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 0.8 | 0.2 | 0.8 |'
- en: '| 3 | 0.8 | 0.2 | 0.2 |'
  id: totrans-364
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 0.8 | 0.2 | 0.2 |'
- en: '| 4 | 0.2 | 0.8 | 0.8 |'
  id: totrans-365
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 0.2 | 0.8 | 0.8 |'
- en: '| 5 | 0.2 | 0.8 | 0.2 |'
  id: totrans-366
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 0.2 | 0.8 | 0.2 |'
- en: '| 6 | 0.2 | 0.2 | 0.8 |'
  id: totrans-367
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 0.2 | 0.2 | 0.8 |'
- en: '| 7 | 0.2 | 0.2 | 0.2 |</details>'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '| 7 | 0.2 | 0.2 | 0.2 |</details>'
- en: 'To compute the probability for each category, we take the product across the
    columns:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 为了计算每个类别的概率，我们沿着列进行乘积：
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>
- en: '[PRE111]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '[PRE112]</details>'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE112]</details>'
- en: Now you finish it off from there.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你完成它。
- en: <details class="hide above-input"><summary aria-label="Toggle hidden content">Show
    code cell content Hide code cell content</summary>
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>
- en: '[PRE113]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE113]</details> <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容
    隐藏代码单元格内容</summary>'
- en: '[PRE114]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '[PRE115]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE115]</details> <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容
    隐藏代码单元格内容</summary>'
- en: '[PRE116]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE116]</details> <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容
    隐藏代码单元格内容</summary>'
- en: '[PRE117]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '![_images/2a20c097ea1f8ffbd3697c9ca7a0d79ff62c241cc153d5cfc47870b5705623a8.png](../Images/6c7ad7fc6852fba14bdb8065c19e8e36.png)</details><details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '![_images/2a20c097ea1f8ffbd3697c9ca7a0d79ff62c241cc153d5cfc47870b5705623a8.png](../Images/6c7ad7fc6852fba14bdb8065c19e8e36.png)</details><details
    class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE118]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE118]</details> <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容
    隐藏代码单元格内容</summary>'
- en: '[PRE119]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '![_images/d476bca686cc3860e47a1b0e98715ff66d2bb58819764da404bce88974e8024c.png](../Images/d705a7e942009d009b649c2a2c1cb87a.png)</details><details
    class="hide above-input"><summary aria-label="Toggle hidden content">Show code
    cell content Hide code cell content</summary>'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '![_images/d476bca686cc3860e47a1b0e98715ff66d2bb58819764da404bce88974e8024c.png](../Images/d705a7e942009d009b649c2a2c1cb87a.png)</details><details
    class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容 隐藏代码单元格内容</summary>'
- en: '[PRE120]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: '[PRE121]</details> <details class="hide above-input"><summary aria-label="Toggle
    hidden content">Show code cell content Hide code cell content</summary>'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE121]</details> <details class="hide above-input"><summary aria-label="切换隐藏内容">显示代码单元格内容
    隐藏代码单元格内容</summary>'
- en: '[PRE122]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: '[PRE123]</details>'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE123]</details>'
